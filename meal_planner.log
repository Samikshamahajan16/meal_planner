2025-05-25 19:36:00,852 [INFO] CSV loaded successfully.
2025-05-25 19:36:00,904 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-05-25 19:36:00,904 [INFO] [33mPress CTRL+C to quit[0m
2025-05-25 19:36:00,908 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-25 19:36:02,540 [INFO] CSV loaded successfully.
2025-05-25 19:36:02,562 [WARNING]  * Debugger is active!
2025-05-25 19:36:02,571 [INFO]  * Debugger PIN: 912-217-141
2025-05-25 19:36:06,466 [INFO] 127.0.0.1 - - [25/May/2025 19:36:06] "GET / HTTP/1.1" 200 -
2025-05-25 19:36:23,933 [INFO] Received Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."
2025-05-25 19:36:24,146 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-14a446b9-2fd7-44e1-bef8-3882486f277f', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-05-25 19:36:24,230 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-25 19:36:24,230 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-25 19:36:25,345 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F259392530>
2025-05-25 19:36:25,345 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F25895C0C0> server_hostname='api.openai.com' timeout=5.0
2025-05-25 19:36:25,365 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2593925C0>
2025-05-25 19:36:25,366 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-25 19:36:25,367 [DEBUG] send_request_headers.complete
2025-05-25 19:36:25,367 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-25 19:36:25,367 [DEBUG] send_request_body.complete
2025-05-25 19:36:25,367 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-25 19:36:27,997 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 25 May 2025 14:06:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1627'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1633'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29905'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'190ms'), (b'x-request-id', b'req_c3aed08edf6c221b94db871714f1802d'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=wn6wF.pSl.GnpCZp_RAeXu.NUkDyqwZjf5rkBW0oah8-1748181987-1.0.1.1-1kuEWubhPrHYFVtyIjClvMjZ9BH_8LSUNVMhcuUqj7FcjVmAwXKEm8WfbknRs23Xd4y2peahLZI31Fz4nTD11gl0_Oa1RRij2sMWF9vuKkY; path=/; expires=Sun, 25-May-25 14:36:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=SwTYfMEni5TkQeBBJHPM2xJN_pl7WXXLW48.pjCiAPA-1748181987964-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'945597e06a315508-DEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-25 19:36:27,997 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-25 19:36:27,997 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-25 19:36:27,997 [DEBUG] receive_response_body.complete
2025-05-25 19:36:27,997 [DEBUG] response_closed.started
2025-05-25 19:36:27,997 [DEBUG] response_closed.complete
2025-05-25 19:36:27,997 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 25 May 2025 14:06:27 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '1627'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1633'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29905'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '190ms'), ('x-request-id', 'req_c3aed08edf6c221b94db871714f1802d'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=wn6wF.pSl.GnpCZp_RAeXu.NUkDyqwZjf5rkBW0oah8-1748181987-1.0.1.1-1kuEWubhPrHYFVtyIjClvMjZ9BH_8LSUNVMhcuUqj7FcjVmAwXKEm8WfbknRs23Xd4y2peahLZI31Fz4nTD11gl0_Oa1RRij2sMWF9vuKkY; path=/; expires=Sun, 25-May-25 14:36:27 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=SwTYfMEni5TkQeBBJHPM2xJN_pl7WXXLW48.pjCiAPA-1748181987964-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '945597e06a315508-DEL'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-05-25 19:36:27,997 [DEBUG] request_id: req_c3aed08edf6c221b94db871714f1802d
2025-05-25 19:36:28,005 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1800,
  "protein_pct": 30,
  "carbs_pct": 40,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-05-25 19:36:28,007 [INFO]  Extracted Params: {'calories_target': 1800, 'protein_pct': 30, 'carbs_pct': 40, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-05-25 19:36:28,020 [INFO]  Meal plan generated with 6 dishes
2025-05-25 19:36:28,030 [INFO] 127.0.0.1 - - [25/May/2025 19:36:28] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-05-25 19:38:43,872 [INFO] CSV loaded successfully.
2025-05-25 19:38:43,908 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-05-25 19:38:43,908 [INFO] [33mPress CTRL+C to quit[0m
2025-05-25 19:38:43,908 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-25 19:38:45,567 [INFO] CSV loaded successfully.
2025-05-25 19:38:45,588 [WARNING]  * Debugger is active!
2025-05-25 19:38:45,592 [INFO]  * Debugger PIN: 912-217-141
2025-05-25 19:38:52,320 [INFO] 127.0.0.1 - - [25/May/2025 19:38:52] "GET / HTTP/1.1" 200 -
2025-05-25 19:38:52,886 [INFO] 127.0.0.1 - - [25/May/2025 19:38:52] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-05-25 19:39:09,650 [INFO] Received Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."
2025-05-25 19:39:09,903 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b5436c3b-548d-43e1-a9cb-b99ffebc79a4', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-05-25 19:39:09,996 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-25 19:39:09,996 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-25 19:39:10,128 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001ABC870A1D0>
2025-05-25 19:39:10,128 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001ABC7CCC0C0> server_hostname='api.openai.com' timeout=5.0
2025-05-25 19:39:10,152 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001ABC870A260>
2025-05-25 19:39:10,152 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-25 19:39:10,152 [DEBUG] send_request_headers.complete
2025-05-25 19:39:10,152 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-25 19:39:10,152 [DEBUG] send_request_body.complete
2025-05-25 19:39:10,152 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-25 19:39:11,619 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 25 May 2025 14:09:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'965'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'977'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29905'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'190ms'), (b'x-request-id', b'req_588493dcab336edf4e7da3e9a780d521'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=RQRujkMdyFsm_mhUiUOMVyIz0JeuufiwjdqN8Grp1iU-1748182151-1.0.1.1-8FmPFeSUPK9gM080DfCht8.1boA1zSFusCYKWZVHCC4JGfGISS4bL3Ql4Ts4L7uMcBAQiDvDggMQMPDDDOdWZdq_jh.1knNBbQ8lMbwGXBc; path=/; expires=Sun, 25-May-25 14:39:11 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=ORYDUITVyiSPDK9z61jtbGfqdNn0L0rew93mbi5VsdI-1748182151594-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94559be65e028990-DEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-25 19:39:11,619 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-25 19:39:11,619 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-25 19:39:11,619 [DEBUG] receive_response_body.complete
2025-05-25 19:39:11,619 [DEBUG] response_closed.started
2025-05-25 19:39:11,619 [DEBUG] response_closed.complete
2025-05-25 19:39:11,619 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 25 May 2025 14:09:11 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '965'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '977'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29905'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '190ms'), ('x-request-id', 'req_588493dcab336edf4e7da3e9a780d521'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=RQRujkMdyFsm_mhUiUOMVyIz0JeuufiwjdqN8Grp1iU-1748182151-1.0.1.1-8FmPFeSUPK9gM080DfCht8.1boA1zSFusCYKWZVHCC4JGfGISS4bL3Ql4Ts4L7uMcBAQiDvDggMQMPDDDOdWZdq_jh.1knNBbQ8lMbwGXBc; path=/; expires=Sun, 25-May-25 14:39:11 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=ORYDUITVyiSPDK9z61jtbGfqdNn0L0rew93mbi5VsdI-1748182151594-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94559be65e028990-DEL'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-05-25 19:39:11,619 [DEBUG] request_id: req_588493dcab336edf4e7da3e9a780d521
2025-05-25 19:39:11,645 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1800,
  "protein_pct": 30,
  "carbs_pct": 40,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-05-25 19:39:11,645 [INFO]  Extracted Params: {'calories_target': 1800, 'protein_pct': 30, 'carbs_pct': 40, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-05-25 19:39:11,667 [INFO]  Meal plan generated with 6 dishes
2025-05-25 19:39:11,667 [INFO] 127.0.0.1 - - [25/May/2025 19:39:11] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-05-25 19:40:28,379 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\flask\\json\\__init__.py', reloading
2025-05-25 19:40:28,379 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\werkzeug\\wrappers\\response.py', reloading
2025-05-25 19:40:28,394 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\optimize\\__init__.py', reloading
2025-05-25 19:40:28,405 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\optimize\\_optimize.py', reloading
2025-05-25 19:40:28,488 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\optimize\\_minimize.py', reloading
2025-05-25 19:40:28,507 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\optimize\\_root.py', reloading
2025-05-25 19:40:28,521 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\optimize\\_root_scalar.py', reloading
2025-05-25 19:40:28,533 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\optimize\\_minpack_py.py', reloading
2025-05-25 19:40:28,572 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\optimize\\_zeros_py.py', reloading
2025-05-25 19:40:28,603 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\optimize\\_nonlin.py', reloading
2025-05-25 19:40:28,632 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\optimize\\_linprog.py', reloading
2025-05-25 19:40:29,295 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-25 19:40:31,237 [INFO] CSV loaded successfully.
2025-05-25 19:40:31,271 [WARNING]  * Debugger is active!
2025-05-25 19:40:31,271 [INFO]  * Debugger PIN: 912-217-141
2025-05-25 19:44:12,416 [INFO] CSV loaded successfully.
2025-05-25 19:44:12,447 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-05-25 19:44:12,447 [INFO] [33mPress CTRL+C to quit[0m
2025-05-25 19:44:12,454 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-25 19:44:14,102 [INFO] CSV loaded successfully.
2025-05-25 19:44:14,126 [WARNING]  * Debugger is active!
2025-05-25 19:44:14,131 [INFO]  * Debugger PIN: 912-217-141
2025-05-25 19:44:24,213 [INFO] 127.0.0.1 - - [25/May/2025 19:44:24] "GET / HTTP/1.1" 200 -
2025-05-25 19:44:29,690 [INFO] 127.0.0.1 - - [25/May/2025 19:44:29] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-05-25 19:44:33,148 [INFO] Received Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."
2025-05-25 19:44:33,530 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-745e04ba-c6e4-45af-b8bc-f095a6625792', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-05-25 19:44:33,654 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-25 19:44:33,655 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-25 19:44:33,703 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002053C07E170>
2025-05-25 19:44:33,704 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000002053B63C0C0> server_hostname='api.openai.com' timeout=5.0
2025-05-25 19:44:33,729 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002053C07E200>
2025-05-25 19:44:33,729 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-25 19:44:33,729 [DEBUG] send_request_headers.complete
2025-05-25 19:44:33,729 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-25 19:44:33,729 [DEBUG] send_request_body.complete
2025-05-25 19:44:33,729 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-25 19:44:35,542 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 25 May 2025 14:14:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'964'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1138'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29905'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'190ms'), (b'x-request-id', b'req_aae4349579f2666ce0e263057d1b3b89'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=WYII.9n3SmmQ_llFNjUuGufzDA2ApQmD7ZGeMaWzLIE-1748182475-1.0.1.1-JKRbXaA9F7WYTdEvzCFrZpo0gK43Xgm0SCQU27Sw3iZO0fMSI411dyNrSD691CejyF_72EbmCHHonyMeqXSwsMK.n2WO0_2cefVHkS1b09A; path=/; expires=Sun, 25-May-25 14:44:35 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=z6d_bz964GVeOP6qceAXisvClAbnwJZ23ZmtXaHCCHE-1748182475520-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9455a3ccb968918b-DEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-25 19:44:35,542 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-25 19:44:35,542 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-25 19:44:35,542 [DEBUG] receive_response_body.complete
2025-05-25 19:44:35,542 [DEBUG] response_closed.started
2025-05-25 19:44:35,542 [DEBUG] response_closed.complete
2025-05-25 19:44:35,542 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 25 May 2025 14:14:35 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '964'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1138'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29905'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '190ms'), ('x-request-id', 'req_aae4349579f2666ce0e263057d1b3b89'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=WYII.9n3SmmQ_llFNjUuGufzDA2ApQmD7ZGeMaWzLIE-1748182475-1.0.1.1-JKRbXaA9F7WYTdEvzCFrZpo0gK43Xgm0SCQU27Sw3iZO0fMSI411dyNrSD691CejyF_72EbmCHHonyMeqXSwsMK.n2WO0_2cefVHkS1b09A; path=/; expires=Sun, 25-May-25 14:44:35 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=z6d_bz964GVeOP6qceAXisvClAbnwJZ23ZmtXaHCCHE-1748182475520-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '9455a3ccb968918b-DEL'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-05-25 19:44:35,558 [DEBUG] request_id: req_aae4349579f2666ce0e263057d1b3b89
2025-05-25 19:44:35,574 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1800,
  "protein_pct": 30,
  "carbs_pct": 40,
  "fat_pct": 30,
  "fiber_min": 30,
  "sugar_max": 20,
  "sodium_max": 2300
}
```
2025-05-25 19:44:35,574 [INFO]  Extracted Params: {'calories_target': 1800, 'protein_pct': 30, 'carbs_pct': 40, 'fat_pct': 30, 'fiber_min': 30, 'sugar_max': 20, 'sodium_max': 2300}
2025-05-25 19:44:35,605 [INFO]  Meal plan generated with 6 dishes
2025-05-25 19:44:35,605 [INFO] 127.0.0.1 - - [25/May/2025 19:44:35] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-05-25 19:45:15,889 [INFO] Received Input: "Give me a 1800 calorie meal with 30% carbs, 30% protein, 40% fat. Low sugar and high fiber."
2025-05-25 19:45:15,891 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6b800c53-83b0-48fc-bc0a-fd98bcc6b865', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: "Give me a 1800 calorie meal with 30% carbs, 30% protein, 40% fat. Low sugar and high fiber."'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-05-25 19:45:15,892 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-25 19:45:15,892 [DEBUG] close.started
2025-05-25 19:45:15,892 [DEBUG] close.complete
2025-05-25 19:45:15,892 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-25 19:45:16,973 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002053C0ED900>
2025-05-25 19:45:16,973 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000002053B63C0C0> server_hostname='api.openai.com' timeout=5.0
2025-05-25 19:45:16,998 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002053BC0FFD0>
2025-05-25 19:45:16,998 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-25 19:45:16,998 [DEBUG] send_request_headers.complete
2025-05-25 19:45:16,998 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-25 19:45:16,998 [DEBUG] send_request_body.complete
2025-05-25 19:45:16,998 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-25 19:45:18,531 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 25 May 2025 14:15:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1286'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1289'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29905'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'190ms'), (b'x-request-id', b'req_ed43e30d18b9f5a5cd291f9c7968bafa'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9455a4db189e54b6-DEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-25 19:45:18,531 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-25 19:45:18,531 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-25 19:45:18,547 [DEBUG] receive_response_body.complete
2025-05-25 19:45:18,547 [DEBUG] response_closed.started
2025-05-25 19:45:18,547 [DEBUG] response_closed.complete
2025-05-25 19:45:18,547 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 25 May 2025 14:15:18 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1286', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1289', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29905', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '190ms', 'x-request-id': 'req_ed43e30d18b9f5a5cd291f9c7968bafa', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9455a4db189e54b6-DEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-25 19:45:18,549 [DEBUG] request_id: req_ed43e30d18b9f5a5cd291f9c7968bafa
2025-05-25 19:45:18,550 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1800,
  "protein_pct": 30,
  "carbs_pct": 30,
  "fat_pct": 40,
  "fiber_min": 30,
  "sugar_max": 20,
  "sodium_max": 2300
}
```
2025-05-25 19:45:18,550 [INFO]  Extracted Params: {'calories_target': 1800, 'protein_pct': 30, 'carbs_pct': 30, 'fat_pct': 40, 'fiber_min': 30, 'sugar_max': 20, 'sodium_max': 2300}
2025-05-25 19:45:18,575 [INFO]  Meal plan generated with 6 dishes
2025-05-25 19:45:18,576 [INFO] 127.0.0.1 - - [25/May/2025 19:45:18] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-05-25 19:45:51,230 [INFO] Received Input: "Give me a 1800 calorie meal with 30% carbs, 30% protein, 40% fat. Low sugar and high fiber."
2025-05-25 19:45:51,230 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b9519fbe-0e94-4ff9-a082-36462a9d9f4b', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: "Give me a 1800 calorie meal with 30% carbs, 30% protein, 40% fat. Low sugar and high fiber."'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-05-25 19:45:51,230 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-25 19:45:51,230 [DEBUG] close.started
2025-05-25 19:45:51,230 [DEBUG] close.complete
2025-05-25 19:45:51,230 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-25 19:45:52,326 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002053C0EF4C0>
2025-05-25 19:45:52,326 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000002053B63C0C0> server_hostname='api.openai.com' timeout=5.0
2025-05-25 19:45:52,347 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002053C0EF520>
2025-05-25 19:45:52,347 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-25 19:45:52,348 [DEBUG] send_request_headers.complete
2025-05-25 19:45:52,348 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-25 19:45:52,348 [DEBUG] send_request_body.complete
2025-05-25 19:45:52,348 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-25 19:45:54,189 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 25 May 2025 14:15:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1412'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1415'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29905'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'190ms'), (b'x-request-id', b'req_a09e2163ce2446faebc2e49aee5a650a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9455a5b818a191ac-DEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-25 19:45:54,189 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-25 19:45:54,191 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-25 19:45:54,191 [DEBUG] receive_response_body.complete
2025-05-25 19:45:54,191 [DEBUG] response_closed.started
2025-05-25 19:45:54,191 [DEBUG] response_closed.complete
2025-05-25 19:45:54,191 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 25 May 2025 14:15:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1412', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1415', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29905', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '190ms', 'x-request-id': 'req_a09e2163ce2446faebc2e49aee5a650a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9455a5b818a191ac-DEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-25 19:45:54,193 [DEBUG] request_id: req_a09e2163ce2446faebc2e49aee5a650a
2025-05-25 19:45:54,194 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1800,
  "protein_pct": 30,
  "carbs_pct": 30,
  "fat_pct": 40,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-05-25 19:45:54,194 [INFO]  Extracted Params: {'calories_target': 1800, 'protein_pct': 30, 'carbs_pct': 30, 'fat_pct': 40, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-05-25 19:45:54,210 [INFO]  Meal plan generated with 6 dishes
2025-05-25 19:45:54,226 [INFO] 127.0.0.1 - - [25/May/2025 19:45:54] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-05-25 19:46:19,087 [INFO] CSV loaded successfully.
2025-05-25 19:46:19,131 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-05-25 19:46:19,131 [INFO] [33mPress CTRL+C to quit[0m
2025-05-25 19:46:19,145 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-25 19:46:20,969 [INFO] CSV loaded successfully.
2025-05-25 19:46:20,973 [WARNING]  * Debugger is active!
2025-05-25 19:46:20,991 [INFO]  * Debugger PIN: 912-217-141
2025-05-25 19:46:30,975 [INFO] 127.0.0.1 - - [25/May/2025 19:46:30] "GET / HTTP/1.1" 200 -
2025-05-25 19:46:31,794 [INFO] 127.0.0.1 - - [25/May/2025 19:46:31] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-05-25 19:46:45,360 [INFO] Received Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."
2025-05-25 19:46:45,761 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-8f364d85-19e7-490e-be9a-47e51bb057c4', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-05-25 19:46:45,933 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-25 19:46:45,933 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-25 19:46:47,018 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D2BD43E1A0>
2025-05-25 19:46:47,018 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001D2BC9EC0C0> server_hostname='api.openai.com' timeout=5.0
2025-05-25 19:46:47,034 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D2BD43E230>
2025-05-25 19:46:47,034 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-25 19:46:47,034 [DEBUG] send_request_headers.complete
2025-05-25 19:46:47,034 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-25 19:46:47,034 [DEBUG] send_request_body.complete
2025-05-25 19:46:47,034 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-25 19:46:48,638 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 25 May 2025 14:16:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'675'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'680'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29905'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'190ms'), (b'x-request-id', b'req_49931619c663e79e1e1bf96505c1f46b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=xzD01hX9Ygmw8uJhjNyiGK8Fro7Vo7iV2BYduGqOVcE-1748182608-1.0.1.1-CHemYGHUido13xfepOxUlTXaI4qDWR9.kiCzsNdm2trYo1JaqRChikKGGWIhxmki1uISXX8dVe7qynKeOq14ceGdxsoHC9X7dA09ZIPIhIg; path=/; expires=Sun, 25-May-25 14:46:48 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=bib3P3EoSVxr3FkjmZmmPl1fAHuWg.O.Bmj80ikOr1I-1748182608607-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9455a70deadc59ee-DEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-25 19:46:48,640 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-25 19:46:48,642 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-25 19:46:48,644 [DEBUG] receive_response_body.complete
2025-05-25 19:46:48,644 [DEBUG] response_closed.started
2025-05-25 19:46:48,644 [DEBUG] response_closed.complete
2025-05-25 19:46:48,644 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 25 May 2025 14:16:48 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '675'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '680'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29905'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '190ms'), ('x-request-id', 'req_49931619c663e79e1e1bf96505c1f46b'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=xzD01hX9Ygmw8uJhjNyiGK8Fro7Vo7iV2BYduGqOVcE-1748182608-1.0.1.1-CHemYGHUido13xfepOxUlTXaI4qDWR9.kiCzsNdm2trYo1JaqRChikKGGWIhxmki1uISXX8dVe7qynKeOq14ceGdxsoHC9X7dA09ZIPIhIg; path=/; expires=Sun, 25-May-25 14:46:48 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=bib3P3EoSVxr3FkjmZmmPl1fAHuWg.O.Bmj80ikOr1I-1748182608607-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '9455a70deadc59ee-DEL'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-05-25 19:46:48,646 [DEBUG] request_id: req_49931619c663e79e1e1bf96505c1f46b
2025-05-25 19:46:48,660 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1800,
  "protein_pct": 30,
  "carbs_pct": 40,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-05-25 19:46:48,660 [INFO]  Extracted Params: {'calories_target': 1800, 'protein_pct': 30, 'carbs_pct': 40, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-05-25 19:46:48,685 [INFO]  Meal plan generated with 6 dishes
2025-05-25 19:46:48,686 [INFO] 127.0.0.1 - - [25/May/2025 19:46:48] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-05-25 19:47:20,709 [INFO] 127.0.0.1 - - [25/May/2025 19:47:20] "GET / HTTP/1.1" 200 -
2025-05-25 19:47:23,966 [INFO] Received Input: "Give me a 1800 calorie meal with 30% carbs, 30% protein, 40% fat. Low sugar and high fiber."
2025-05-25 19:47:23,970 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-0b4b9d04-c834-498f-97b8-412e918616a2', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: "Give me a 1800 calorie meal with 30% carbs, 30% protein, 40% fat. Low sugar and high fiber."'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-05-25 19:47:23,970 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-25 19:47:23,970 [DEBUG] close.started
2025-05-25 19:47:23,972 [DEBUG] close.complete
2025-05-25 19:47:23,972 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-25 19:47:24,047 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D2BD4A8640>
2025-05-25 19:47:24,047 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001D2BC9EC0C0> server_hostname='api.openai.com' timeout=5.0
2025-05-25 19:47:24,066 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D2BD43F940>
2025-05-25 19:47:24,066 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-25 19:47:24,066 [DEBUG] send_request_headers.complete
2025-05-25 19:47:24,066 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-25 19:47:24,066 [DEBUG] send_request_body.complete
2025-05-25 19:47:24,066 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-25 19:47:25,401 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 25 May 2025 14:17:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1036'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1041'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29905'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'190ms'), (b'x-request-id', b'req_402c830f67c40a5acbc9a57327b0c020'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9455a7f56fba91ca-DEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-25 19:47:25,401 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-25 19:47:25,401 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-25 19:47:25,401 [DEBUG] receive_response_body.complete
2025-05-25 19:47:25,401 [DEBUG] response_closed.started
2025-05-25 19:47:25,401 [DEBUG] response_closed.complete
2025-05-25 19:47:25,401 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 25 May 2025 14:17:25 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1036', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1041', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29905', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '190ms', 'x-request-id': 'req_402c830f67c40a5acbc9a57327b0c020', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9455a7f56fba91ca-DEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-25 19:47:25,401 [DEBUG] request_id: req_402c830f67c40a5acbc9a57327b0c020
2025-05-25 19:47:25,401 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1800,
  "protein_pct": 30,
  "carbs_pct": 30,
  "fat_pct": 40,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-05-25 19:47:25,401 [INFO]  Extracted Params: {'calories_target': 1800, 'protein_pct': 30, 'carbs_pct': 30, 'fat_pct': 40, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-05-25 19:47:25,433 [INFO]  Meal plan generated with 6 dishes
2025-05-25 19:47:25,433 [INFO] 127.0.0.1 - - [25/May/2025 19:47:25] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-05-25 19:48:01,030 [INFO] 127.0.0.1 - - [25/May/2025 19:48:01] "GET / HTTP/1.1" 200 -
2025-05-25 19:48:12,109 [INFO] Received Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."
2025-05-25 19:48:12,110 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-63349c42-f59b-4ad2-8bbc-0153ca86b9c3', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-05-25 19:48:12,111 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-25 19:48:12,112 [DEBUG] close.started
2025-05-25 19:48:12,113 [DEBUG] close.complete
2025-05-25 19:48:12,113 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-25 19:48:13,204 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D2BD4E8460>
2025-05-25 19:48:13,204 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001D2BC9EC0C0> server_hostname='api.openai.com' timeout=5.0
2025-05-25 19:48:13,225 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D2BD4ABD00>
2025-05-25 19:48:13,227 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-25 19:48:13,227 [DEBUG] send_request_headers.complete
2025-05-25 19:48:13,227 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-25 19:48:13,227 [DEBUG] send_request_body.complete
2025-05-25 19:48:13,227 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-25 19:48:14,591 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 25 May 2025 14:18:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1084'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1086'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29905'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'190ms'), (b'x-request-id', b'req_d6acfc78adb6b1ae105156cc0facc2e6'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9455a92898ba91b5-DEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-25 19:48:14,591 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-25 19:48:14,591 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-25 19:48:14,591 [DEBUG] receive_response_body.complete
2025-05-25 19:48:14,591 [DEBUG] response_closed.started
2025-05-25 19:48:14,591 [DEBUG] response_closed.complete
2025-05-25 19:48:14,591 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 25 May 2025 14:18:14 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1084', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1086', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29905', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '190ms', 'x-request-id': 'req_d6acfc78adb6b1ae105156cc0facc2e6', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9455a92898ba91b5-DEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-25 19:48:14,591 [DEBUG] request_id: req_d6acfc78adb6b1ae105156cc0facc2e6
2025-05-25 19:48:14,599 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1800,
  "protein_pct": 30,
  "carbs_pct": 40,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-05-25 19:48:14,599 [INFO]  Extracted Params: {'calories_target': 1800, 'protein_pct': 30, 'carbs_pct': 40, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-05-25 19:48:14,617 [INFO]  Meal plan generated with 6 dishes
2025-05-25 19:48:14,617 [INFO] 127.0.0.1 - - [25/May/2025 19:48:14] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-05-25 19:48:41,033 [INFO] Received Input: "Give me a 2200 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."
2025-05-25 19:48:41,034 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-9c987dde-54a9-4d64-9349-91490d1fda7a', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: "Give me a 2200 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-05-25 19:48:41,035 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-25 19:48:41,036 [DEBUG] close.started
2025-05-25 19:48:41,037 [DEBUG] close.complete
2025-05-25 19:48:41,037 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-25 19:48:41,094 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D2BD4A8DF0>
2025-05-25 19:48:41,097 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001D2BC9EC0C0> server_hostname='api.openai.com' timeout=5.0
2025-05-25 19:48:41,118 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D2BD4A8EB0>
2025-05-25 19:48:41,118 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-25 19:48:41,118 [DEBUG] send_request_headers.complete
2025-05-25 19:48:41,118 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-25 19:48:41,118 [DEBUG] send_request_body.complete
2025-05-25 19:48:41,118 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-25 19:48:42,557 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 25 May 2025 14:18:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1170'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1173'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29905'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'190ms'), (b'x-request-id', b'req_9fd71595b89f90eba46f8139bae7d36d'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9455a9d6efd354b4-DEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-25 19:48:42,557 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-25 19:48:42,557 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-25 19:48:42,557 [DEBUG] receive_response_body.complete
2025-05-25 19:48:42,557 [DEBUG] response_closed.started
2025-05-25 19:48:42,557 [DEBUG] response_closed.complete
2025-05-25 19:48:42,557 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 25 May 2025 14:18:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1170', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1173', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29905', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '190ms', 'x-request-id': 'req_9fd71595b89f90eba46f8139bae7d36d', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9455a9d6efd354b4-DEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-25 19:48:42,557 [DEBUG] request_id: req_9fd71595b89f90eba46f8139bae7d36d
2025-05-25 19:48:42,557 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2200,
  "protein_pct": 30,
  "carbs_pct": 40,
  "fat_pct": 30,
  "fiber_min": 30,
  "sugar_max": 20,
  "sodium_max": 2300
}
```
2025-05-25 19:48:42,557 [INFO]  Extracted Params: {'calories_target': 2200, 'protein_pct': 30, 'carbs_pct': 40, 'fat_pct': 30, 'fiber_min': 30, 'sugar_max': 20, 'sodium_max': 2300}
2025-05-25 19:48:42,583 [INFO]  Meal plan generated with 7 dishes
2025-05-25 19:48:42,589 [INFO] 127.0.0.1 - - [25/May/2025 19:48:42] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-05-25 19:50:51,743 [INFO] Received Input: "Give me a 2000 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."
2025-05-25 19:50:51,745 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ef3814f1-7393-4bb9-960e-e2327453fd01', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: "Give me a 2000 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-05-25 19:50:51,746 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-25 19:50:51,747 [DEBUG] close.started
2025-05-25 19:50:51,748 [DEBUG] close.complete
2025-05-25 19:50:51,749 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-25 19:50:51,825 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D2BD4AAA70>
2025-05-25 19:50:51,825 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001D2BC9EC0C0> server_hostname='api.openai.com' timeout=5.0
2025-05-25 19:50:51,839 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D2BD4AAAD0>
2025-05-25 19:50:51,839 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-25 19:50:51,839 [DEBUG] send_request_headers.complete
2025-05-25 19:50:51,839 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-25 19:50:51,839 [DEBUG] send_request_body.complete
2025-05-25 19:50:51,839 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-25 19:50:53,005 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 25 May 2025 14:20:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'895'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'897'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29905'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'190ms'), (b'x-request-id', b'req_85a8b46c97d43d147b498bda73e872c3'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9455ad07fdcc54e0-DEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-25 19:50:53,005 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-25 19:50:53,017 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-25 19:50:53,017 [DEBUG] receive_response_body.complete
2025-05-25 19:50:53,018 [DEBUG] response_closed.started
2025-05-25 19:50:53,018 [DEBUG] response_closed.complete
2025-05-25 19:50:53,018 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 25 May 2025 14:20:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '895', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '897', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29905', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '190ms', 'x-request-id': 'req_85a8b46c97d43d147b498bda73e872c3', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9455ad07fdcc54e0-DEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-25 19:50:53,018 [DEBUG] request_id: req_85a8b46c97d43d147b498bda73e872c3
2025-05-25 19:50:53,021 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2000,
  "protein_pct": 30,
  "carbs_pct": 40,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-05-25 19:50:53,021 [INFO]  Extracted Params: {'calories_target': 2000, 'protein_pct': 30, 'carbs_pct': 40, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-05-25 19:50:53,078 [INFO]  Meal plan generated with 6 dishes
2025-05-25 19:50:53,087 [INFO] 127.0.0.1 - - [25/May/2025 19:50:53] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-05-25 19:51:21,663 [INFO] Received Input: "Give me a 1200 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."
2025-05-25 19:51:21,663 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-dc6e5afc-c7ae-4551-88f2-f5d91fc813a1', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: "Give me a 1200 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-05-25 19:51:21,663 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-25 19:51:21,663 [DEBUG] close.started
2025-05-25 19:51:21,663 [DEBUG] close.complete
2025-05-25 19:51:21,663 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-25 19:51:22,752 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D2BD4E8B20>
2025-05-25 19:51:22,752 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001D2BC9EC0C0> server_hostname='api.openai.com' timeout=5.0
2025-05-25 19:51:22,775 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001D2BD4E8A90>
2025-05-25 19:51:22,775 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-25 19:51:22,775 [DEBUG] send_request_headers.complete
2025-05-25 19:51:22,775 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-25 19:51:22,775 [DEBUG] send_request_body.complete
2025-05-25 19:51:22,775 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-25 19:51:24,111 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 25 May 2025 14:21:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'942'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'945'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29905'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'190ms'), (b'x-request-id', b'req_a3d6b0361da3661d03116674891bdcad'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9455adc93d4059d6-DEL'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-25 19:51:24,111 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-25 19:51:24,111 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-25 19:51:24,115 [DEBUG] receive_response_body.complete
2025-05-25 19:51:24,115 [DEBUG] response_closed.started
2025-05-25 19:51:24,115 [DEBUG] response_closed.complete
2025-05-25 19:51:24,115 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 25 May 2025 14:21:24 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '942', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '945', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29905', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '190ms', 'x-request-id': 'req_a3d6b0361da3661d03116674891bdcad', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9455adc93d4059d6-DEL', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-25 19:51:24,115 [DEBUG] request_id: req_a3d6b0361da3661d03116674891bdcad
2025-05-25 19:51:24,117 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1200,
  "protein_pct": 30,
  "carbs_pct": 40,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-05-25 19:51:24,117 [INFO]  Extracted Params: {'calories_target': 1200, 'protein_pct': 30, 'carbs_pct': 40, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-05-25 19:51:24,130 [INFO]  Meal plan generated with 5 dishes
2025-05-25 19:51:24,132 [INFO] 127.0.0.1 - - [25/May/2025 19:51:24] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-05-29 11:37:35,276 [INFO] CSV loaded successfully.
2025-05-29 11:37:35,353 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-05-29 11:37:35,353 [INFO] [33mPress CTRL+C to quit[0m
2025-05-29 11:37:35,378 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-29 11:37:37,335 [INFO] CSV loaded successfully.
2025-05-29 11:37:37,362 [WARNING]  * Debugger is active!
2025-05-29 11:37:37,369 [INFO]  * Debugger PIN: 912-217-141
2025-05-29 11:37:55,458 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\werkzeug\\routing\\map.py', reloading
2025-05-29 11:37:55,489 [INFO] 127.0.0.1 - - [29/May/2025 11:37:55] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-05-29 11:37:56,049 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-29 11:37:58,364 [INFO] CSV loaded successfully.
2025-05-29 11:37:58,394 [WARNING]  * Debugger is active!
2025-05-29 11:37:58,394 [INFO]  * Debugger PIN: 912-217-141
2025-05-29 11:37:58,477 [INFO] 127.0.0.1 - - [29/May/2025 11:37:58] "GET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
2025-05-29 11:37:58,977 [INFO] 127.0.0.1 - - [29/May/2025 11:37:58] "GET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
2025-05-29 11:38:09,953 [INFO] 127.0.0.1 - - [29/May/2025 11:38:09] "[33mGET /home HTTP/1.1[0m" 404 -
2025-05-29 11:38:10,156 [INFO] 127.0.0.1 - - [29/May/2025 11:38:10] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-05-29 11:38:16,603 [INFO] 127.0.0.1 - - [29/May/2025 11:38:16] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-05-29 11:38:16,659 [INFO] 127.0.0.1 - - [29/May/2025 11:38:16] "[36mGET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1[0m" 304 -
2025-05-29 11:38:16,683 [INFO] 127.0.0.1 - - [29/May/2025 11:38:16] "GET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
2025-05-29 11:38:16,891 [INFO] 127.0.0.1 - - [29/May/2025 11:38:16] "GET /?__debugger__=yes&cmd=resource&f=console.png&s=gxO0ZtUx94r8y5w3TgoW HTTP/1.1" 200 -
2025-05-29 11:40:57,429 [INFO] 127.0.0.1 - - [29/May/2025 11:40:57] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-05-29 11:40:57,493 [INFO] 127.0.0.1 - - [29/May/2025 11:40:57] "[36mGET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1[0m" 304 -
2025-05-29 11:40:57,519 [INFO] 127.0.0.1 - - [29/May/2025 11:40:57] "[36mGET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1[0m" 304 -
2025-05-29 11:40:57,732 [INFO] 127.0.0.1 - - [29/May/2025 11:40:57] "[36mGET /?__debugger__=yes&cmd=resource&f=console.png&s=gxO0ZtUx94r8y5w3TgoW HTTP/1.1[0m" 304 -
2025-05-29 11:40:57,837 [INFO] 127.0.0.1 - - [29/May/2025 11:40:57] "[36mGET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1[0m" 304 -
2025-05-29 11:40:58,871 [INFO] 127.0.0.1 - - [29/May/2025 11:40:58] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-05-29 11:40:58,924 [INFO] 127.0.0.1 - - [29/May/2025 11:40:58] "[36mGET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1[0m" 304 -
2025-05-29 11:40:58,937 [INFO] 127.0.0.1 - - [29/May/2025 11:40:58] "[36mGET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1[0m" 304 -
2025-05-29 11:40:59,089 [INFO] 127.0.0.1 - - [29/May/2025 11:40:59] "[36mGET /?__debugger__=yes&cmd=resource&f=console.png&s=gxO0ZtUx94r8y5w3TgoW HTTP/1.1[0m" 304 -
2025-05-29 11:40:59,210 [INFO] 127.0.0.1 - - [29/May/2025 11:40:59] "[36mGET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1[0m" 304 -
2025-05-29 11:41:29,743 [INFO] CSV loaded successfully.
2025-05-29 11:41:29,789 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-05-29 11:41:29,789 [INFO] [33mPress CTRL+C to quit[0m
2025-05-29 11:41:29,803 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-29 11:41:31,797 [INFO] CSV loaded successfully.
2025-05-29 11:41:31,819 [WARNING]  * Debugger is active!
2025-05-29 11:41:31,825 [INFO]  * Debugger PIN: 912-217-141
2025-05-29 11:41:50,821 [INFO] 127.0.0.1 - - [29/May/2025 11:41:50] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-05-29 11:41:54,173 [INFO] 127.0.0.1 - - [29/May/2025 11:41:54] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-05-29 11:41:54,448 [INFO] 127.0.0.1 - - [29/May/2025 11:41:54] "[36mGET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1[0m" 304 -
2025-05-29 11:41:54,480 [INFO] 127.0.0.1 - - [29/May/2025 11:41:54] "[36mGET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1[0m" 304 -
2025-05-29 11:41:54,616 [INFO] 127.0.0.1 - - [29/May/2025 11:41:54] "GET /?__debugger__=yes&cmd=resource&f=console.png&s=vSkdlnIm96aBv7FcQr62 HTTP/1.1" 200 -
2025-05-29 11:44:40,693 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\Desktop\\Meal_planner\\app.py', reloading
2025-05-29 11:44:40,696 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\Desktop\\Meal_planner\\app.py', reloading
2025-05-29 11:44:41,640 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-29 11:44:44,440 [INFO] CSV loaded successfully.
2025-05-29 11:44:44,475 [WARNING]  * Debugger is active!
2025-05-29 11:44:44,483 [INFO]  * Debugger PIN: 912-217-141
2025-05-29 11:44:52,459 [INFO] 127.0.0.1 - - [29/May/2025 11:44:52] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-05-29 11:44:52,706 [INFO] 127.0.0.1 - - [29/May/2025 11:44:52] "[36mGET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1[0m" 304 -
2025-05-29 11:44:52,708 [INFO] 127.0.0.1 - - [29/May/2025 11:44:52] "[36mGET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1[0m" 304 -
2025-05-29 11:44:52,803 [INFO] 127.0.0.1 - - [29/May/2025 11:44:52] "GET /?__debugger__=yes&cmd=resource&f=console.png&s=ERLUrKTHFxXU8CpFR9Ad HTTP/1.1" 200 -
2025-05-29 11:44:52,937 [INFO] 127.0.0.1 - - [29/May/2025 11:44:52] "[36mGET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1[0m" 304 -
2025-05-29 12:01:08,652 [INFO] CSV loaded successfully.
2025-05-29 12:01:08,701 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-05-29 12:01:08,701 [INFO] [33mPress CTRL+C to quit[0m
2025-05-29 12:01:08,717 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-29 12:01:10,993 [INFO] CSV loaded successfully.
2025-05-29 12:01:11,025 [WARNING]  * Debugger is active!
2025-05-29 12:01:11,025 [INFO]  * Debugger PIN: 912-217-141
2025-05-29 12:01:17,553 [INFO] 127.0.0.1 - - [29/May/2025 12:01:17] "GET / HTTP/1.1" 200 -
2025-05-29 12:01:17,601 [INFO] 127.0.0.1 - - [29/May/2025 12:01:17] "[33mGET /static/css/main.css HTTP/1.1[0m" 404 -
2025-05-29 12:02:07,161 [INFO] 127.0.0.1 - - [29/May/2025 12:02:07] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 12:02:17,651 [INFO] 127.0.0.1 - - [29/May/2025 12:02:17] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 12:13:18,591 [INFO] CSV loaded successfully.
2025-05-29 12:13:18,645 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-05-29 12:13:18,645 [INFO] [33mPress CTRL+C to quit[0m
2025-05-29 12:13:18,663 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-29 12:13:20,826 [INFO] CSV loaded successfully.
2025-05-29 12:13:20,860 [WARNING]  * Debugger is active!
2025-05-29 12:13:20,866 [INFO]  * Debugger PIN: 912-217-141
2025-05-29 12:13:24,579 [INFO] 127.0.0.1 - - [29/May/2025 12:13:24] "GET / HTTP/1.1" 200 -
2025-05-29 12:13:24,721 [INFO] 127.0.0.1 - - [29/May/2025 12:13:24] "[33mGET /static/css/main.css HTTP/1.1[0m" 404 -
2025-05-29 12:13:25,725 [INFO] 127.0.0.1 - - [29/May/2025 12:13:25] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-05-29 12:13:35,270 [INFO] 127.0.0.1 - - [29/May/2025 12:13:35] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 12:13:55,587 [INFO] 127.0.0.1 - - [29/May/2025 12:13:55] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 12:18:39,794 [INFO] 127.0.0.1 - - [29/May/2025 12:18:39] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 12:18:45,930 [INFO] 127.0.0.1 - - [29/May/2025 12:18:45] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 12:19:02,040 [INFO] 127.0.0.1 - - [29/May/2025 12:19:02] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 12:38:51,265 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\flask\\__init__.py', reloading
2025-05-29 12:38:51,269 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\flask\\json\\__init__.py', reloading
2025-05-29 12:38:51,270 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\flask\\app.py', reloading
2025-05-29 12:38:51,379 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\optimize\\__init__.py', reloading
2025-05-29 12:38:51,379 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\openai\\__init__.py', reloading
2025-05-29 12:38:51,379 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dotenv\\__init__.py', reloading
2025-05-29 12:38:51,403 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\flask\\globals.py', reloading
2025-05-29 12:38:51,884 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-29 12:38:54,789 [INFO] CSV loaded successfully.
2025-05-29 12:38:54,817 [WARNING]  * Debugger is active!
2025-05-29 12:38:54,823 [INFO]  * Debugger PIN: 912-217-141
2025-05-29 12:39:40,220 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Roaming\\Python\\Python310\\site-packages\\IPython\\display.py', reloading
2025-05-29 12:39:40,232 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Roaming\\Python\\Python310\\site-packages\\IPython\\core\\display_functions.py', reloading
2025-05-29 12:39:40,289 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Roaming\\Python\\Python310\\site-packages\\IPython\\lib\\display.py', reloading
2025-05-29 12:39:41,024 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-29 12:39:46,128 [INFO] CSV loaded successfully.
2025-05-29 12:39:46,185 [WARNING]  * Debugger is active!
2025-05-29 12:39:46,196 [INFO]  * Debugger PIN: 912-217-141
2025-05-29 12:39:52,180 [INFO] 127.0.0.1 - - [29/May/2025 12:39:52] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 12:39:52,578 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Roaming\\Python\\Python310\\site-packages\\IPython\\core\\display.py', reloading
2025-05-29 12:39:52,640 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\AppData\\Roaming\\Python\\Python310\\site-packages\\IPython\\testing\\skipdoctest.py', reloading
2025-05-29 12:39:53,661 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-29 12:39:56,381 [INFO] CSV loaded successfully.
2025-05-29 12:39:56,419 [WARNING]  * Debugger is active!
2025-05-29 12:39:56,427 [INFO]  * Debugger PIN: 912-217-141
2025-05-29 12:39:56,476 [INFO] Received Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."
2025-05-29 12:39:57,136 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-beca0e78-0551-479a-acf7-5ed5aa3e40c4', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-05-29 12:39:57,266 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-29 12:39:57,266 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-29 12:39:57,336 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001A9CB936680>
2025-05-29 12:39:57,336 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001A9CAF0C0C0> server_hostname='api.openai.com' timeout=5.0
2025-05-29 12:39:57,418 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001A9CB936710>
2025-05-29 12:39:57,418 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-29 12:39:57,418 [DEBUG] send_request_headers.complete
2025-05-29 12:39:57,426 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-29 12:39:57,427 [DEBUG] send_request_body.complete
2025-05-29 12:39:57,427 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-29 12:39:58,904 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 29 May 2025 07:09:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'919'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'922'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29905'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'190ms'), (b'x-request-id', b'req_dfc795350496a7cb1c4ee02221721385'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Zh5UC2VGt38Sn4m1agL_S11s5PYY3M8QOOOftyBCtAg-1748502598-1.0.1.1-zsCea4RTzGrXTOSP7QqcvutSX.hcghw7CcLNnxGnWxo1i3b0_CNXxkPGnK_vUtK1bq1oIQG3qx6fmoPhWvLmpXtY_49GKDORVR5DfjhcJOY; path=/; expires=Thu, 29-May-25 07:39:58 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=U9lArPdIY2.uX88FZLHSioIfa5IydrEHfnMT2UuQZcA-1748502598668-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94742b51aed7423c-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-29 12:39:58,912 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-29 12:39:58,917 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-29 12:39:58,922 [DEBUG] receive_response_body.complete
2025-05-29 12:39:58,926 [DEBUG] response_closed.started
2025-05-29 12:39:58,926 [DEBUG] response_closed.complete
2025-05-29 12:39:58,927 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 29 May 2025 07:09:58 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '919'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '922'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29905'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '190ms'), ('x-request-id', 'req_dfc795350496a7cb1c4ee02221721385'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=Zh5UC2VGt38Sn4m1agL_S11s5PYY3M8QOOOftyBCtAg-1748502598-1.0.1.1-zsCea4RTzGrXTOSP7QqcvutSX.hcghw7CcLNnxGnWxo1i3b0_CNXxkPGnK_vUtK1bq1oIQG3qx6fmoPhWvLmpXtY_49GKDORVR5DfjhcJOY; path=/; expires=Thu, 29-May-25 07:39:58 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=U9lArPdIY2.uX88FZLHSioIfa5IydrEHfnMT2UuQZcA-1748502598668-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94742b51aed7423c-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-05-29 12:39:58,928 [DEBUG] request_id: req_dfc795350496a7cb1c4ee02221721385
2025-05-29 12:39:58,938 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1800,
  "protein_pct": 30,
  "carbs_pct": 40,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-05-29 12:39:58,940 [INFO]  Extracted Params: {'calories_target': 1800, 'protein_pct': 30, 'carbs_pct': 40, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-05-29 12:39:58,984 [INFO]  Meal plan generated with 6 dishes
2025-05-29 12:39:58,984 [INFO] 127.0.0.1 - - [29/May/2025 12:39:58] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-05-29 13:17:18,124 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\Desktop\\Meal_planner\\app.py', reloading
2025-05-29 13:17:18,127 [INFO]  * Detected change in 'C:\\Users\\SUMIT\\Desktop\\Meal_planner\\app.py', reloading
2025-05-29 13:17:19,210 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-29 13:28:32,522 [INFO] CSV loaded successfully.
2025-05-29 13:28:32,562 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-05-29 13:28:32,562 [INFO] [33mPress CTRL+C to quit[0m
2025-05-29 13:28:32,575 [INFO]  * Restarting with watchdog (windowsapi)
2025-05-29 13:28:34,364 [INFO] CSV loaded successfully.
2025-05-29 13:28:34,398 [WARNING]  * Debugger is active!
2025-05-29 13:28:34,405 [INFO]  * Debugger PIN: 912-217-141
2025-05-29 13:28:38,621 [INFO] 127.0.0.1 - - [29/May/2025 13:28:38] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 13:28:52,784 [INFO] Received Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."
2025-05-29 13:28:53,187 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-567371c5-68b0-461c-b82d-359275afb6ef', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-05-29 13:28:53,316 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-29 13:28:53,316 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-29 13:28:53,445 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000268389FB790>
2025-05-29 13:28:53,445 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000026837FD40C0> server_hostname='api.openai.com' timeout=5.0
2025-05-29 13:28:53,527 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000268389FB820>
2025-05-29 13:28:53,527 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-29 13:28:53,527 [DEBUG] send_request_headers.complete
2025-05-29 13:28:53,527 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-29 13:28:53,527 [DEBUG] send_request_body.complete
2025-05-29 13:28:53,527 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-29 13:28:55,118 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 29 May 2025 07:58:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1200'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1204'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29905'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'190ms'), (b'x-request-id', b'req_6371253fe9c84f00c699538908f85f91'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=ZBlve5XlV4BaUqBSoj0_yjJ_dpCj1Jc2BOCFaorPXrM-1748505534-1.0.1.1-WWL8R6Mfh.9diemLkd0XBVtY5taQRIh6XlqZ8rqa1DMebAnCl4XB2ZCRy1jxHIULLj8mxKu7GsKdR5p1HhVg1bOUgmZCHrCg58za5.BhuLc; path=/; expires=Thu, 29-May-25 08:28:54 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=IvZ4okKiPNuB32e9Jtryysy_HUk6eceXtOWKf0VindQ-1748505534964-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'947473008c034fd4-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-29 13:28:55,119 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-29 13:28:55,119 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-29 13:28:55,119 [DEBUG] receive_response_body.complete
2025-05-29 13:28:55,119 [DEBUG] response_closed.started
2025-05-29 13:28:55,119 [DEBUG] response_closed.complete
2025-05-29 13:28:55,119 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 29 May 2025 07:58:54 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '1200'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1204'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29905'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '190ms'), ('x-request-id', 'req_6371253fe9c84f00c699538908f85f91'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=ZBlve5XlV4BaUqBSoj0_yjJ_dpCj1Jc2BOCFaorPXrM-1748505534-1.0.1.1-WWL8R6Mfh.9diemLkd0XBVtY5taQRIh6XlqZ8rqa1DMebAnCl4XB2ZCRy1jxHIULLj8mxKu7GsKdR5p1HhVg1bOUgmZCHrCg58za5.BhuLc; path=/; expires=Thu, 29-May-25 08:28:54 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=IvZ4okKiPNuB32e9Jtryysy_HUk6eceXtOWKf0VindQ-1748505534964-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '947473008c034fd4-MAA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-05-29 13:28:55,119 [DEBUG] request_id: req_6371253fe9c84f00c699538908f85f91
2025-05-29 13:28:55,139 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1800,
  "protein_pct": 30,
  "carbs_pct": 40,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-05-29 13:28:55,139 [INFO]  Extracted Params: {'calories_target': 1800, 'protein_pct': 30, 'carbs_pct': 40, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-05-29 13:28:55,151 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1a2c3820-57c5-4f47-b809-9babc85a1f8e', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1691.0 kcal\nProtein: 135.0 g\nCarbs: 180.1 g\nFat: 60.0 g\nFiber: 52.2 g\nSugar: 16.7 g\nSodium: 863.3 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-05-29 13:28:55,158 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-29 13:28:55,159 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-29 13:28:55,159 [DEBUG] send_request_headers.complete
2025-05-29 13:28:55,159 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-29 13:28:55,159 [DEBUG] send_request_body.complete
2025-05-29 13:28:55,159 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-29 13:29:00,053 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 29 May 2025 07:58:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4357'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4359'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29839'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'322ms'), (b'x-request-id', b'req_0bf5418e3b9e5f035a79dae1619c0b38'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9474730a1ea24fd4-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-29 13:29:00,053 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-29 13:29:00,053 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-29 13:29:00,103 [DEBUG] receive_response_body.complete
2025-05-29 13:29:00,103 [DEBUG] response_closed.started
2025-05-29 13:29:00,103 [DEBUG] response_closed.complete
2025-05-29 13:29:00,103 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 29 May 2025 07:58:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4357', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4359', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29839', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '322ms', 'x-request-id': 'req_0bf5418e3b9e5f035a79dae1619c0b38', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9474730a1ea24fd4-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-29 13:29:00,103 [DEBUG] request_id: req_0bf5418e3b9e5f035a79dae1619c0b38
2025-05-29 13:29:00,103 [INFO]  Meal plan generated with 6 dishes
2025-05-29 13:29:00,103 [INFO] 127.0.0.1 - - [29/May/2025 13:29:00] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-05-29 13:30:25,558 [INFO] 127.0.0.1 - - [29/May/2025 13:30:25] "GET / HTTP/1.1" 200 -
2025-05-29 13:30:25,572 [INFO] 127.0.0.1 - - [29/May/2025 13:30:25] "[33mGET /static/css/main.css HTTP/1.1[0m" 404 -
2025-05-29 13:30:33,456 [INFO] 127.0.0.1 - - [29/May/2025 13:30:33] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 13:30:47,489 [INFO] Received Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."
2025-05-29 13:30:47,490 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6645c798-1cae-45cc-a539-2472818a8429', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: "Give me a 1800 calorie meal with 40% carbs, 30% protein, 30% fat. Low sugar and high fiber."'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-05-29 13:30:47,492 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-29 13:30:47,493 [DEBUG] close.started
2025-05-29 13:30:47,502 [DEBUG] close.complete
2025-05-29 13:30:47,502 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-29 13:30:47,602 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000026838ABD540>
2025-05-29 13:30:47,602 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000026837FD40C0> server_hostname='api.openai.com' timeout=5.0
2025-05-29 13:30:47,772 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000026838A4BB50>
2025-05-29 13:30:47,772 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-29 13:30:47,772 [DEBUG] send_request_headers.complete
2025-05-29 13:30:47,772 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-29 13:30:47,772 [DEBUG] send_request_body.complete
2025-05-29 13:30:47,772 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-29 13:30:49,113 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 29 May 2025 08:00:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'894'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'900'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29905'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'190ms'), (b'x-request-id', b'req_15cbe7f35e055fc8339ef523d93314e7'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'947475ca1da8fd87-SIN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-29 13:30:49,114 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-29 13:30:49,115 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-29 13:30:49,167 [DEBUG] receive_response_body.complete
2025-05-29 13:30:49,167 [DEBUG] response_closed.started
2025-05-29 13:30:49,167 [DEBUG] response_closed.complete
2025-05-29 13:30:49,168 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 29 May 2025 08:00:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '894', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '900', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29905', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '190ms', 'x-request-id': 'req_15cbe7f35e055fc8339ef523d93314e7', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '947475ca1da8fd87-SIN', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-29 13:30:49,169 [DEBUG] request_id: req_15cbe7f35e055fc8339ef523d93314e7
2025-05-29 13:30:49,170 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1800,
  "protein_pct": 30,
  "carbs_pct": 40,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-05-29 13:30:49,170 [INFO]  Extracted Params: {'calories_target': 1800, 'protein_pct': 30, 'carbs_pct': 40, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-05-29 13:30:49,195 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ebac1548-e76d-429c-9395-bcee2ae3ced0', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1691.0 kcal\nProtein: 135.0 g\nCarbs: 180.1 g\nFat: 60.0 g\nFiber: 52.2 g\nSugar: 16.7 g\nSodium: 863.3 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-05-29 13:30:49,197 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-29 13:30:49,197 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-29 13:30:49,199 [DEBUG] send_request_headers.complete
2025-05-29 13:30:49,200 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-29 13:30:49,200 [DEBUG] send_request_body.complete
2025-05-29 13:30:49,200 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-29 13:30:54,655 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 29 May 2025 08:00:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'5012'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5017'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29839'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'322ms'), (b'x-request-id', b'req_321db4efa6d1aafc7188623709f40365'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'947475d2fac9fd87-SIN'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-29 13:30:54,655 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-29 13:30:54,655 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-29 13:30:54,704 [DEBUG] receive_response_body.complete
2025-05-29 13:30:54,704 [DEBUG] response_closed.started
2025-05-29 13:30:54,705 [DEBUG] response_closed.complete
2025-05-29 13:30:54,705 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 29 May 2025 08:00:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '5012', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5017', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29839', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '322ms', 'x-request-id': 'req_321db4efa6d1aafc7188623709f40365', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '947475d2fac9fd87-SIN', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-29 13:30:54,707 [DEBUG] request_id: req_321db4efa6d1aafc7188623709f40365
2025-05-29 13:30:54,707 [INFO]  Meal plan generated with 6 dishes
2025-05-29 13:30:54,707 [INFO] 127.0.0.1 - - [29/May/2025 13:30:54] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-05-29 16:13:36,906 [INFO] CSV loaded successfully.
2025-05-29 16:13:37,011 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-05-29 16:13:37,012 [INFO] [33mPress CTRL+C to quit[0m
2025-05-29 16:13:37,017 [INFO]  * Restarting with stat
2025-05-29 16:13:40,186 [INFO] CSV loaded successfully.
2025-05-29 16:13:40,226 [WARNING]  * Debugger is active!
2025-05-29 16:13:40,232 [INFO]  * Debugger PIN: 461-893-414
2025-05-29 16:14:06,216 [INFO] 127.0.0.1 - - [29/May/2025 16:14:06] "GET / HTTP/1.1" 200 -
2025-05-29 16:14:06,383 [INFO] 127.0.0.1 - - [29/May/2025 16:14:06] "GET /static/css/main.css HTTP/1.1" 200 -
2025-05-29 16:14:06,734 [INFO] 127.0.0.1 - - [29/May/2025 16:14:06] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-05-29 16:14:13,630 [INFO] 127.0.0.1 - - [29/May/2025 16:14:13] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 16:14:17,156 [INFO] 127.0.0.1 - - [29/May/2025 16:14:17] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:14:21,208 [INFO] 127.0.0.1 - - [29/May/2025 16:14:21] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 16:16:13,600 [INFO] 127.0.0.1 - - [29/May/2025 16:16:13] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 16:17:56,943 [INFO] 127.0.0.1 - - [29/May/2025 16:17:56] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 16:33:02,510 [INFO] 127.0.0.1 - - [29/May/2025 16:33:02] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 16:33:05,942 [INFO] 127.0.0.1 - - [29/May/2025 16:33:05] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:33:07,432 [INFO] 127.0.0.1 - - [29/May/2025 16:33:07] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:33:08,522 [INFO] 127.0.0.1 - - [29/May/2025 16:33:08] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:33:11,379 [INFO] 127.0.0.1 - - [29/May/2025 16:33:11] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 16:33:12,845 [INFO] Received Input: 
2025-05-29 16:33:12,845 [ERROR]  Exception: Input cannot be empty
2025-05-29 16:33:12,847 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner\app.py", line 351, in generate_meal_plan
    raise ValueError("Input cannot be empty")
ValueError: Input cannot be empty

2025-05-29 16:33:12,848 [INFO] 127.0.0.1 - - [29/May/2025 16:33:12] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-05-29 16:33:38,295 [INFO] 127.0.0.1 - - [29/May/2025 16:33:38] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 16:33:41,794 [INFO] 127.0.0.1 - - [29/May/2025 16:33:41] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:34:37,771 [INFO] 127.0.0.1 - - [29/May/2025 16:34:37] "GET / HTTP/1.1" 200 -
2025-05-29 16:34:37,810 [INFO] 127.0.0.1 - - [29/May/2025 16:34:37] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 16:34:37,932 [INFO] 127.0.0.1 - - [29/May/2025 16:34:37] "GET / HTTP/1.1" 200 -
2025-05-29 16:34:37,963 [INFO] 127.0.0.1 - - [29/May/2025 16:34:37] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 16:34:39,216 [INFO] 127.0.0.1 - - [29/May/2025 16:34:39] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:34:40,839 [INFO] 127.0.0.1 - - [29/May/2025 16:34:40] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:34:43,334 [INFO] 127.0.0.1 - - [29/May/2025 16:34:43] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 16:34:47,302 [INFO] 127.0.0.1 - - [29/May/2025 16:34:47] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:34:52,805 [INFO] 127.0.0.1 - - [29/May/2025 16:34:52] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 16:37:04,839 [INFO] 127.0.0.1 - - [29/May/2025 16:37:04] "[35m[1mGET / HTTP/1.1[0m" 500 -
2025-05-29 16:37:04,898 [INFO] 127.0.0.1 - - [29/May/2025 16:37:04] "[36mGET /?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1[0m" 304 -
2025-05-29 16:37:04,940 [INFO] 127.0.0.1 - - [29/May/2025 16:37:04] "[36mGET /?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1[0m" 304 -
2025-05-29 16:37:05,011 [INFO] 127.0.0.1 - - [29/May/2025 16:37:05] "GET /?__debugger__=yes&cmd=resource&f=console.png&s=pGUDpeZ3gVo2Mqn6bPFj HTTP/1.1" 200 -
2025-05-29 16:37:05,034 [INFO] 127.0.0.1 - - [29/May/2025 16:37:05] "[36mGET /?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1[0m" 304 -
2025-05-29 16:37:52,586 [INFO] 127.0.0.1 - - [29/May/2025 16:37:52] "GET / HTTP/1.1" 200 -
2025-05-29 16:37:52,645 [INFO] 127.0.0.1 - - [29/May/2025 16:37:52] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 16:37:54,468 [INFO] 127.0.0.1 - - [29/May/2025 16:37:54] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:37:56,074 [INFO] 127.0.0.1 - - [29/May/2025 16:37:56] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:37:56,170 [INFO] 127.0.0.1 - - [29/May/2025 16:37:56] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:37:56,436 [INFO] 127.0.0.1 - - [29/May/2025 16:37:56] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:42:05,760 [INFO] 127.0.0.1 - - [29/May/2025 16:42:05] "GET / HTTP/1.1" 200 -
2025-05-29 16:42:05,789 [INFO] 127.0.0.1 - - [29/May/2025 16:42:05] "GET /static/css/main.css HTTP/1.1" 200 -
2025-05-29 16:42:05,943 [INFO] 127.0.0.1 - - [29/May/2025 16:42:05] "GET / HTTP/1.1" 200 -
2025-05-29 16:42:05,972 [INFO] 127.0.0.1 - - [29/May/2025 16:42:05] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 16:42:08,084 [INFO] 127.0.0.1 - - [29/May/2025 16:42:08] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:42:10,118 [INFO] 127.0.0.1 - - [29/May/2025 16:42:10] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:42:10,258 [INFO] 127.0.0.1 - - [29/May/2025 16:42:10] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:42:10,451 [INFO] 127.0.0.1 - - [29/May/2025 16:42:10] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:42:10,692 [INFO] 127.0.0.1 - - [29/May/2025 16:42:10] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 16:42:13,637 [INFO] 127.0.0.1 - - [29/May/2025 16:42:13] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 16:42:17,177 [INFO] 127.0.0.1 - - [29/May/2025 16:42:17] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 17:05:25,923 [INFO] 127.0.0.1 - - [29/May/2025 17:05:25] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 17:05:28,855 [INFO] 127.0.0.1 - - [29/May/2025 17:05:28] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 17:05:59,982 [INFO] 127.0.0.1 - - [29/May/2025 17:05:59] "GET / HTTP/1.1" 200 -
2025-05-29 17:06:00,043 [INFO] 127.0.0.1 - - [29/May/2025 17:06:00] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:06:03,444 [INFO] 127.0.0.1 - - [29/May/2025 17:06:03] "GET / HTTP/1.1" 200 -
2025-05-29 17:06:03,469 [INFO] 127.0.0.1 - - [29/May/2025 17:06:03] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:06:04,101 [INFO] 127.0.0.1 - - [29/May/2025 17:06:04] "GET / HTTP/1.1" 200 -
2025-05-29 17:06:04,140 [INFO] 127.0.0.1 - - [29/May/2025 17:06:04] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:06:04,293 [INFO] 127.0.0.1 - - [29/May/2025 17:06:04] "GET / HTTP/1.1" 200 -
2025-05-29 17:06:04,341 [INFO] 127.0.0.1 - - [29/May/2025 17:06:04] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:21:07,887 [INFO]  * Detected change in 'C:\\Users\\sanke\\OneDrive\\Desktop\\Meal_planner\\app.py', reloading
2025-05-29 17:21:08,181 [INFO]  * Restarting with stat
2025-05-29 17:21:11,995 [INFO] CSV loaded successfully.
2025-05-29 17:21:12,032 [WARNING]  * Debugger is active!
2025-05-29 17:21:12,036 [INFO]  * Debugger PIN: 461-893-414
2025-05-29 17:21:13,377 [INFO] 127.0.0.1 - - [29/May/2025 17:21:13] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 17:21:13,502 [INFO] 127.0.0.1 - - [29/May/2025 17:21:13] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:21:15,218 [INFO] 127.0.0.1 - - [29/May/2025 17:21:15] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 17:21:15,243 [INFO] 127.0.0.1 - - [29/May/2025 17:21:15] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:23:12,190 [INFO] 127.0.0.1 - - [29/May/2025 17:23:12] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 17:23:12,225 [INFO] 127.0.0.1 - - [29/May/2025 17:23:12] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:23:13,008 [INFO] 127.0.0.1 - - [29/May/2025 17:23:13] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 17:23:13,033 [INFO] 127.0.0.1 - - [29/May/2025 17:23:13] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:23:13,333 [INFO] 127.0.0.1 - - [29/May/2025 17:23:13] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 17:23:13,366 [INFO] 127.0.0.1 - - [29/May/2025 17:23:13] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:23:13,457 [INFO] 127.0.0.1 - - [29/May/2025 17:23:13] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 17:23:13,482 [INFO] 127.0.0.1 - - [29/May/2025 17:23:13] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:23:13,628 [INFO] 127.0.0.1 - - [29/May/2025 17:23:13] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 17:23:13,659 [INFO] 127.0.0.1 - - [29/May/2025 17:23:13] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:23:13,863 [INFO] 127.0.0.1 - - [29/May/2025 17:23:13] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 17:23:13,888 [INFO] 127.0.0.1 - - [29/May/2025 17:23:13] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:23:15,926 [INFO] 127.0.0.1 - - [29/May/2025 17:23:15] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 17:23:15,958 [INFO] 127.0.0.1 - - [29/May/2025 17:23:15] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:23:16,220 [INFO] 127.0.0.1 - - [29/May/2025 17:23:16] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 17:23:16,247 [INFO] 127.0.0.1 - - [29/May/2025 17:23:16] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:28:41,077 [INFO] 127.0.0.1 - - [29/May/2025 17:28:41] "GET / HTTP/1.1" 200 -
2025-05-29 17:28:41,114 [INFO] 127.0.0.1 - - [29/May/2025 17:28:41] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:29:02,240 [INFO] 127.0.0.1 - - [29/May/2025 17:29:02] "GET / HTTP/1.1" 200 -
2025-05-29 17:29:02,282 [INFO] 127.0.0.1 - - [29/May/2025 17:29:02] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 17:29:43,443 [INFO] 127.0.0.1 - - [29/May/2025 17:29:43] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 19:45:54,629 [INFO] 127.0.0.1 - - [29/May/2025 19:45:54] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 19:46:41,282 [INFO] Received Input: give me meal with 1300 calories with 50% protein 30% carbs and 20% fats 
2025-05-29 19:46:41,854 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4635c72f-ac49-4139-bde5-4f282f1604ba', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal with 1300 calories with 50% protein 30% carbs and 20% fats '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-05-29 19:46:41,886 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-29 19:46:41,887 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-05-29 19:46:41,995 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002C2CEC769D0>
2025-05-29 19:46:41,995 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000002C2CE63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-05-29 19:46:42,062 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002C2CEC76A50>
2025-05-29 19:46:42,063 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-29 19:46:42,064 [DEBUG] send_request_headers.complete
2025-05-29 19:46:42,064 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-29 19:46:42,065 [DEBUG] send_request_body.complete
2025-05-29 19:46:42,065 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-29 19:46:44,037 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 29 May 2025 14:16:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'846'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'852'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_eae4b519e3ade9f5e332e6f11477bc5b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Xt8PQrW0y_n_6zBWEsuHfjsbLUeRrycEzZsqx1_so1o-1748528204-1.0.1.1-Z45DGgXc6wBBZtLDTBlaahanUzlXXhC3Zq6vqwhTNaVAyD.A1chqMO6vY1Xj6hDd2ldCPCPseWPz0ZpTmcXTu6rQoc9vePHN2ISLBv0KwJQ; path=/; expires=Thu, 29-May-25 14:46:44 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=Ex4ocqXpGqnPJOxDh9uEMDz1wzOhI0sJTiXBuxrwiAc-1748528204610-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94769c7498783a3f-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-29 19:46:44,040 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-29 19:46:44,040 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-29 19:46:44,042 [DEBUG] receive_response_body.complete
2025-05-29 19:46:44,042 [DEBUG] response_closed.started
2025-05-29 19:46:44,042 [DEBUG] response_closed.complete
2025-05-29 19:46:44,043 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 29 May 2025 14:16:44 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '846'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '852'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29910'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '180ms'), ('x-request-id', 'req_eae4b519e3ade9f5e332e6f11477bc5b'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=Xt8PQrW0y_n_6zBWEsuHfjsbLUeRrycEzZsqx1_so1o-1748528204-1.0.1.1-Z45DGgXc6wBBZtLDTBlaahanUzlXXhC3Zq6vqwhTNaVAyD.A1chqMO6vY1Xj6hDd2ldCPCPseWPz0ZpTmcXTu6rQoc9vePHN2ISLBv0KwJQ; path=/; expires=Thu, 29-May-25 14:46:44 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=Ex4ocqXpGqnPJOxDh9uEMDz1wzOhI0sJTiXBuxrwiAc-1748528204610-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94769c7498783a3f-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-05-29 19:46:44,045 [DEBUG] request_id: req_eae4b519e3ade9f5e332e6f11477bc5b
2025-05-29 19:46:44,053 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1300,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-05-29 19:46:44,054 [INFO]  Extracted Params: {'calories_target': 1300, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-05-29 19:46:44,127 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4cfb4ed9-ffd9-462d-b0a9-54db5dd1f7fc', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1449.0 kcal\nProtein: 162.5 g\nCarbs: 97.5 g\nFat: 45.1 g\nFiber: 25.0 g\nSugar: 25.0 g\nSodium: 1179.3 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRasam powder (Rasam masala) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-05-29 19:46:44,129 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-05-29 19:46:44,129 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-05-29 19:46:44,130 [DEBUG] send_request_headers.complete
2025-05-29 19:46:44,130 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-05-29 19:46:44,131 [DEBUG] send_request_body.complete
2025-05-29 19:46:44,131 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-05-29 19:46:49,114 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 29 May 2025 14:16:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4248'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4251'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29846'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'308ms'), (b'x-request-id', b'req_8e6b206b20735c310743f4f871db35a8'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94769c81dfe23a3f-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-05-29 19:46:49,115 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-05-29 19:46:49,116 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-05-29 19:46:49,117 [DEBUG] receive_response_body.complete
2025-05-29 19:46:49,117 [DEBUG] response_closed.started
2025-05-29 19:46:49,117 [DEBUG] response_closed.complete
2025-05-29 19:46:49,117 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 29 May 2025 14:16:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4248', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4251', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29846', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '308ms', 'x-request-id': 'req_8e6b206b20735c310743f4f871db35a8', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94769c81dfe23a3f-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-05-29 19:46:49,119 [DEBUG] request_id: req_8e6b206b20735c310743f4f871db35a8
2025-05-29 19:46:49,120 [INFO]  Meal plan generated with 6 dishes
2025-05-29 19:46:49,121 [INFO] 127.0.0.1 - - [29/May/2025 19:46:49] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-05-29 19:47:14,748 [INFO] 127.0.0.1 - - [29/May/2025 19:47:14] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 19:47:18,180 [INFO] 127.0.0.1 - - [29/May/2025 19:47:18] "GET /chatbot HTTP/1.1" 200 -
2025-05-29 19:47:18,211 [INFO] 127.0.0.1 - - [29/May/2025 19:47:18] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 19:49:04,668 [INFO] 127.0.0.1 - - [29/May/2025 19:49:04] "GET / HTTP/1.1" 200 -
2025-05-29 19:49:04,701 [INFO] 127.0.0.1 - - [29/May/2025 19:49:04] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 19:49:05,523 [INFO] 127.0.0.1 - - [29/May/2025 19:49:05] "GET / HTTP/1.1" 200 -
2025-05-29 19:49:05,550 [INFO] 127.0.0.1 - - [29/May/2025 19:49:05] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 19:49:05,706 [INFO] 127.0.0.1 - - [29/May/2025 19:49:05] "GET / HTTP/1.1" 200 -
2025-05-29 19:49:05,726 [INFO] 127.0.0.1 - - [29/May/2025 19:49:05] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-05-29 19:49:06,928 [INFO] 127.0.0.1 - - [29/May/2025 19:49:06] "[35m[1mGET /chatbot HTTP/1.1[0m" 500 -
2025-05-29 19:49:06,967 [INFO] 127.0.0.1 - - [29/May/2025 19:49:06] "GET /chatbot?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1" 200 -
2025-05-29 19:49:06,967 [INFO] 127.0.0.1 - - [29/May/2025 19:49:06] "GET /chatbot?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1" 200 -
2025-05-29 19:49:07,023 [INFO] 127.0.0.1 - - [29/May/2025 19:49:07] "GET /chatbot?__debugger__=yes&cmd=resource&f=console.png&s=BEr9NBEEku4vwVUxD8X3 HTTP/1.1" 200 -
2025-05-29 19:49:07,043 [INFO] 127.0.0.1 - - [29/May/2025 19:49:07] "GET /chatbot?__debugger__=yes&cmd=resource&f=console.png HTTP/1.1" 200 -
2025-05-29 19:49:10,612 [INFO] 127.0.0.1 - - [29/May/2025 19:49:10] "GET /meal-planner HTTP/1.1" 200 -
2025-05-29 19:49:14,358 [INFO] 127.0.0.1 - - [29/May/2025 19:49:14] "[35m[1mGET /chatbot HTTP/1.1[0m" 500 -
2025-05-29 19:49:14,387 [INFO] 127.0.0.1 - - [29/May/2025 19:49:14] "[36mGET /chatbot?__debugger__=yes&cmd=resource&f=style.css HTTP/1.1[0m" 304 -
2025-05-29 19:49:14,395 [INFO] 127.0.0.1 - - [29/May/2025 19:49:14] "[36mGET /chatbot?__debugger__=yes&cmd=resource&f=debugger.js HTTP/1.1[0m" 304 -
2025-05-29 19:49:14,409 [INFO] 127.0.0.1 - - [29/May/2025 19:49:14] "[36mGET /chatbot?__debugger__=yes&cmd=resource&f=console.png&s=BEr9NBEEku4vwVUxD8X3 HTTP/1.1[0m" 304 -
2025-06-06 11:32:43,524 [INFO] CSV loaded successfully.
2025-06-06 11:32:44,597 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-06-06 11:32:44,597 [INFO] [33mPress CTRL+C to quit[0m
2025-06-06 11:32:44,613 [INFO]  * Restarting with stat
2025-06-06 11:32:47,951 [INFO] CSV loaded successfully.
2025-06-06 11:32:48,003 [WARNING]  * Debugger is active!
2025-06-06 11:32:48,009 [INFO]  * Debugger PIN: 461-893-414
2025-06-06 11:32:51,538 [INFO] 127.0.0.1 - - [06/Jun/2025 11:32:51] "GET / HTTP/1.1" 200 -
2025-06-06 11:32:51,776 [INFO] 127.0.0.1 - - [06/Jun/2025 11:32:51] "GET /static/css/main.css HTTP/1.1" 200 -
2025-06-06 11:32:51,925 [INFO] 127.0.0.1 - - [06/Jun/2025 11:32:51] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-06-06 11:33:12,047 [INFO] 127.0.0.1 - - [06/Jun/2025 11:33:12] "GET /meal-planner HTTP/1.1" 200 -
2025-06-06 11:34:01,444 [INFO] Received Input: give me the meal plan with 1500 calorie
2025-06-06 11:34:02,031 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-23427d96-67c4-4f69-8d02-9e38ca680970', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me the meal plan with 1500 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:34:02,045 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:34:02,046 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:34:02,052 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-06 11:34:02,053 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-06 11:34:02,203 [DEBUG] 2 retries left
2025-06-06 11:34:02,203 [INFO] Retrying request to /chat/completions in 0.458322 seconds
2025-06-06 11:34:02,663 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-23427d96-67c4-4f69-8d02-9e38ca680970', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me the meal plan with 1500 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:34:02,664 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:34:02,665 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:34:02,666 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-06 11:34:02,666 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-06 11:34:02,685 [DEBUG] 1 retry left
2025-06-06 11:34:02,685 [INFO] Retrying request to /chat/completions in 0.901827 seconds
2025-06-06 11:34:03,588 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-23427d96-67c4-4f69-8d02-9e38ca680970', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me the meal plan with 1500 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:34:03,589 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:34:03,590 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:34:03,591 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-06 11:34:03,591 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-06 11:34:03,601 [DEBUG] Raising connection error
2025-06-06 11:34:03,602 [ERROR] Error extracting preferences: Connection error.
2025-06-06 11:34:03,657 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-06 11:34:03,669 [ERROR]  Exception: Connection error.
2025-06-06 11:34:03,684 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 353, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-06 11:34:03,696 [INFO] 127.0.0.1 - - [06/Jun/2025 11:34:03] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-06 11:34:11,108 [INFO] Received Input: give me the meal plan with 1500 calorie
2025-06-06 11:34:11,110 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-effee02c-dba9-453f-ad31-3db405595f6c', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me the meal plan with 1500 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:34:11,111 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:34:11,112 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:34:11,112 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-06 11:34:11,114 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-06 11:34:11,133 [DEBUG] 2 retries left
2025-06-06 11:34:11,134 [INFO] Retrying request to /chat/completions in 0.455111 seconds
2025-06-06 11:34:11,590 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-effee02c-dba9-453f-ad31-3db405595f6c', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me the meal plan with 1500 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:34:11,591 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:34:11,592 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:34:11,592 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-06 11:34:11,593 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-06 11:34:11,608 [DEBUG] 1 retry left
2025-06-06 11:34:11,608 [INFO] Retrying request to /chat/completions in 0.860684 seconds
2025-06-06 11:34:12,470 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-effee02c-dba9-453f-ad31-3db405595f6c', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me the meal plan with 1500 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:34:12,471 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:34:12,472 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:34:12,473 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-06 11:34:12,473 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-06 11:34:12,494 [DEBUG] Raising connection error
2025-06-06 11:34:12,497 [ERROR] Error extracting preferences: Connection error.
2025-06-06 11:34:12,500 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-06 11:34:12,524 [ERROR]  Exception: Connection error.
2025-06-06 11:34:12,528 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 353, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-06 11:34:12,545 [INFO] 127.0.0.1 - - [06/Jun/2025 11:34:12] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-06 11:34:46,997 [INFO] Received Input: give me the meal plan with 1500 calorie
2025-06-06 11:34:46,999 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4c523c43-d62b-4fca-8751-07b68db22961', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me the meal plan with 1500 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:34:47,000 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:34:47,001 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:34:49,650 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C089FD0>
2025-06-06 11:34:49,650 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-06 11:34:50,737 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C08BC50>
2025-06-06 11:34:50,738 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-06 11:34:50,739 [DEBUG] send_request_headers.complete
2025-06-06 11:34:50,740 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-06 11:34:50,741 [DEBUG] send_request_body.complete
2025-06-06 11:34:50,741 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-06 11:34:58,858 [INFO] 127.0.0.1 - - [06/Jun/2025 11:34:58] "GET /meal-planner HTTP/1.1" 200 -
2025-06-06 11:35:05,139 [DEBUG] receive_response_headers.failed exception=RemoteProtocolError('Server disconnected without sending a response.')
2025-06-06 11:35:05,139 [DEBUG] response_closed.started
2025-06-06 11:35:05,140 [DEBUG] response_closed.complete
2025-06-06 11:35:05,141 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 103, in handle_request
    return self._connection.handle_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 136, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 106, in handle_request
    ) = self._receive_response_headers(**kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 177, in _receive_response_headers
    event = self._receive_event(timeout=timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 231, in _receive_event
    raise RemoteProtocolError(msg)
httpcore.RemoteProtocolError: Server disconnected without sending a response.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.RemoteProtocolError: Server disconnected without sending a response.
2025-06-06 11:35:05,170 [DEBUG] 2 retries left
2025-06-06 11:35:05,171 [INFO] Retrying request to /chat/completions in 0.409268 seconds
2025-06-06 11:35:05,582 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4c523c43-d62b-4fca-8751-07b68db22961', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me the meal plan with 1500 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:35:05,583 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:35:05,584 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:35:17,298 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C02A990>
2025-06-06 11:35:17,298 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-06 11:35:22,308 [DEBUG] start_tls.failed exception=ConnectTimeout(TimeoutError('_ssl.c:989: The handshake operation timed out'))
2025-06-06 11:35:22,309 [DEBUG] Encountered httpx.TimeoutException
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 156, in _connect
    stream = stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 154, in start_tls
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectTimeout: _ssl.c:989: The handshake operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectTimeout: _ssl.c:989: The handshake operation timed out
2025-06-06 11:35:22,321 [DEBUG] 1 retry left
2025-06-06 11:35:22,321 [INFO] Retrying request to /chat/completions in 0.958202 seconds
2025-06-06 11:35:23,280 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4c523c43-d62b-4fca-8751-07b68db22961', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me the meal plan with 1500 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:35:23,281 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:35:23,282 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:35:25,811 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C088090>
2025-06-06 11:35:25,812 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-06 11:35:30,821 [DEBUG] start_tls.failed exception=ConnectTimeout(TimeoutError('_ssl.c:989: The handshake operation timed out'))
2025-06-06 11:35:30,821 [DEBUG] Encountered httpx.TimeoutException
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 156, in _connect
    stream = stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 154, in start_tls
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectTimeout: _ssl.c:989: The handshake operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectTimeout: _ssl.c:989: The handshake operation timed out
2025-06-06 11:35:30,834 [DEBUG] Raising timeout error
2025-06-06 11:35:30,834 [ERROR] Error extracting preferences: Request timed out.
2025-06-06 11:35:30,837 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 156, in _connect
    stream = stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 154, in start_tls
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectTimeout: _ssl.c:989: The handshake operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectTimeout: _ssl.c:989: The handshake operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 987, in request
    raise APITimeoutError(request=request) from err
openai.APITimeoutError: Request timed out.

2025-06-06 11:35:30,853 [ERROR]  Exception: Request timed out.
2025-06-06 11:35:30,857 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 156, in _connect
    stream = stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 154, in start_tls
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectTimeout: _ssl.c:989: The handshake operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectTimeout: _ssl.c:989: The handshake operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 353, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 987, in request
    raise APITimeoutError(request=request) from err
openai.APITimeoutError: Request timed out.

2025-06-06 11:35:30,873 [INFO] 127.0.0.1 - - [06/Jun/2025 11:35:30] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-06 11:35:38,232 [INFO] Received Input: give me meal plan 1300 calorie with 50 % protein , 40 % carbs and 10 % fats
2025-06-06 11:35:38,234 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-5ca131b5-b645-4b36-ab3e-a9ffe2f3e510', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal plan 1300 calorie with 50 % protein , 40 % carbs and 10 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:35:38,236 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:35:38,236 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:35:39,703 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0A72D0>
2025-06-06 11:35:39,703 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-06 11:35:44,714 [DEBUG] start_tls.failed exception=ConnectTimeout(TimeoutError('_ssl.c:989: The handshake operation timed out'))
2025-06-06 11:35:44,715 [DEBUG] Encountered httpx.TimeoutException
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 156, in _connect
    stream = stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 154, in start_tls
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectTimeout: _ssl.c:989: The handshake operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectTimeout: _ssl.c:989: The handshake operation timed out
2025-06-06 11:35:44,724 [DEBUG] 2 retries left
2025-06-06 11:35:44,724 [INFO] Retrying request to /chat/completions in 0.487272 seconds
2025-06-06 11:35:45,213 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-5ca131b5-b645-4b36-ab3e-a9ffe2f3e510', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal plan 1300 calorie with 50 % protein , 40 % carbs and 10 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:35:45,214 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:35:45,215 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:35:51,694 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2BC6F750>
2025-06-06 11:35:51,694 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-06 11:35:54,479 [INFO] Received Input: give me meal plan 1300 calorie with 50 % protein , 40 % carbs and 10 % fats
2025-06-06 11:35:54,481 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-676d5b35-bad2-4c24-8aca-c75be98d9c80', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal plan 1300 calorie with 50 % protein , 40 % carbs and 10 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:35:54,482 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:35:54,483 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:35:56,690 [DEBUG] start_tls.failed exception=ConnectTimeout(TimeoutError('_ssl.c:989: The handshake operation timed out'))
2025-06-06 11:35:56,691 [DEBUG] Encountered httpx.TimeoutException
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 156, in _connect
    stream = stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 154, in start_tls
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectTimeout: _ssl.c:989: The handshake operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectTimeout: _ssl.c:989: The handshake operation timed out
2025-06-06 11:35:56,700 [DEBUG] 1 retry left
2025-06-06 11:35:56,701 [INFO] Retrying request to /chat/completions in 0.907876 seconds
2025-06-06 11:35:57,610 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-5ca131b5-b645-4b36-ab3e-a9ffe2f3e510', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal plan 1300 calorie with 50 % protein , 40 % carbs and 10 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:35:57,612 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:35:57,613 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:36:01,217 [INFO] Received Input: give me meal plan 1300 calorie with 50 % protein , 40 % carbs and 10 % fats
2025-06-06 11:36:01,219 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-0ac9f8e5-51d1-4d7f-8c75-c82b473ffe19', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal plan 1300 calorie with 50 % protein , 40 % carbs and 10 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:36:01,220 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:36:01,221 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:36:01,446 [INFO] Received Input: give me meal plan 1300 calorie with 50 % protein , 40 % carbs and 10 % fats
2025-06-06 11:36:01,448 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-07701fbf-efd4-422d-8c64-3048c00f3347', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal plan 1300 calorie with 50 % protein , 40 % carbs and 10 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:36:01,449 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:36:01,449 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:36:05,594 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-06 11:36:05,595 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-06 11:36:05,595 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-06 11:36:05,595 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-06 11:36:05,595 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-06 11:36:05,596 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-06 11:36:05,596 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-06 11:36:05,597 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-06 11:36:05,615 [DEBUG] 2 retries left
2025-06-06 11:36:05,625 [DEBUG] Raising connection error
2025-06-06 11:36:05,637 [DEBUG] 2 retries left
2025-06-06 11:36:05,648 [DEBUG] 2 retries left
2025-06-06 11:36:05,648 [INFO] Retrying request to /chat/completions in 0.376577 seconds
2025-06-06 11:36:05,648 [ERROR] Error extracting preferences: Connection error.
2025-06-06 11:36:05,649 [INFO] Retrying request to /chat/completions in 0.480515 seconds
2025-06-06 11:36:05,649 [INFO] Retrying request to /chat/completions in 0.405396 seconds
2025-06-06 11:36:05,654 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-06 11:36:05,668 [ERROR]  Exception: Connection error.
2025-06-06 11:36:05,670 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 353, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-06 11:36:05,686 [INFO] 127.0.0.1 - - [06/Jun/2025 11:36:05] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-06 11:36:06,027 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-676d5b35-bad2-4c24-8aca-c75be98d9c80', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal plan 1300 calorie with 50 % protein , 40 % carbs and 10 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:36:06,028 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:36:06,029 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:36:06,058 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-0ac9f8e5-51d1-4d7f-8c75-c82b473ffe19', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal plan 1300 calorie with 50 % protein , 40 % carbs and 10 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:36:06,061 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:36:06,062 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:36:06,133 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-07701fbf-efd4-422d-8c64-3048c00f3347', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal plan 1300 calorie with 50 % protein , 40 % carbs and 10 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-06 11:36:06,134 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:36:06,135 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-06 11:36:10,574 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0B9350>
2025-06-06 11:36:10,574 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0BAAD0>
2025-06-06 11:36:10,574 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0BBC50>
2025-06-06 11:36:10,575 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-06 11:36:10,576 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-06 11:36:10,576 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-06 11:36:10,970 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0BB790>
2025-06-06 11:36:10,971 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-06 11:36:10,972 [DEBUG] send_request_headers.complete
2025-06-06 11:36:10,972 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-06 11:36:10,972 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0B8990>
2025-06-06 11:36:10,973 [DEBUG] send_request_body.complete
2025-06-06 11:36:10,973 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-06 11:36:10,973 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-06 11:36:10,974 [DEBUG] send_request_headers.complete
2025-06-06 11:36:10,975 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-06 11:36:10,976 [DEBUG] send_request_body.complete
2025-06-06 11:36:10,976 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-06 11:36:11,002 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0A5B50>
2025-06-06 11:36:11,003 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-06 11:36:11,004 [DEBUG] send_request_headers.complete
2025-06-06 11:36:11,005 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-06 11:36:11,006 [DEBUG] send_request_body.complete
2025-06-06 11:36:11,006 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-06 11:36:13,895 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 06 Jun 2025 06:06:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1486'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1495'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_c91033d42ece47ad23b23aa03ecd5747'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=tBtpBXD3niY3sCbfHUNXDcWYc7sNqClmoBYlQFyzrTc-1749189974-1.0.1.1-uEGCLQpa2SiigrNTuiNipy4jAlBPthR58dz00CEQuNDOz7km49ZCoC4MjXO.ZW4cyZ2nZiwj1hdY9j_bB9PdDpHJuQ26_h4Hxn5jcTOHiqI; path=/; expires=Fri, 06-Jun-25 06:36:14 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=KmiDK5HR4y5COebRJQgcu2Hxw9z7UpKFBUP_AZC6aOs-1749189974573-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94b5b8ed9b39ff61-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-06 11:36:13,929 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-06 11:36:13,946 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-06 11:36:13,967 [DEBUG] receive_response_body.complete
2025-06-06 11:36:13,978 [DEBUG] response_closed.started
2025-06-06 11:36:13,984 [DEBUG] response_closed.complete
2025-06-06 11:36:14,000 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 06 Jun 2025 06:06:14 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '1486'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1495'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29910'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '180ms'), ('x-request-id', 'req_c91033d42ece47ad23b23aa03ecd5747'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=tBtpBXD3niY3sCbfHUNXDcWYc7sNqClmoBYlQFyzrTc-1749189974-1.0.1.1-uEGCLQpa2SiigrNTuiNipy4jAlBPthR58dz00CEQuNDOz7km49ZCoC4MjXO.ZW4cyZ2nZiwj1hdY9j_bB9PdDpHJuQ26_h4Hxn5jcTOHiqI; path=/; expires=Fri, 06-Jun-25 06:36:14 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=KmiDK5HR4y5COebRJQgcu2Hxw9z7UpKFBUP_AZC6aOs-1749189974573-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94b5b8ed9b39ff61-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-06 11:36:14,022 [DEBUG] request_id: req_c91033d42ece47ad23b23aa03ecd5747
2025-06-06 11:36:14,053 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1300,
  "protein_pct": 50,
  "carbs_pct": 40,
  "fat_pct": 10,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-06 11:36:14,078 [INFO]  Extracted Params: {'calories_target': 1300, 'protein_pct': 50, 'carbs_pct': 40, 'fat_pct': 10, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-06 11:36:14,152 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 06 Jun 2025 06:06:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'859'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'865'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_b81181c795b9b5dbec3825a9360fc6bd'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=bFTMsj4fghLBq25Y0xY1wBj6SUN9Zotb1u1mYYSN6kc-1749189974-1.0.1.1-NjjFk5U9y42RUoXyemytaPu4aUcXW8U4N0UKhzFnit0H4NTawG6VwKnKoJQxjucY4YjE3qAxvvgDw8jkEMgF3vE3krFznr335C3mrwWgXz4; path=/; expires=Fri, 06-Jun-25 06:36:14 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=JmNgsM.LSdXtWmgyReowveXMlcU84BD785.RhEPppms-1749189974856-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94b5b8ee0e4c4734-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-06 11:36:14,167 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-06 11:36:14,171 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-06 11:36:14,192 [DEBUG] receive_response_body.complete
2025-06-06 11:36:14,197 [DEBUG] response_closed.started
2025-06-06 11:36:14,223 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a69ffb32-b590-4d65-acbb-56ead3305f01', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1564.0 kcal\nProtein: 162.5 g\nCarbs: 129.9 g\nFat: 43.8 g\nFiber: 30.0 g\nSugar: 25.0 g\nSodium: 1144.5 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-06 11:36:14,244 [DEBUG] response_closed.complete
2025-06-06 11:36:14,246 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 06 Jun 2025 06:06:14 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '859'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '865'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29910'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '180ms'), ('x-request-id', 'req_b81181c795b9b5dbec3825a9360fc6bd'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=bFTMsj4fghLBq25Y0xY1wBj6SUN9Zotb1u1mYYSN6kc-1749189974-1.0.1.1-NjjFk5U9y42RUoXyemytaPu4aUcXW8U4N0UKhzFnit0H4NTawG6VwKnKoJQxjucY4YjE3qAxvvgDw8jkEMgF3vE3krFznr335C3mrwWgXz4; path=/; expires=Fri, 06-Jun-25 06:36:14 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=JmNgsM.LSdXtWmgyReowveXMlcU84BD785.RhEPppms-1749189974856-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94b5b8ee0e4c4734-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-06 11:36:14,269 [DEBUG] request_id: req_b81181c795b9b5dbec3825a9360fc6bd
2025-06-06 11:36:14,275 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1300,
  "protein_pct": 50,
  "carbs_pct": 40,
  "fat_pct": 10,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-06 11:36:14,291 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:36:14,352 [INFO]  Extracted Params: {'calories_target': 1300, 'protein_pct': 50, 'carbs_pct': 40, 'fat_pct': 10, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-06 11:36:14,388 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-06 11:36:14,399 [DEBUG] send_request_headers.complete
2025-06-06 11:36:14,410 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-06 11:36:14,414 [DEBUG] send_request_body.complete
2025-06-06 11:36:14,415 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-06 11:36:14,456 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2adcb6a7-76c6-42e7-96d1-d27d97294e11', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1564.0 kcal\nProtein: 162.5 g\nCarbs: 129.9 g\nFat: 43.8 g\nFiber: 30.0 g\nSugar: 25.0 g\nSodium: 1144.5 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-06 11:36:14,466 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:36:14,469 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-06 11:36:14,470 [DEBUG] send_request_headers.complete
2025-06-06 11:36:14,473 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-06 11:36:14,483 [DEBUG] send_request_body.complete
2025-06-06 11:36:14,484 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-06 11:36:14,671 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 06 Jun 2025 06:06:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1017'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1028'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_f686ce9fa9e95d85bd3aa6b9ec5b2e65'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=z9qBDb4yDpfXkL1f1dbpX3AQXF1YFFYOf0rnbZHmoTE-1749189975-1.0.1.1-36Tbg9jRDcrF4CJ18QepRB9L2BntwPBDryMY8wpU5ZWoe8eWNeXNXfStxzdvfcrz44JJ62zUffknogdF52whAqgB4usTAwteZzY0CdxCm9Q; path=/; expires=Fri, 06-Jun-25 06:36:15 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=r3UdFEf4UIgPdulNXc.tid2dAFFc_guMmXmkzYaNTbc-1749189975348-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94b5b8ede9073f91-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-06 11:36:14,695 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-06 11:36:14,696 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-06 11:36:14,698 [DEBUG] receive_response_body.complete
2025-06-06 11:36:14,700 [DEBUG] response_closed.started
2025-06-06 11:36:14,700 [DEBUG] response_closed.complete
2025-06-06 11:36:14,701 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 06 Jun 2025 06:06:15 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '1017'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1028'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29910'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '180ms'), ('x-request-id', 'req_f686ce9fa9e95d85bd3aa6b9ec5b2e65'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=z9qBDb4yDpfXkL1f1dbpX3AQXF1YFFYOf0rnbZHmoTE-1749189975-1.0.1.1-36Tbg9jRDcrF4CJ18QepRB9L2BntwPBDryMY8wpU5ZWoe8eWNeXNXfStxzdvfcrz44JJ62zUffknogdF52whAqgB4usTAwteZzY0CdxCm9Q; path=/; expires=Fri, 06-Jun-25 06:36:15 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=r3UdFEf4UIgPdulNXc.tid2dAFFc_guMmXmkzYaNTbc-1749189975348-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94b5b8ede9073f91-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-06 11:36:14,704 [DEBUG] request_id: req_f686ce9fa9e95d85bd3aa6b9ec5b2e65
2025-06-06 11:36:14,705 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1300,
  "protein_pct": 50,
  "carbs_pct": 40,
  "fat_pct": 10,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-06 11:36:14,711 [INFO]  Extracted Params: {'calories_target': 1300, 'protein_pct': 50, 'carbs_pct': 40, 'fat_pct': 10, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-06 11:36:14,759 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-365070ee-df82-45bc-b804-7749cbc5d38a', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1564.0 kcal\nProtein: 162.5 g\nCarbs: 129.9 g\nFat: 43.8 g\nFiber: 30.0 g\nSugar: 25.0 g\nSodium: 1144.5 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-06 11:36:14,763 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-06 11:36:14,764 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-06 11:36:14,767 [DEBUG] send_request_headers.complete
2025-06-06 11:36:14,767 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-06 11:36:14,768 [DEBUG] send_request_body.complete
2025-06-06 11:36:14,768 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-06 11:36:19,163 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 06 Jun 2025 06:06:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'2969'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2973'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29858'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'284ms'), (b'x-request-id', b'req_3d8c4f04b030706096942542d06c4775'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94b5b909ec643f91-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-06 11:36:19,168 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-06 11:36:19,173 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-06 11:36:19,179 [DEBUG] receive_response_body.complete
2025-06-06 11:36:19,180 [DEBUG] response_closed.started
2025-06-06 11:36:19,200 [DEBUG] response_closed.complete
2025-06-06 11:36:19,205 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 06 Jun 2025 06:06:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '2969', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2973', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29858', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '284ms', 'x-request-id': 'req_3d8c4f04b030706096942542d06c4775', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94b5b909ec643f91-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-06 11:36:19,219 [DEBUG] request_id: req_3d8c4f04b030706096942542d06c4775
2025-06-06 11:36:19,221 [INFO]  Meal plan generated with 5 dishes
2025-06-06 11:36:19,228 [INFO] 127.0.0.1 - - [06/Jun/2025 11:36:19] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-06 11:36:19,597 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 06 Jun 2025 06:06:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3379'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3382'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29858'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'284ms'), (b'x-request-id', b'req_eb556515213b26d4ff0b5680e3f65994'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94b5b9060bf34734-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-06 11:36:19,602 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-06 11:36:19,604 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-06 11:36:19,606 [DEBUG] receive_response_body.complete
2025-06-06 11:36:19,609 [DEBUG] response_closed.started
2025-06-06 11:36:19,614 [DEBUG] response_closed.complete
2025-06-06 11:36:19,615 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 06 Jun 2025 06:06:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3379', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3382', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29858', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '284ms', 'x-request-id': 'req_eb556515213b26d4ff0b5680e3f65994', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94b5b9060bf34734-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-06 11:36:19,622 [DEBUG] request_id: req_eb556515213b26d4ff0b5680e3f65994
2025-06-06 11:36:19,624 [INFO]  Meal plan generated with 5 dishes
2025-06-06 11:36:19,626 [INFO] 127.0.0.1 - - [06/Jun/2025 11:36:19] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-06 11:36:21,008 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 06 Jun 2025 06:06:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'5094'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5100'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29858'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'284ms'), (b'x-request-id', b'req_99f1869ba92bfe60de0045ea64963fb0'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94b5b9080d31ff61-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-06 11:36:21,009 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-06 11:36:21,010 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-06 11:36:21,011 [DEBUG] receive_response_body.complete
2025-06-06 11:36:21,011 [DEBUG] response_closed.started
2025-06-06 11:36:21,012 [DEBUG] response_closed.complete
2025-06-06 11:36:21,012 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 06 Jun 2025 06:06:21 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '5094', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5100', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29858', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '284ms', 'x-request-id': 'req_99f1869ba92bfe60de0045ea64963fb0', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94b5b9080d31ff61-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-06 11:36:21,014 [DEBUG] request_id: req_99f1869ba92bfe60de0045ea64963fb0
2025-06-06 11:36:21,016 [INFO]  Meal plan generated with 5 dishes
2025-06-06 11:36:21,017 [INFO] 127.0.0.1 - - [06/Jun/2025 11:36:21] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-07 15:56:59,328 [INFO] Received Input: give me meal plan 2303 calorie

2025-06-07 15:56:59,347 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-3214bca1-bddb-41d0-b460-27780798314e', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal plan 2303 calorie\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-07 15:56:59,356 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-07 15:56:59,359 [DEBUG] close.started
2025-06-07 15:56:59,362 [DEBUG] close.complete
2025-06-07 15:56:59,362 [DEBUG] close.started
2025-06-07 15:56:59,363 [DEBUG] close.complete
2025-06-07 15:56:59,363 [DEBUG] close.started
2025-06-07 15:56:59,366 [DEBUG] close.complete
2025-06-07 15:56:59,367 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-07 15:56:59,539 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0BB050>
2025-06-07 15:56:59,539 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-07 15:56:59,635 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0B9890>
2025-06-07 15:56:59,636 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-07 15:56:59,637 [DEBUG] send_request_headers.complete
2025-06-07 15:56:59,637 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-07 15:56:59,637 [DEBUG] send_request_body.complete
2025-06-07 15:56:59,638 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-07 15:57:02,132 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 07 Jun 2025 10:27:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1647'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1650'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29921'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'158ms'), (b'x-request-id', b'req_c73e0548587cda18d56e1624acb81a7c'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=BMVoCz6SAmKgG0CoWI.4djxVZPMBhxns7T2Yd25MTdo-1749292022-1.0.1.1-pZFZBppjwOqMGG7MKnLz50VUCHXIzVAbzXuv8I5Yj6rS8wI0lhGakVf6c0ut4b.eWfrySrxVfmwPmGSmdz_ik5GyfTh_qIhUPf54Gt91oKI; path=/; expires=Sat, 07-Jun-25 10:57:02 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94bf7452fe854561-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-07 15:57:02,135 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-07 15:57:02,135 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-07 15:57:02,136 [DEBUG] receive_response_body.complete
2025-06-07 15:57:02,137 [DEBUG] response_closed.started
2025-06-07 15:57:02,137 [DEBUG] response_closed.complete
2025-06-07 15:57:02,137 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 07 Jun 2025 10:27:02 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1647', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1650', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29921', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '158ms', 'x-request-id': 'req_c73e0548587cda18d56e1624acb81a7c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=BMVoCz6SAmKgG0CoWI.4djxVZPMBhxns7T2Yd25MTdo-1749292022-1.0.1.1-pZFZBppjwOqMGG7MKnLz50VUCHXIzVAbzXuv8I5Yj6rS8wI0lhGakVf6c0ut4b.eWfrySrxVfmwPmGSmdz_ik5GyfTh_qIhUPf54Gt91oKI; path=/; expires=Sat, 07-Jun-25 10:57:02 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94bf7452fe854561-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-07 15:57:02,139 [DEBUG] request_id: req_c73e0548587cda18d56e1624acb81a7c
2025-06-07 15:57:02,143 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2303,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-07 15:57:02,145 [INFO]  Extracted Params: {'calories_target': 2303, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-07 15:57:02,201 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-74219fa8-2c92-414e-bb00-1d72d109c289', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2155.0 kcal\nProtein: 115.1 g\nCarbs: 287.8 g\nFat: 76.7 g\nFiber: 59.8 g\nSugar: 6.4 g\nSodium: 724.6 mg\n\nRecommended Meals:\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-07 15:57:02,203 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-07 15:57:02,203 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-07 15:57:02,204 [DEBUG] send_request_headers.complete
2025-06-07 15:57:02,205 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-07 15:57:02,205 [DEBUG] send_request_body.complete
2025-06-07 15:57:02,205 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-07 15:57:06,981 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 07 Jun 2025 10:27:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4131'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4134'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_4c1eeaa8e10b2e119025489fb0866ffc'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94bf7462fc854561-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-07 15:57:06,983 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-07 15:57:06,983 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-07 15:57:06,983 [DEBUG] receive_response_body.complete
2025-06-07 15:57:06,984 [DEBUG] response_closed.started
2025-06-07 15:57:06,984 [DEBUG] response_closed.complete
2025-06-07 15:57:06,984 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 07 Jun 2025 10:27:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4131', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4134', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_4c1eeaa8e10b2e119025489fb0866ffc', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94bf7462fc854561-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-07 15:57:06,985 [DEBUG] request_id: req_4c1eeaa8e10b2e119025489fb0866ffc
2025-06-07 15:57:06,987 [INFO]  Meal plan generated with 8 dishes
2025-06-07 15:57:06,989 [INFO] 127.0.0.1 - - [07/Jun/2025 15:57:06] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-07 15:57:23,908 [INFO] Received Input: give me meal plan 2303 calorie

2025-06-07 15:57:23,909 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-aaf211f0-2c4d-4b9a-85a1-878fab6e0a62', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal plan 2303 calorie\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-07 15:57:23,911 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-07 15:57:23,912 [DEBUG] close.started
2025-06-07 15:57:23,913 [DEBUG] close.complete
2025-06-07 15:57:23,913 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-07 15:57:24,000 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0A56D0>
2025-06-07 15:57:24,001 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-07 15:57:24,074 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0A7190>
2025-06-07 15:57:24,075 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-07 15:57:24,075 [DEBUG] send_request_headers.complete
2025-06-07 15:57:24,076 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-07 15:57:24,076 [DEBUG] send_request_body.complete
2025-06-07 15:57:24,076 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-07 15:57:24,283 [INFO] Received Input: give me meal plan 2303 calorie

2025-06-07 15:57:24,284 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4dbe7977-e836-4b21-9fb1-3f3994d32678', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal plan 2303 calorie\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-07 15:57:24,288 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-07 15:57:24,289 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-07 15:57:24,371 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C111090>
2025-06-07 15:57:24,371 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-07 15:57:24,460 [INFO] Received Input: give me meal plan 2303 calorie

2025-06-07 15:57:24,462 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e08ca57f-b401-48f1-9f99-827e1252f8f5', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal plan 2303 calorie\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-07 15:57:24,464 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-07 15:57:24,465 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-07 15:57:24,474 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0A7D10>
2025-06-07 15:57:24,475 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-07 15:57:24,475 [DEBUG] send_request_headers.complete
2025-06-07 15:57:24,476 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-07 15:57:24,476 [DEBUG] send_request_body.complete
2025-06-07 15:57:24,477 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-07 15:57:24,550 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0BBA90>
2025-06-07 15:57:24,551 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-07 15:57:24,634 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C02AA50>
2025-06-07 15:57:24,635 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-07 15:57:24,635 [DEBUG] send_request_headers.complete
2025-06-07 15:57:24,636 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-07 15:57:24,636 [DEBUG] send_request_body.complete
2025-06-07 15:57:24,636 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-07 15:57:25,212 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 07 Jun 2025 10:27:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'835'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'839'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29921'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'158ms'), (b'x-request-id', b'req_d84767a5b266bfe29a61a52f942da0c2'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94bf74ebbcf13199-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-07 15:57:25,213 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-07 15:57:25,214 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-07 15:57:25,214 [DEBUG] receive_response_body.complete
2025-06-07 15:57:25,215 [DEBUG] response_closed.started
2025-06-07 15:57:25,215 [DEBUG] response_closed.complete
2025-06-07 15:57:25,215 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 07 Jun 2025 10:27:25 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '835', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '839', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29921', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '158ms', 'x-request-id': 'req_d84767a5b266bfe29a61a52f942da0c2', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94bf74ebbcf13199-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-07 15:57:25,216 [DEBUG] request_id: req_d84767a5b266bfe29a61a52f942da0c2
2025-06-07 15:57:25,217 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2303,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-07 15:57:25,218 [INFO]  Extracted Params: {'calories_target': 2303, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-07 15:57:25,240 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-88b864ae-5360-4f86-a30b-d2c02299c96b', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2155.0 kcal\nProtein: 115.1 g\nCarbs: 287.8 g\nFat: 76.7 g\nFiber: 59.8 g\nSugar: 6.4 g\nSodium: 724.6 mg\n\nRecommended Meals:\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-07 15:57:25,242 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-07 15:57:25,242 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-07 15:57:25,243 [DEBUG] send_request_headers.complete
2025-06-07 15:57:25,244 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-07 15:57:25,244 [DEBUG] send_request_body.complete
2025-06-07 15:57:25,244 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-07 15:57:26,176 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 07 Jun 2025 10:27:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'845'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'850'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29921'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'158ms'), (b'x-request-id', b'req_50a1b025603895bc5b92d39eed7e48b5'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94bf74ee3df184e3-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-07 15:57:26,176 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 07 Jun 2025 10:27:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'789'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'793'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29840'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'319ms'), (b'x-request-id', b'req_f6bc287c03598a39f5cd143c6d5ced38'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94bf74ef2cdd3a51-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-07 15:57:26,178 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-07 15:57:26,180 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-07 15:57:26,181 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-07 15:57:26,181 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-07 15:57:26,182 [DEBUG] receive_response_body.complete
2025-06-07 15:57:26,182 [DEBUG] response_closed.started
2025-06-07 15:57:26,183 [DEBUG] receive_response_body.complete
2025-06-07 15:57:26,183 [DEBUG] response_closed.complete
2025-06-07 15:57:26,184 [DEBUG] response_closed.started
2025-06-07 15:57:26,184 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 07 Jun 2025 10:27:25 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '845', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '850', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29921', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '158ms', 'x-request-id': 'req_50a1b025603895bc5b92d39eed7e48b5', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94bf74ee3df184e3-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-07 15:57:26,185 [DEBUG] response_closed.complete
2025-06-07 15:57:26,188 [DEBUG] request_id: req_50a1b025603895bc5b92d39eed7e48b5
2025-06-07 15:57:26,188 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 07 Jun 2025 10:27:26 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '789', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '793', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29840', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '319ms', 'x-request-id': 'req_f6bc287c03598a39f5cd143c6d5ced38', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94bf74ef2cdd3a51-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-07 15:57:26,189 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2303,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-07 15:57:26,191 [DEBUG] request_id: req_f6bc287c03598a39f5cd143c6d5ced38
2025-06-07 15:57:26,193 [INFO]  Extracted Params: {'calories_target': 2303, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-07 15:57:26,194 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2303,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-07 15:57:26,204 [INFO]  Extracted Params: {'calories_target': 2303, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-07 15:57:26,228 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-83bb9640-04d0-4c12-89b9-0ea380902291', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2155.0 kcal\nProtein: 115.1 g\nCarbs: 287.8 g\nFat: 76.7 g\nFiber: 59.8 g\nSugar: 6.4 g\nSodium: 724.6 mg\n\nRecommended Meals:\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-07 15:57:26,235 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-07 15:57:26,249 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ea36a27b-fdf5-417a-b0f7-8812907ad96c', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2155.0 kcal\nProtein: 115.1 g\nCarbs: 287.8 g\nFat: 76.7 g\nFiber: 59.8 g\nSugar: 6.4 g\nSodium: 724.6 mg\n\nRecommended Meals:\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-07 15:57:26,249 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-07 15:57:26,251 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-07 15:57:26,253 [DEBUG] send_request_headers.complete
2025-06-07 15:57:26,255 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-07 15:57:26,255 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-07 15:57:26,257 [DEBUG] send_request_headers.complete
2025-06-07 15:57:26,257 [DEBUG] send_request_body.complete
2025-06-07 15:57:26,257 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-07 15:57:26,258 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-07 15:57:26,258 [DEBUG] send_request_body.complete
2025-06-07 15:57:26,259 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-07 15:57:27,604 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 07 Jun 2025 10:27:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'2026'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2042'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29762'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'475ms'), (b'x-request-id', b'req_9718cd18d0d4fb34bcfe8b0c10756576'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94bf74f3395f3199-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-07 15:57:27,605 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-07 15:57:27,606 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-07 15:57:27,630 [DEBUG] receive_response_body.complete
2025-06-07 15:57:27,631 [DEBUG] response_closed.started
2025-06-07 15:57:27,631 [DEBUG] response_closed.complete
2025-06-07 15:57:27,632 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 07 Jun 2025 10:27:27 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '2026', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2042', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29762', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '475ms', 'x-request-id': 'req_9718cd18d0d4fb34bcfe8b0c10756576', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94bf74f3395f3199-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-07 15:57:27,633 [DEBUG] request_id: req_9718cd18d0d4fb34bcfe8b0c10756576
2025-06-07 15:57:27,634 [INFO]  Meal plan generated with 8 dishes
2025-06-07 15:57:27,635 [INFO] 127.0.0.1 - - [07/Jun/2025 15:57:27] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-07 15:57:28,911 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 07 Jun 2025 10:27:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'2354'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2358'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_faf612e7c01329f0ec2e4814bd218950'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94bf74f96e523a51-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-07 15:57:28,914 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-07 15:57:28,914 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-07 15:57:28,923 [DEBUG] receive_response_body.complete
2025-06-07 15:57:28,923 [DEBUG] response_closed.started
2025-06-07 15:57:28,924 [DEBUG] response_closed.complete
2025-06-07 15:57:28,925 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 07 Jun 2025 10:27:28 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '2354', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2358', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_faf612e7c01329f0ec2e4814bd218950', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94bf74f96e523a51-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-07 15:57:28,926 [DEBUG] request_id: req_faf612e7c01329f0ec2e4814bd218950
2025-06-07 15:57:28,928 [INFO]  Meal plan generated with 8 dishes
2025-06-07 15:57:28,929 [INFO] 127.0.0.1 - - [07/Jun/2025 15:57:28] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-07 15:57:29,030 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 07 Jun 2025 10:27:28 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'2430'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2435'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'498'), (b'x-ratelimit-remaining-tokens', b'29656'), (b'x-ratelimit-reset-requests', b'206ms'), (b'x-ratelimit-reset-tokens', b'686ms'), (b'x-request-id', b'req_4e45fe2dda0be257f26c18d001455939'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94bf74f97c2b84e3-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-07 15:57:29,032 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-07 15:57:29,033 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-07 15:57:29,034 [DEBUG] receive_response_body.complete
2025-06-07 15:57:29,035 [DEBUG] response_closed.started
2025-06-07 15:57:29,035 [DEBUG] response_closed.complete
2025-06-07 15:57:29,036 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 07 Jun 2025 10:27:28 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '2430', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2435', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '498', 'x-ratelimit-remaining-tokens': '29656', 'x-ratelimit-reset-requests': '206ms', 'x-ratelimit-reset-tokens': '686ms', 'x-request-id': 'req_4e45fe2dda0be257f26c18d001455939', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94bf74f97c2b84e3-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-07 15:57:29,038 [DEBUG] request_id: req_4e45fe2dda0be257f26c18d001455939
2025-06-07 15:57:29,039 [INFO]  Meal plan generated with 8 dishes
2025-06-07 15:57:29,040 [INFO] 127.0.0.1 - - [07/Jun/2025 15:57:29] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 10:34:21,400 [INFO] 127.0.0.1 - - [09/Jun/2025 10:34:21] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 10:36:42,437 [INFO] Received Input: give meal for 2300 calorie 
2025-06-09 10:36:42,444 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ce850450-0d8a-427b-9984-9eae4e881d3a', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give meal for 2300 calorie '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 10:36:42,452 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:36:42,455 [DEBUG] close.started
2025-06-09 10:36:42,456 [DEBUG] close.complete
2025-06-09 10:36:42,456 [DEBUG] close.started
2025-06-09 10:36:42,457 [DEBUG] close.complete
2025-06-09 10:36:42,458 [DEBUG] close.started
2025-06-09 10:36:42,459 [DEBUG] close.complete
2025-06-09 10:36:42,461 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 10:36:42,698 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0B9150>
2025-06-09 10:36:42,698 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 10:36:42,783 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0BB350>
2025-06-09 10:36:42,784 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:36:42,785 [DEBUG] send_request_headers.complete
2025-06-09 10:36:42,785 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:36:42,786 [DEBUG] send_request_body.complete
2025-06-09 10:36:42,786 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:36:43,949 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:06:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'799'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'806'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29922'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'156ms'), (b'x-request-id', b'req_1f1f0adb3dbbfc5ac128d86df04b3992'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=1n8u3LLpn9dyvhC2w4gVa9SSxcFFM0LLUW6ObHOgWqA-1749445605-1.0.1.1-QxoiSpRwTnbjqHzJBrQlO0Cf.LMnTdQclxrp3kCVA58Y3ciEG_MkE9KzdkHZ.hch7EmFw.cggcQ.N1UEahZmTgwDdlPJ_Uz3gYlsnAst6q8; path=/; expires=Mon, 09-Jun-25 05:36:45 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=106UxPe1OqzVHVMbv0hrT77NxdaPYrB_rHcliTtk4oI-1749445605008-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce19f0790d9a72-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:36:43,952 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:36:43,953 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:36:43,953 [DEBUG] receive_response_body.complete
2025-06-09 10:36:43,954 [DEBUG] response_closed.started
2025-06-09 10:36:43,954 [DEBUG] response_closed.complete
2025-06-09 10:36:43,955 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Mon, 09 Jun 2025 05:06:45 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '799'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '806'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29922'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '156ms'), ('x-request-id', 'req_1f1f0adb3dbbfc5ac128d86df04b3992'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=1n8u3LLpn9dyvhC2w4gVa9SSxcFFM0LLUW6ObHOgWqA-1749445605-1.0.1.1-QxoiSpRwTnbjqHzJBrQlO0Cf.LMnTdQclxrp3kCVA58Y3ciEG_MkE9KzdkHZ.hch7EmFw.cggcQ.N1UEahZmTgwDdlPJ_Uz3gYlsnAst6q8; path=/; expires=Mon, 09-Jun-25 05:36:45 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=106UxPe1OqzVHVMbv0hrT77NxdaPYrB_rHcliTtk4oI-1749445605008-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94ce19f0790d9a72-NAG'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-09 10:36:43,957 [DEBUG] request_id: req_1f1f0adb3dbbfc5ac128d86df04b3992
2025-06-09 10:36:43,959 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2300,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 10:36:43,961 [INFO]  Extracted Params: {'calories_target': 2300, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 10:36:44,010 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-68ce9d4a-b1a9-48e1-adf2-a7ffc74fa684', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2153.0 kcal\nProtein: 115.0 g\nCarbs: 287.6 g\nFat: 76.7 g\nFiber: 59.8 g\nSugar: 6.4 g\nSodium: 724.1 mg\n\nRecommended Meals:\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 10:36:44,013 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:36:44,013 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:36:44,014 [DEBUG] send_request_headers.complete
2025-06-09 10:36:44,014 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:36:44,015 [DEBUG] send_request_body.complete
2025-06-09 10:36:44,015 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:36:48,728 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:06:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3716'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3750'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_77c139f6fc16c83017db4e4eb846322f'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce19f82ff09a72-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:36:48,730 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:36:48,730 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:36:48,734 [DEBUG] receive_response_body.complete
2025-06-09 10:36:48,735 [DEBUG] response_closed.started
2025-06-09 10:36:48,735 [DEBUG] response_closed.complete
2025-06-09 10:36:48,736 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:06:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3716', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3750', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_77c139f6fc16c83017db4e4eb846322f', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce19f82ff09a72-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:36:48,737 [DEBUG] request_id: req_77c139f6fc16c83017db4e4eb846322f
2025-06-09 10:36:48,738 [INFO]  Meal plan generated with 8 dishes
2025-06-09 10:36:48,739 [INFO] 127.0.0.1 - - [09/Jun/2025 10:36:48] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 10:37:10,762 [INFO] Received Input: give meal for 2300 calorie 
2025-06-09 10:37:10,764 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-355e74bb-e75f-4abd-9ee6-71f9659379cf', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give meal for 2300 calorie '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 10:37:10,765 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:37:10,766 [DEBUG] close.started
2025-06-09 10:37:10,767 [DEBUG] close.complete
2025-06-09 10:37:10,767 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 10:37:10,833 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C120B50>
2025-06-09 10:37:10,834 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 10:37:10,928 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C1221D0>
2025-06-09 10:37:10,928 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:37:10,929 [DEBUG] send_request_headers.complete
2025-06-09 10:37:10,930 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:37:10,930 [DEBUG] send_request_body.complete
2025-06-09 10:37:10,931 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:37:12,838 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:07:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1052'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1058'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29922'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'156ms'), (b'x-request-id', b'req_d463a1173e3b6e358ede99077e5ce6b0'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce1aa07aa89a9b-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:37:12,840 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:37:12,840 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:37:12,841 [DEBUG] receive_response_body.complete
2025-06-09 10:37:12,841 [DEBUG] response_closed.started
2025-06-09 10:37:12,842 [DEBUG] response_closed.complete
2025-06-09 10:37:12,842 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:07:13 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1052', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1058', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29922', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '156ms', 'x-request-id': 'req_d463a1173e3b6e358ede99077e5ce6b0', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce1aa07aa89a9b-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:37:12,843 [DEBUG] request_id: req_d463a1173e3b6e358ede99077e5ce6b0
2025-06-09 10:37:12,844 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2300,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 10:37:12,846 [INFO]  Extracted Params: {'calories_target': 2300, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 10:37:12,872 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a0be71e1-d613-4dd6-9628-4ae62dc3ded4', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2153.0 kcal\nProtein: 115.0 g\nCarbs: 287.6 g\nFat: 76.7 g\nFiber: 59.8 g\nSugar: 6.4 g\nSodium: 724.1 mg\n\nRecommended Meals:\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 10:37:12,875 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:37:12,876 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:37:12,877 [DEBUG] send_request_headers.complete
2025-06-09 10:37:12,877 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:37:12,878 [DEBUG] send_request_body.complete
2025-06-09 10:37:12,878 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:37:16,714 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:07:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3393'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3400'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_f1e861fd79034600e420cd17c3f5e66f'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce1aac9df49a9b-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:37:16,716 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:37:16,716 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:37:16,717 [DEBUG] receive_response_body.complete
2025-06-09 10:37:16,717 [DEBUG] response_closed.started
2025-06-09 10:37:16,718 [DEBUG] response_closed.complete
2025-06-09 10:37:16,718 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:07:17 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3393', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3400', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_f1e861fd79034600e420cd17c3f5e66f', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce1aac9df49a9b-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:37:16,719 [DEBUG] request_id: req_f1e861fd79034600e420cd17c3f5e66f
2025-06-09 10:37:16,721 [INFO]  Meal plan generated with 8 dishes
2025-06-09 10:37:16,722 [INFO] 127.0.0.1 - - [09/Jun/2025 10:37:16] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 10:37:34,349 [INFO] Received Input: give meal for 2300 calorie 
2025-06-09 10:37:34,351 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-588d2346-8791-4beb-93c6-e5f7ed68e29e', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give meal for 2300 calorie '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 10:37:34,352 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:37:34,353 [DEBUG] close.started
2025-06-09 10:37:34,354 [DEBUG] close.complete
2025-06-09 10:37:34,354 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 10:37:34,411 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0BBFD0>
2025-06-09 10:37:34,411 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 10:37:34,466 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0BA8D0>
2025-06-09 10:37:34,467 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:37:34,468 [DEBUG] send_request_headers.complete
2025-06-09 10:37:34,468 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:37:34,469 [DEBUG] send_request_body.complete
2025-06-09 10:37:34,469 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:37:36,485 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:07:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1663'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1667'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29922'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'156ms'), (b'x-request-id', b'req_eeb417f5a308e85483c3fdf1f3084758'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce1b336b209aa1-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:37:36,487 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:37:36,488 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:37:36,488 [DEBUG] receive_response_body.complete
2025-06-09 10:37:36,489 [DEBUG] response_closed.started
2025-06-09 10:37:36,489 [DEBUG] response_closed.complete
2025-06-09 10:37:36,489 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:07:37 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1663', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1667', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29922', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '156ms', 'x-request-id': 'req_eeb417f5a308e85483c3fdf1f3084758', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce1b336b209aa1-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:37:36,491 [DEBUG] request_id: req_eeb417f5a308e85483c3fdf1f3084758
2025-06-09 10:37:36,492 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2300,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 10:37:36,494 [INFO]  Extracted Params: {'calories_target': 2300, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 10:37:36,534 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-89d120d2-6b7c-4b89-9f99-990b1e232afa', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2153.0 kcal\nProtein: 115.0 g\nCarbs: 287.6 g\nFat: 76.7 g\nFiber: 59.8 g\nSugar: 6.4 g\nSodium: 724.1 mg\n\nRecommended Meals:\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 10:37:36,536 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:37:36,537 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:37:36,537 [DEBUG] send_request_headers.complete
2025-06-09 10:37:36,538 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:37:36,538 [DEBUG] send_request_body.complete
2025-06-09 10:37:36,539 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:37:40,339 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:07:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3332'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3335'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_2dc1c04b2e4f64d0c0ab85b56bc19bd3'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce1b405f289aa1-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:37:40,341 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:37:40,342 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:37:40,343 [DEBUG] receive_response_body.complete
2025-06-09 10:37:40,343 [DEBUG] response_closed.started
2025-06-09 10:37:40,344 [DEBUG] response_closed.complete
2025-06-09 10:37:40,344 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:07:41 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3332', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3335', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_2dc1c04b2e4f64d0c0ab85b56bc19bd3', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce1b405f289aa1-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:37:40,346 [DEBUG] request_id: req_2dc1c04b2e4f64d0c0ab85b56bc19bd3
2025-06-09 10:37:40,347 [INFO]  Meal plan generated with 8 dishes
2025-06-09 10:37:40,348 [INFO] 127.0.0.1 - - [09/Jun/2025 10:37:40] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 10:37:43,680 [INFO] 127.0.0.1 - - [09/Jun/2025 10:37:43] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 10:39:31,359 [INFO] Received Input: give me meal for calorie 2300 with 40 % fats and 10 % carbs , 50 % of protein
2025-06-09 10:39:31,360 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-31295f9b-a700-4904-9d7e-2d4b3973e20e', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for calorie 2300 with 40 % fats and 10 % carbs , 50 % of protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 10:39:31,362 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:39:31,363 [DEBUG] close.started
2025-06-09 10:39:31,363 [DEBUG] close.complete
2025-06-09 10:39:31,364 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 10:39:31,523 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C143050>
2025-06-09 10:39:31,523 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 10:39:31,621 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C140050>
2025-06-09 10:39:31,621 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:39:31,622 [DEBUG] send_request_headers.complete
2025-06-09 10:39:31,623 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:39:31,623 [DEBUG] send_request_body.complete
2025-06-09 10:39:31,624 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:39:33,031 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:09:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'816'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'821'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29909'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'182ms'), (b'x-request-id', b'req_34b1c2910c64812d5ad0c489b3bafa93'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce1e0fcd2a9a81-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:39:33,033 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:39:33,033 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:39:33,034 [DEBUG] receive_response_body.complete
2025-06-09 10:39:33,034 [DEBUG] response_closed.started
2025-06-09 10:39:33,035 [DEBUG] response_closed.complete
2025-06-09 10:39:33,035 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:09:34 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '816', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '821', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29909', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '182ms', 'x-request-id': 'req_34b1c2910c64812d5ad0c489b3bafa93', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce1e0fcd2a9a81-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:39:33,036 [DEBUG] request_id: req_34b1c2910c64812d5ad0c489b3bafa93
2025-06-09 10:39:33,038 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2300,
  "protein_pct": 50,
  "carbs_pct": 10,
  "fat_pct": 40,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 10:39:33,039 [INFO]  Extracted Params: {'calories_target': 2300, 'protein_pct': 50, 'carbs_pct': 10, 'fat_pct': 40, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 10:39:33,066 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4febb28e-fc92-4e38-89b9-e121bc73c75e', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2483.0 kcal\nProtein: 287.5 g\nCarbs: 57.5 g\nFat: 122.6 g\nFiber: 25.0 g\nSugar: 25.0 g\nSodium: 2300.4 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nAfghani chicken (Non-Veg) for Lunch, Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nRasam powder (Rasam masala) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 10:39:33,068 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:39:33,069 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:39:33,070 [DEBUG] send_request_headers.complete
2025-06-09 10:39:33,071 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:39:33,072 [DEBUG] send_request_body.complete
2025-06-09 10:39:33,072 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:39:35,754 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:09:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'2315'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2318'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29830'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'340ms'), (b'x-request-id', b'req_d7765da37e49fd4a3148aca3fd560da6'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce1e18bdc59a81-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:39:35,756 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:39:35,756 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:39:35,766 [DEBUG] receive_response_body.complete
2025-06-09 10:39:35,766 [DEBUG] response_closed.started
2025-06-09 10:39:35,767 [DEBUG] response_closed.complete
2025-06-09 10:39:35,768 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:09:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '2315', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2318', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29830', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '340ms', 'x-request-id': 'req_d7765da37e49fd4a3148aca3fd560da6', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce1e18bdc59a81-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:39:35,770 [DEBUG] request_id: req_d7765da37e49fd4a3148aca3fd560da6
2025-06-09 10:39:35,771 [INFO]  Meal plan generated with 9 dishes
2025-06-09 10:39:35,772 [INFO] 127.0.0.1 - - [09/Jun/2025 10:39:35] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 10:40:04,239 [INFO] Received Input: give me meal for calorie 2300 with 40 % fats and 10 % carbs , 50 % of protein
2025-06-09 10:40:04,241 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1496bddf-ba1b-49ca-8171-18818c23283d', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for calorie 2300 with 40 % fats and 10 % carbs , 50 % of protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 10:40:04,242 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:40:04,243 [DEBUG] close.started
2025-06-09 10:40:04,244 [DEBUG] close.complete
2025-06-09 10:40:04,244 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 10:40:04,309 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2BC6F310>
2025-06-09 10:40:04,309 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 10:40:04,397 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2BC6F610>
2025-06-09 10:40:04,397 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:40:04,398 [DEBUG] send_request_headers.complete
2025-06-09 10:40:04,398 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:40:04,399 [DEBUG] send_request_body.complete
2025-06-09 10:40:04,401 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:40:04,790 [INFO] Received Input: give me meal for calorie 2300 with 40 % fats and 10 % carbs , 50 % of protein
2025-06-09 10:40:04,792 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-61ea6451-8995-40b1-9799-2f5de1b657a9', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for calorie 2300 with 40 % fats and 10 % carbs , 50 % of protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 10:40:04,793 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:40:04,794 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 10:40:04,871 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0C0AD0>
2025-06-09 10:40:04,871 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 10:40:05,099 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0BB650>
2025-06-09 10:40:05,100 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:40:05,101 [DEBUG] send_request_headers.complete
2025-06-09 10:40:05,101 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:40:05,102 [DEBUG] send_request_body.complete
2025-06-09 10:40:05,102 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:40:05,686 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:10:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'892'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'896'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29909'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'182ms'), (b'x-request-id', b'req_78b91cc420ccbabff9e40195d71c84e7'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce1edcbff09a72-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:40:05,688 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:40:05,689 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:40:05,690 [DEBUG] receive_response_body.complete
2025-06-09 10:40:05,690 [DEBUG] response_closed.started
2025-06-09 10:40:05,690 [DEBUG] response_closed.complete
2025-06-09 10:40:05,691 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:10:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '892', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '896', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29909', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '182ms', 'x-request-id': 'req_78b91cc420ccbabff9e40195d71c84e7', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce1edcbff09a72-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:40:05,691 [DEBUG] request_id: req_78b91cc420ccbabff9e40195d71c84e7
2025-06-09 10:40:05,693 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2300,
  "protein_pct": 50,
  "carbs_pct": 10,
  "fat_pct": 40,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 10:40:05,694 [INFO]  Extracted Params: {'calories_target': 2300, 'protein_pct': 50, 'carbs_pct': 10, 'fat_pct': 40, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 10:40:05,889 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-90accd5a-bfaf-4229-a1db-34363f456693', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2483.0 kcal\nProtein: 287.5 g\nCarbs: 57.5 g\nFat: 122.6 g\nFiber: 25.0 g\nSugar: 25.0 g\nSodium: 2300.4 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nAfghani chicken (Non-Veg) for Lunch, Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nRasam powder (Rasam masala) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 10:40:05,891 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:40:05,892 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:40:05,893 [DEBUG] send_request_headers.complete
2025-06-09 10:40:05,893 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:40:05,894 [DEBUG] send_request_body.complete
2025-06-09 10:40:05,894 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:40:07,201 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:10:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1188'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1193'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29909'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'182ms'), (b'x-request-id', b'req_5cd544a85f6693d8a0d33c106c5440c0'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce1ee1080a9a9b-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:40:07,204 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:40:07,204 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:40:07,206 [DEBUG] receive_response_body.complete
2025-06-09 10:40:07,206 [DEBUG] response_closed.started
2025-06-09 10:40:07,207 [DEBUG] response_closed.complete
2025-06-09 10:40:07,208 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:10:08 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1188', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1193', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29909', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '182ms', 'x-request-id': 'req_5cd544a85f6693d8a0d33c106c5440c0', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce1ee1080a9a9b-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:40:07,209 [DEBUG] request_id: req_5cd544a85f6693d8a0d33c106c5440c0
2025-06-09 10:40:07,210 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2300,
  "protein_pct": 50,
  "carbs_pct": 10,
  "fat_pct": 40,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 10:40:07,212 [INFO]  Extracted Params: {'calories_target': 2300, 'protein_pct': 50, 'carbs_pct': 10, 'fat_pct': 40, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 10:40:07,239 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e8ae307a-59dc-48d1-b355-bbb044dd0f62', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2483.0 kcal\nProtein: 287.5 g\nCarbs: 57.5 g\nFat: 122.6 g\nFiber: 25.0 g\nSugar: 25.0 g\nSodium: 2300.4 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nAfghani chicken (Non-Veg) for Lunch, Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nRasam powder (Rasam masala) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 10:40:07,240 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:40:07,241 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:40:07,242 [DEBUG] send_request_headers.complete
2025-06-09 10:40:07,242 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:40:07,243 [DEBUG] send_request_body.complete
2025-06-09 10:40:07,243 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:40:09,331 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:10:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'2677'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2681'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29830'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'340ms'), (b'x-request-id', b'req_5d78dc8bb548d80b463fd40d3d30856c'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce1ee75a129a72-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:40:09,332 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:40:09,333 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:40:09,337 [DEBUG] receive_response_body.complete
2025-06-09 10:40:09,337 [DEBUG] response_closed.started
2025-06-09 10:40:09,338 [DEBUG] response_closed.complete
2025-06-09 10:40:09,339 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:10:10 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '2677', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2681', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29830', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '340ms', 'x-request-id': 'req_5d78dc8bb548d80b463fd40d3d30856c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce1ee75a129a72-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:40:09,341 [DEBUG] request_id: req_5d78dc8bb548d80b463fd40d3d30856c
2025-06-09 10:40:09,342 [INFO]  Meal plan generated with 9 dishes
2025-06-09 10:40:09,342 [INFO] 127.0.0.1 - - [09/Jun/2025 10:40:09] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 10:40:10,080 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:10:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'2227'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2232'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29830'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'340ms'), (b'x-request-id', b'req_c1459dc63753b784207ee3203081300e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce1eefce019a9b-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:40:10,081 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:40:10,082 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:40:10,083 [DEBUG] receive_response_body.complete
2025-06-09 10:40:10,084 [DEBUG] response_closed.started
2025-06-09 10:40:10,085 [DEBUG] response_closed.complete
2025-06-09 10:40:10,085 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:10:11 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '2227', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2232', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29830', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '340ms', 'x-request-id': 'req_c1459dc63753b784207ee3203081300e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce1eefce019a9b-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:40:10,087 [DEBUG] request_id: req_c1459dc63753b784207ee3203081300e
2025-06-09 10:40:10,088 [INFO]  Meal plan generated with 9 dishes
2025-06-09 10:40:10,089 [INFO] 127.0.0.1 - - [09/Jun/2025 10:40:10] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 10:40:18,020 [INFO] Received Input: give me meal for calorie 2300 with 40 % fats and 10 % carbs , 50 % of protein
2025-06-09 10:40:18,022 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d8e77ce4-667d-423c-b0e1-744a279fb31a', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for calorie 2300 with 40 % fats and 10 % carbs , 50 % of protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 10:40:18,023 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:40:18,024 [DEBUG] close.started
2025-06-09 10:40:18,025 [DEBUG] close.complete
2025-06-09 10:40:18,025 [DEBUG] close.started
2025-06-09 10:40:18,026 [DEBUG] close.complete
2025-06-09 10:40:18,027 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 10:40:18,082 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0C1390>
2025-06-09 10:40:18,085 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 10:40:18,149 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0C08D0>
2025-06-09 10:40:18,151 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:40:18,152 [DEBUG] send_request_headers.complete
2025-06-09 10:40:18,152 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:40:18,153 [DEBUG] send_request_body.complete
2025-06-09 10:40:18,153 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:40:19,268 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:10:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'576'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'578'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29909'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'182ms'), (b'x-request-id', b'req_f07aad9585a2f6bf89712aca3776966c'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce1f32d8e79a87-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:40:19,270 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:40:19,271 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:40:19,271 [DEBUG] receive_response_body.complete
2025-06-09 10:40:19,272 [DEBUG] response_closed.started
2025-06-09 10:40:19,272 [DEBUG] response_closed.complete
2025-06-09 10:40:19,273 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:10:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '576', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '578', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29909', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '182ms', 'x-request-id': 'req_f07aad9585a2f6bf89712aca3776966c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce1f32d8e79a87-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:40:19,275 [DEBUG] request_id: req_f07aad9585a2f6bf89712aca3776966c
2025-06-09 10:40:19,276 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2300,
  "protein_pct": 50,
  "carbs_pct": 10,
  "fat_pct": 40,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 10:40:19,277 [INFO]  Extracted Params: {'calories_target': 2300, 'protein_pct': 50, 'carbs_pct': 10, 'fat_pct': 40, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 10:40:19,303 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ee77cad2-e2c2-4075-a643-a0841432cec7', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2483.0 kcal\nProtein: 287.5 g\nCarbs: 57.5 g\nFat: 122.6 g\nFiber: 25.0 g\nSugar: 25.0 g\nSodium: 2300.4 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nAfghani chicken (Non-Veg) for Lunch, Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nRasam powder (Rasam masala) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 10:40:19,305 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:40:19,306 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:40:19,306 [DEBUG] send_request_headers.complete
2025-06-09 10:40:19,306 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:40:19,307 [DEBUG] send_request_body.complete
2025-06-09 10:40:19,307 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:40:23,099 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:10:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3282'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3285'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29830'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'340ms'), (b'x-request-id', b'req_fab10e116f716ddda09c13699a260f74'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce1f39ffe69a87-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:40:23,101 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:40:23,101 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:40:23,102 [DEBUG] receive_response_body.complete
2025-06-09 10:40:23,102 [DEBUG] response_closed.started
2025-06-09 10:40:23,103 [DEBUG] response_closed.complete
2025-06-09 10:40:23,103 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:10:24 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3282', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3285', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29830', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '340ms', 'x-request-id': 'req_fab10e116f716ddda09c13699a260f74', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce1f39ffe69a87-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:40:23,104 [DEBUG] request_id: req_fab10e116f716ddda09c13699a260f74
2025-06-09 10:40:23,105 [INFO]  Meal plan generated with 9 dishes
2025-06-09 10:40:23,107 [INFO] 127.0.0.1 - - [09/Jun/2025 10:40:23] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 10:40:49,437 [INFO] Received Input: give me meal for calorie 2300 with 40 % fats and 10 % carbs , 50 % of protein
2025-06-09 10:40:49,439 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-0a7d3258-8751-4b86-b0cf-b1c255af6a44', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for calorie 2300 with 40 % fats and 10 % carbs , 50 % of protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 10:40:49,440 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:40:49,441 [DEBUG] close.started
2025-06-09 10:40:49,442 [DEBUG] close.complete
2025-06-09 10:40:49,442 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 10:40:49,588 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C089D90>
2025-06-09 10:40:49,588 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 10:40:49,726 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C08A210>
2025-06-09 10:40:49,727 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:40:49,727 [DEBUG] send_request_headers.complete
2025-06-09 10:40:49,728 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:40:49,728 [DEBUG] send_request_body.complete
2025-06-09 10:40:49,729 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:40:50,871 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:10:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'716'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'719'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29909'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'182ms'), (b'x-request-id', b'req_1827d86e05a09f9e7ac15a9a3e12bf2f'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce1ff7fce89aa2-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:40:50,873 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:40:50,874 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:40:50,875 [DEBUG] receive_response_body.complete
2025-06-09 10:40:50,875 [DEBUG] response_closed.started
2025-06-09 10:40:50,875 [DEBUG] response_closed.complete
2025-06-09 10:40:50,876 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:10:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '716', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '719', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29909', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '182ms', 'x-request-id': 'req_1827d86e05a09f9e7ac15a9a3e12bf2f', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce1ff7fce89aa2-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:40:50,877 [DEBUG] request_id: req_1827d86e05a09f9e7ac15a9a3e12bf2f
2025-06-09 10:40:50,878 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2300,
  "protein_pct": 50,
  "carbs_pct": 10,
  "fat_pct": 40,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 10:40:50,881 [INFO]  Extracted Params: {'calories_target': 2300, 'protein_pct': 50, 'carbs_pct': 10, 'fat_pct': 40, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 10:40:50,906 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2989aaae-b7b3-4929-a2fe-31ee44fe37c2', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2483.0 kcal\nProtein: 287.5 g\nCarbs: 57.5 g\nFat: 122.6 g\nFiber: 25.0 g\nSugar: 25.0 g\nSodium: 2300.4 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nAfghani chicken (Non-Veg) for Lunch, Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nRasam powder (Rasam masala) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 10:40:50,909 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:40:50,910 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:40:50,911 [DEBUG] send_request_headers.complete
2025-06-09 10:40:50,912 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:40:50,913 [DEBUG] send_request_body.complete
2025-06-09 10:40:50,913 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:40:54,028 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:10:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'2617'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2706'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29830'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'340ms'), (b'x-request-id', b'req_85817a4723a6e86e638ccf7a3f8128f8'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce1fff7c939aa2-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:40:54,030 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:40:54,030 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:40:54,031 [DEBUG] receive_response_body.complete
2025-06-09 10:40:54,031 [DEBUG] response_closed.started
2025-06-09 10:40:54,032 [DEBUG] response_closed.complete
2025-06-09 10:40:54,032 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:10:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '2617', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2706', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29830', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '340ms', 'x-request-id': 'req_85817a4723a6e86e638ccf7a3f8128f8', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce1fff7c939aa2-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:40:54,032 [DEBUG] request_id: req_85817a4723a6e86e638ccf7a3f8128f8
2025-06-09 10:40:54,034 [INFO]  Meal plan generated with 9 dishes
2025-06-09 10:40:54,035 [INFO] 127.0.0.1 - - [09/Jun/2025 10:40:54] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 10:41:00,951 [INFO] Received Input: give me meal for calorie 2300 with 40 % fats and 10 % carbs , 50 % of protein
2025-06-09 10:41:00,954 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-20b8fce7-c223-4e27-82aa-eae630ae93a2', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for calorie 2300 with 40 % fats and 10 % carbs , 50 % of protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 10:41:00,956 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:41:00,957 [DEBUG] close.started
2025-06-09 10:41:00,958 [DEBUG] close.complete
2025-06-09 10:41:00,958 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 10:41:01,026 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C08BC90>
2025-06-09 10:41:01,026 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 10:41:01,126 [INFO] Received Input: give me meal for calorie 2300 with 40 % fats and 10 % carbs , 50 % of protein
2025-06-09 10:41:01,127 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d3fdee9c-3e34-441d-b872-51fa79ce43ac', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for calorie 2300 with 40 % fats and 10 % carbs , 50 % of protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 10:41:01,128 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:41:01,129 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 10:41:01,207 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C08BE10>
2025-06-09 10:41:01,208 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:41:01,209 [DEBUG] send_request_headers.complete
2025-06-09 10:41:01,209 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:41:01,210 [DEBUG] send_request_body.complete
2025-06-09 10:41:01,210 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:41:01,230 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0CF790>
2025-06-09 10:41:01,230 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 10:41:01,356 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0C1910>
2025-06-09 10:41:01,356 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:41:01,357 [DEBUG] send_request_headers.complete
2025-06-09 10:41:01,358 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:41:01,358 [DEBUG] send_request_body.complete
2025-06-09 10:41:01,359 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:41:02,476 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:11:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'876'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'879'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29909'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'182ms'), (b'x-request-id', b'req_16a61e62d8ea9e5c71450332fa2366ef'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce203fd9fe9a83-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:41:02,478 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:41:02,478 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:41:02,479 [DEBUG] receive_response_body.complete
2025-06-09 10:41:02,479 [DEBUG] response_closed.started
2025-06-09 10:41:02,480 [DEBUG] response_closed.complete
2025-06-09 10:41:02,480 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:11:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '876', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '879', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29909', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '182ms', 'x-request-id': 'req_16a61e62d8ea9e5c71450332fa2366ef', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce203fd9fe9a83-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:41:02,482 [DEBUG] request_id: req_16a61e62d8ea9e5c71450332fa2366ef
2025-06-09 10:41:02,483 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2300,
  "protein_pct": 50,
  "carbs_pct": 10,
  "fat_pct": 40,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 10:41:02,486 [INFO]  Extracted Params: {'calories_target': 2300, 'protein_pct': 50, 'carbs_pct': 10, 'fat_pct': 40, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 10:41:02,510 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-cb64ba63-b43e-46b8-a0a1-f690e7825dd3', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2483.0 kcal\nProtein: 287.5 g\nCarbs: 57.5 g\nFat: 122.6 g\nFiber: 25.0 g\nSugar: 25.0 g\nSodium: 2300.4 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nAfghani chicken (Non-Veg) for Lunch, Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nRasam powder (Rasam masala) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 10:41:02,512 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:41:02,512 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:41:02,513 [DEBUG] send_request_headers.complete
2025-06-09 10:41:02,513 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:41:02,514 [DEBUG] send_request_body.complete
2025-06-09 10:41:02,514 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:41:02,592 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:11:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'819'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'828'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'498'), (b'x-ratelimit-remaining-tokens', b'29871'), (b'x-ratelimit-reset-requests', b'133ms'), (b'x-ratelimit-reset-tokens', b'257ms'), (b'x-request-id', b'req_4b290630d546c1d7f7d0242f4d84d3e8'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce204098ed9a71-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:41:02,594 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:41:02,594 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:41:02,595 [DEBUG] receive_response_body.complete
2025-06-09 10:41:02,595 [DEBUG] response_closed.started
2025-06-09 10:41:02,596 [DEBUG] response_closed.complete
2025-06-09 10:41:02,596 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:11:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '819', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '828', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '498', 'x-ratelimit-remaining-tokens': '29871', 'x-ratelimit-reset-requests': '133ms', 'x-ratelimit-reset-tokens': '257ms', 'x-request-id': 'req_4b290630d546c1d7f7d0242f4d84d3e8', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce204098ed9a71-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:41:02,598 [DEBUG] request_id: req_4b290630d546c1d7f7d0242f4d84d3e8
2025-06-09 10:41:02,599 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2300,
  "protein_pct": 50,
  "carbs_pct": 10,
  "fat_pct": 40,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 10:41:02,602 [INFO]  Extracted Params: {'calories_target': 2300, 'protein_pct': 50, 'carbs_pct': 10, 'fat_pct': 40, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 10:41:02,633 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c06fd829-9e51-494c-8202-c1d6c31d7064', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2483.0 kcal\nProtein: 287.5 g\nCarbs: 57.5 g\nFat: 122.6 g\nFiber: 25.0 g\nSugar: 25.0 g\nSodium: 2300.4 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nAfghani chicken (Non-Veg) for Lunch, Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nRasam powder (Rasam masala) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 10:41:02,658 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:41:02,666 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:41:02,694 [DEBUG] send_request_headers.complete
2025-06-09 10:41:02,695 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:41:02,701 [DEBUG] send_request_body.complete
2025-06-09 10:41:02,701 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:41:03,585 [INFO] 127.0.0.1 - - [09/Jun/2025 10:41:03] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 10:41:06,231 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:11:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3139'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3144'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29830'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'340ms'), (b'x-request-id', b'req_726d30759321cf0be96b085844ea9f68'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce2048f8ac9a71-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:41:06,233 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:41:06,233 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:41:06,235 [DEBUG] receive_response_body.complete
2025-06-09 10:41:06,235 [DEBUG] response_closed.started
2025-06-09 10:41:06,236 [DEBUG] response_closed.complete
2025-06-09 10:41:06,236 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:11:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3139', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3144', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29830', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '340ms', 'x-request-id': 'req_726d30759321cf0be96b085844ea9f68', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce2048f8ac9a71-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:41:06,238 [DEBUG] request_id: req_726d30759321cf0be96b085844ea9f68
2025-06-09 10:41:06,239 [INFO]  Meal plan generated with 9 dishes
2025-06-09 10:41:06,240 [INFO] 127.0.0.1 - - [09/Jun/2025 10:41:06] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 10:41:06,791 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:11:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3873'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3877'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29830'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'340ms'), (b'x-request-id', b'req_2521ccb6dfacda799c73971388eb077a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce2047f9fc9a83-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:41:06,793 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:41:06,793 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:41:06,804 [DEBUG] receive_response_body.complete
2025-06-09 10:41:06,804 [DEBUG] response_closed.started
2025-06-09 10:41:06,805 [DEBUG] response_closed.complete
2025-06-09 10:41:06,806 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:11:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3873', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3877', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29830', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '340ms', 'x-request-id': 'req_2521ccb6dfacda799c73971388eb077a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce2047f9fc9a83-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:41:06,807 [DEBUG] request_id: req_2521ccb6dfacda799c73971388eb077a
2025-06-09 10:41:06,809 [INFO]  Meal plan generated with 9 dishes
2025-06-09 10:41:06,811 [INFO] 127.0.0.1 - - [09/Jun/2025 10:41:06] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 10:50:52,001 [INFO] Received Input: 
2025-06-09 10:50:52,004 [ERROR]  Exception: Input cannot be empty
2025-06-09 10:50:52,006 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 351, in generate_meal_plan
    raise ValueError("Input cannot be empty")
ValueError: Input cannot be empty

2025-06-09 10:50:52,008 [INFO] 127.0.0.1 - - [09/Jun/2025 10:50:52] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-09 10:51:04,106 [INFO] Received Input: 3400 calorie
2025-06-09 10:51:04,108 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e0ea7f33-99fa-417e-a90d-696f9095ef9a', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 3400 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 10:51:04,109 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:51:04,110 [DEBUG] close.started
2025-06-09 10:51:04,110 [DEBUG] close.complete
2025-06-09 10:51:04,111 [DEBUG] close.started
2025-06-09 10:51:04,111 [DEBUG] close.complete
2025-06-09 10:51:04,112 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 10:51:13,163 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2B7C5FD0>
2025-06-09 10:51:13,163 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 10:51:18,166 [DEBUG] start_tls.failed exception=ConnectTimeout(TimeoutError('_ssl.c:989: The handshake operation timed out'))
2025-06-09 10:51:18,167 [DEBUG] Encountered httpx.TimeoutException
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 156, in _connect
    stream = stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 154, in start_tls
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectTimeout: _ssl.c:989: The handshake operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectTimeout: _ssl.c:989: The handshake operation timed out
2025-06-09 10:51:18,178 [DEBUG] 2 retries left
2025-06-09 10:51:18,179 [INFO] Retrying request to /chat/completions in 0.435898 seconds
2025-06-09 10:51:18,616 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e0ea7f33-99fa-417e-a90d-696f9095ef9a', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 3400 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 10:51:18,618 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:51:18,619 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 10:51:20,946 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C112B90>
2025-06-09 10:51:20,946 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 10:51:25,961 [DEBUG] start_tls.failed exception=ConnectTimeout(TimeoutError('_ssl.c:989: The handshake operation timed out'))
2025-06-09 10:51:25,962 [DEBUG] Encountered httpx.TimeoutException
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 156, in _connect
    stream = stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 154, in start_tls
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectTimeout: _ssl.c:989: The handshake operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectTimeout: _ssl.c:989: The handshake operation timed out
2025-06-09 10:51:25,971 [DEBUG] 1 retry left
2025-06-09 10:51:25,972 [INFO] Retrying request to /chat/completions in 0.972837 seconds
2025-06-09 10:51:26,946 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e0ea7f33-99fa-417e-a90d-696f9095ef9a', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 3400 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 10:51:26,947 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:51:26,948 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 10:51:27,878 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0296D0>
2025-06-09 10:51:27,878 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 10:51:28,630 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0C10D0>
2025-06-09 10:51:28,631 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:51:28,631 [DEBUG] send_request_headers.complete
2025-06-09 10:51:28,632 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:51:28,632 [DEBUG] send_request_body.complete
2025-06-09 10:51:28,633 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:51:51,495 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:21:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'739'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'743'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29925'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'150ms'), (b'x-request-id', b'req_53af8b11f2bdce2b588240c9562176b8'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=jGjvJM7QEw6lXOP8FQ2ovnTuok1l.8MWoNLeqDM2ITw-1749446505-1.0.1.1-0nhSi9RmdTeUEf3YEewQ0g6WzFEttYolIfkwvMYFgHONB2K5D.acnTV0EQHLzNy0a_tG_t3i8dkpCCGVSqdC1lDCT_AF7SynS2WhgsA8cNc; path=/; expires=Mon, 09-Jun-25 05:51:45 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce2fec5d099aa1-NAG'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 10:51:51,497 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 10:51:51,498 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 10:51:51,499 [DEBUG] receive_response_body.complete
2025-06-09 10:51:51,499 [DEBUG] response_closed.started
2025-06-09 10:51:51,500 [DEBUG] response_closed.complete
2025-06-09 10:51:51,501 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:21:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '739', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '743', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29925', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '150ms', 'x-request-id': 'req_53af8b11f2bdce2b588240c9562176b8', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=jGjvJM7QEw6lXOP8FQ2ovnTuok1l.8MWoNLeqDM2ITw-1749446505-1.0.1.1-0nhSi9RmdTeUEf3YEewQ0g6WzFEttYolIfkwvMYFgHONB2K5D.acnTV0EQHLzNy0a_tG_t3i8dkpCCGVSqdC1lDCT_AF7SynS2WhgsA8cNc; path=/; expires=Mon, 09-Jun-25 05:51:45 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce2fec5d099aa1-NAG', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 10:51:51,503 [DEBUG] request_id: req_53af8b11f2bdce2b588240c9562176b8
2025-06-09 10:51:51,504 [INFO] LLM Raw Output:
```json
{
  "calories_target": 3400,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 10:51:51,505 [INFO]  Extracted Params: {'calories_target': 3400, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 10:51:51,530 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-82f47650-ceaa-486b-9bfd-360a5571516c', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 3257.0 kcal\nProtein: 170.0 g\nCarbs: 425.1 g\nFat: 113.3 g\nFiber: 67.9 g\nSugar: 17.9 g\nSodium: 874.6 mg\n\nRecommended Meals:\nChapati/Roti (Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLotus seed halwa (Kamal gattay ka halwa) (Veg) for Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 10:51:51,532 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:51:51,533 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:51:51,534 [DEBUG] send_request_headers.complete
2025-06-09 10:51:51,535 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:51:51,536 [DEBUG] send_request_body.complete
2025-06-09 10:51:51,537 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:52:06,754 [DEBUG] receive_response_headers.failed exception=RemoteProtocolError('Server disconnected without sending a response.')
2025-06-09 10:52:06,755 [DEBUG] response_closed.started
2025-06-09 10:52:06,755 [DEBUG] response_closed.complete
2025-06-09 10:52:06,756 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 103, in handle_request
    return self._connection.handle_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 136, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 106, in handle_request
    ) = self._receive_response_headers(**kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 177, in _receive_response_headers
    event = self._receive_event(timeout=timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 231, in _receive_event
    raise RemoteProtocolError(msg)
httpcore.RemoteProtocolError: Server disconnected without sending a response.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.RemoteProtocolError: Server disconnected without sending a response.
2025-06-09 10:52:06,772 [DEBUG] 2 retries left
2025-06-09 10:52:06,772 [INFO] Retrying request to /chat/completions in 0.471257 seconds
2025-06-09 10:52:07,244 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-82f47650-ceaa-486b-9bfd-360a5571516c', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 3257.0 kcal\nProtein: 170.0 g\nCarbs: 425.1 g\nFat: 113.3 g\nFiber: 67.9 g\nSugar: 17.9 g\nSodium: 874.6 mg\n\nRecommended Meals:\nChapati/Roti (Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLotus seed halwa (Kamal gattay ka halwa) (Veg) for Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 10:52:07,246 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:52:07,246 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 10:52:13,002 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C089D90>
2025-06-09 10:52:13,002 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 10:52:14,953 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0882D0>
2025-06-09 10:52:14,954 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 10:52:14,955 [DEBUG] send_request_headers.complete
2025-06-09 10:52:14,956 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 10:52:14,956 [DEBUG] send_request_body.complete
2025-06-09 10:52:14,956 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 10:54:05,842 [DEBUG] receive_response_headers.failed exception=RemoteProtocolError('Server disconnected without sending a response.')
2025-06-09 10:54:05,842 [DEBUG] response_closed.started
2025-06-09 10:54:05,843 [DEBUG] response_closed.complete
2025-06-09 10:54:05,844 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 103, in handle_request
    return self._connection.handle_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 136, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 106, in handle_request
    ) = self._receive_response_headers(**kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 177, in _receive_response_headers
    event = self._receive_event(timeout=timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 231, in _receive_event
    raise RemoteProtocolError(msg)
httpcore.RemoteProtocolError: Server disconnected without sending a response.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.RemoteProtocolError: Server disconnected without sending a response.
2025-06-09 10:54:05,851 [DEBUG] 1 retry left
2025-06-09 10:54:05,852 [INFO] Retrying request to /chat/completions in 0.768250 seconds
2025-06-09 10:54:06,621 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-82f47650-ceaa-486b-9bfd-360a5571516c', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 3257.0 kcal\nProtein: 170.0 g\nCarbs: 425.1 g\nFat: 113.3 g\nFiber: 67.9 g\nSugar: 17.9 g\nSodium: 874.6 mg\n\nRecommended Meals:\nChapati/Roti (Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLotus seed halwa (Kamal gattay ka halwa) (Veg) for Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 10:54:06,623 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 10:54:06,623 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 10:54:15,500 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C08B190>
2025-06-09 10:54:15,500 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 10:54:20,510 [DEBUG] start_tls.failed exception=ConnectTimeout(TimeoutError('_ssl.c:989: The handshake operation timed out'))
2025-06-09 10:54:20,510 [DEBUG] Encountered httpx.TimeoutException
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 156, in _connect
    stream = stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 154, in start_tls
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectTimeout: _ssl.c:989: The handshake operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectTimeout: _ssl.c:989: The handshake operation timed out
2025-06-09 10:54:20,519 [DEBUG] Raising timeout error
2025-06-09 10:54:20,519 [ERROR] Error in natural text generation: Request timed out.
2025-06-09 10:54:20,520 [INFO]  Meal plan generated with 9 dishes
2025-06-09 10:54:20,521 [INFO] 127.0.0.1 - - [09/Jun/2025 10:54:20] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 11:00:57,666 [INFO] Received Input: 3400 calorie
2025-06-09 11:00:57,668 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-fb291841-2b97-44d2-bf27-6d87fcefa092', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 3400 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 11:00:57,669 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 11:00:57,670 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 11:00:57,855 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C12C5D0>
2025-06-09 11:00:57,855 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 11:00:57,980 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C12F990>
2025-06-09 11:00:57,981 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 11:00:57,981 [DEBUG] send_request_headers.complete
2025-06-09 11:00:57,982 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 11:00:57,982 [DEBUG] send_request_body.complete
2025-06-09 11:00:57,983 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 11:00:59,140 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:31:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'852'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'859'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29925'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'150ms'), (b'x-request-id', b'req_00d5caeaa5bf9d4b181b52f01d53cbc7'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Jjii7GVtYcw9wajRA3T6FfDJrC6XtqY4WHU2mGHcQdE-1749447060-1.0.1.1-WMnxOQhavDR0eSgXkRwJuMevgs42tEpzHHg2gSjYVmPEBpmicf34eqEcz5xGFMKkt3ch790Gx0dMEAw3b6twEOa5HurISeQDjfplveYVqOU; path=/; expires=Mon, 09-Jun-25 06:01:00 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=VAbfDn9qOSqgRwyeJp2YoTn1xFvW9s7slj7hX1KhoG4-1749447060203-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce3d778b9f9664-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 11:00:59,143 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 11:00:59,143 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 11:00:59,144 [DEBUG] receive_response_body.complete
2025-06-09 11:00:59,145 [DEBUG] response_closed.started
2025-06-09 11:00:59,145 [DEBUG] response_closed.complete
2025-06-09 11:00:59,146 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Mon, 09 Jun 2025 05:31:00 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '852'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '859'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29925'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '150ms'), ('x-request-id', 'req_00d5caeaa5bf9d4b181b52f01d53cbc7'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=Jjii7GVtYcw9wajRA3T6FfDJrC6XtqY4WHU2mGHcQdE-1749447060-1.0.1.1-WMnxOQhavDR0eSgXkRwJuMevgs42tEpzHHg2gSjYVmPEBpmicf34eqEcz5xGFMKkt3ch790Gx0dMEAw3b6twEOa5HurISeQDjfplveYVqOU; path=/; expires=Mon, 09-Jun-25 06:01:00 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=VAbfDn9qOSqgRwyeJp2YoTn1xFvW9s7slj7hX1KhoG4-1749447060203-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94ce3d778b9f9664-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-09 11:00:59,147 [DEBUG] request_id: req_00d5caeaa5bf9d4b181b52f01d53cbc7
2025-06-09 11:00:59,148 [INFO] LLM Raw Output:
```json
{
  "calories_target": 3400,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 11:00:59,150 [INFO]  Extracted Params: {'calories_target': 3400, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 11:00:59,170 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-883ba055-ae67-41c6-b178-5e888aac4fc0', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 3257.0 kcal\nProtein: 170.0 g\nCarbs: 425.1 g\nFat: 113.3 g\nFiber: 67.9 g\nSugar: 17.9 g\nSodium: 874.6 mg\n\nRecommended Meals:\nChapati/Roti (Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLotus seed halwa (Kamal gattay ka halwa) (Veg) for Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 11:00:59,172 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 11:00:59,172 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 11:00:59,173 [DEBUG] send_request_headers.complete
2025-06-09 11:00:59,173 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 11:00:59,174 [DEBUG] send_request_body.complete
2025-06-09 11:00:59,174 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 11:01:02,034 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:31:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'2526'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2537'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29809'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'382ms'), (b'x-request-id', b'req_fb569f27a55e394bd5e80ed76fac2083'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce3d7f0c139664-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 11:01:02,036 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 11:01:02,036 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 11:01:02,037 [DEBUG] receive_response_body.complete
2025-06-09 11:01:02,038 [DEBUG] response_closed.started
2025-06-09 11:01:02,038 [DEBUG] response_closed.complete
2025-06-09 11:01:02,039 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:31:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '2526', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2537', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29809', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '382ms', 'x-request-id': 'req_fb569f27a55e394bd5e80ed76fac2083', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce3d7f0c139664-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 11:01:02,040 [DEBUG] request_id: req_fb569f27a55e394bd5e80ed76fac2083
2025-06-09 11:01:02,042 [INFO]  Meal plan generated with 9 dishes
2025-06-09 11:01:02,043 [INFO] 127.0.0.1 - - [09/Jun/2025 11:01:02] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 11:02:08,074 [INFO] Received Input: 3400 calorie
2025-06-09 11:02:08,076 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-13a6b1ef-f481-4f49-adc5-1dfa4f8b1f24', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 3400 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 11:02:08,077 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 11:02:08,078 [DEBUG] close.started
2025-06-09 11:02:08,079 [DEBUG] close.complete
2025-06-09 11:02:08,079 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 11:02:08,223 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2BC6E490>
2025-06-09 11:02:08,223 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 11:02:08,293 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2BC6C190>
2025-06-09 11:02:08,294 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 11:02:08,295 [DEBUG] send_request_headers.complete
2025-06-09 11:02:08,296 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 11:02:08,296 [DEBUG] send_request_body.complete
2025-06-09 11:02:08,297 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 11:02:10,065 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 05:32:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1459'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1468'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29925'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'150ms'), (b'x-request-id', b'req_08911c8cfe488bbbeec6c4db6e611740'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce3f2ef96e46aa-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 11:02:10,067 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 11:02:10,068 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 11:02:10,068 [DEBUG] receive_response_body.complete
2025-06-09 11:02:10,069 [DEBUG] response_closed.started
2025-06-09 11:02:10,069 [DEBUG] response_closed.complete
2025-06-09 11:02:10,069 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 05:32:11 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1459', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1468', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29925', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '150ms', 'x-request-id': 'req_08911c8cfe488bbbeec6c4db6e611740', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce3f2ef96e46aa-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 11:02:10,071 [DEBUG] request_id: req_08911c8cfe488bbbeec6c4db6e611740
2025-06-09 11:02:10,072 [INFO] LLM Raw Output:
```json
{
  "calories_target": 3400,
  "protein_pct": 15,
  "carbs_pct": 55,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 11:02:10,073 [INFO]  Extracted Params: {'calories_target': 3400, 'protein_pct': 15, 'carbs_pct': 55, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 11:02:10,094 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ae24ef83-63ae-4665-b143-ca2bfcfe6a93', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 3250.0 kcal\nProtein: 127.5 g\nCarbs: 467.5 g\nFat: 113.4 g\nFiber: 69.4 g\nSugar: 17.9 g\nSodium: 797.3 mg\n\nRecommended Meals:\nChapati/Roti (Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLotus seed halwa (Kamal gattay ka halwa) (Veg) for Dinner\nBuckwheat pancake (Khura) (Veg) for Breakfast\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 11:02:10,096 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 11:02:10,097 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 11:02:10,098 [DEBUG] send_request_headers.complete
2025-06-09 11:02:10,099 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 11:02:10,099 [DEBUG] send_request_body.complete
2025-06-09 11:02:10,100 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 11:37:14,077 [INFO] Received Input: 3400 calorie
2025-06-09 11:37:14,080 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-5b965ce6-d183-444a-b663-053c012e3d7f', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 3400 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 11:37:14,082 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 11:37:14,084 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 11:37:14,456 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C12C3D0>
2025-06-09 11:37:14,456 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 11:37:14,584 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2C0BABD0>
2025-06-09 11:37:14,584 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 11:37:14,585 [DEBUG] send_request_headers.complete
2025-06-09 11:37:14,586 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 11:37:14,586 [DEBUG] send_request_body.complete
2025-06-09 11:37:14,587 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 11:37:17,034 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 06:07:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1015'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1021'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29925'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'150ms'), (b'x-request-id', b'req_a340b7ea6d0e83c1d75b644c0057faf4'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=VWUP5nTbZ2vOYMATht3hC2r0xVo8k_Abzd0rW4Wtyro-1749449237-1.0.1.1-MZP4WCUYfCNwVbMTOBif7Npah7MO88_gY8rLiDmVaQrIkSgcrFeYQzekE.7xVNquc6m_4CIwdAC3fsb6.Ad8hNuE9LqrMaJ8IZrQEXg5IkY; path=/; expires=Mon, 09-Jun-25 06:37:17 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce729dec6e492c-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 11:37:17,037 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 11:37:17,037 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 11:37:17,038 [DEBUG] receive_response_body.complete
2025-06-09 11:37:17,038 [DEBUG] response_closed.started
2025-06-09 11:37:17,038 [DEBUG] response_closed.complete
2025-06-09 11:37:17,039 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 06:07:17 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1015', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1021', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29925', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '150ms', 'x-request-id': 'req_a340b7ea6d0e83c1d75b644c0057faf4', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=VWUP5nTbZ2vOYMATht3hC2r0xVo8k_Abzd0rW4Wtyro-1749449237-1.0.1.1-MZP4WCUYfCNwVbMTOBif7Npah7MO88_gY8rLiDmVaQrIkSgcrFeYQzekE.7xVNquc6m_4CIwdAC3fsb6.Ad8hNuE9LqrMaJ8IZrQEXg5IkY; path=/; expires=Mon, 09-Jun-25 06:37:17 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce729dec6e492c-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 11:37:17,042 [DEBUG] request_id: req_a340b7ea6d0e83c1d75b644c0057faf4
2025-06-09 11:37:17,043 [INFO] LLM Raw Output:
```json
{
  "calories_target": 3400,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 11:37:17,045 [INFO]  Extracted Params: {'calories_target': 3400, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 11:37:17,074 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c43b9e37-4d7b-4baf-86e0-6303fd29e4d8', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 3257.0 kcal\nProtein: 170.0 g\nCarbs: 425.1 g\nFat: 113.3 g\nFiber: 67.9 g\nSugar: 17.9 g\nSodium: 874.6 mg\n\nRecommended Meals:\nChapati/Roti (Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLotus seed halwa (Kamal gattay ka halwa) (Veg) for Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 11:37:17,076 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 11:37:17,077 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 11:37:17,078 [DEBUG] send_request_headers.complete
2025-06-09 11:37:17,079 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 11:37:17,079 [DEBUG] send_request_body.complete
2025-06-09 11:37:17,079 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 11:37:20,126 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 06:07:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'2421'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2425'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29809'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'382ms'), (b'x-request-id', b'req_1ecb05d43d9c9a6123a1c7716dfd331b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce72ad3fe4492c-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 11:37:20,128 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 11:37:20,129 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 11:37:20,129 [DEBUG] receive_response_body.complete
2025-06-09 11:37:20,130 [DEBUG] response_closed.started
2025-06-09 11:37:20,130 [DEBUG] response_closed.complete
2025-06-09 11:37:20,130 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 06:07:21 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '2421', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2425', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29809', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '382ms', 'x-request-id': 'req_1ecb05d43d9c9a6123a1c7716dfd331b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce72ad3fe4492c-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 11:37:20,132 [DEBUG] request_id: req_1ecb05d43d9c9a6123a1c7716dfd331b
2025-06-09 11:37:20,133 [INFO]  Meal plan generated with 9 dishes
2025-06-09 11:37:20,134 [INFO] 127.0.0.1 - - [09/Jun/2025 11:37:20] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 11:46:44,589 [DEBUG] receive_response_headers.failed exception=ReadTimeout(TimeoutError('The read operation timed out'))
2025-06-09 11:46:44,590 [DEBUG] response_closed.started
2025-06-09 11:46:44,591 [DEBUG] response_closed.complete
2025-06-09 11:46:44,592 [DEBUG] close.started
2025-06-09 11:46:44,592 [DEBUG] close.complete
2025-06-09 11:46:44,593 [DEBUG] Encountered httpx.TimeoutException
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 103, in handle_request
    return self._connection.handle_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 136, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 106, in handle_request
    ) = self._receive_response_headers(**kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 177, in _receive_response_headers
    event = self._receive_event(timeout=timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\http11.py", line 217, in _receive_event
    data = self._network_stream.read(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 126, in read
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ReadTimeout: The read operation timed out

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ReadTimeout: The read operation timed out
2025-06-09 11:46:44,602 [DEBUG] 2 retries left
2025-06-09 11:46:44,602 [INFO] Retrying request to /chat/completions in 0.487612 seconds
2025-06-09 11:46:45,091 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ae24ef83-63ae-4665-b143-ca2bfcfe6a93', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 3250.0 kcal\nProtein: 127.5 g\nCarbs: 467.5 g\nFat: 113.4 g\nFiber: 69.4 g\nSugar: 17.9 g\nSodium: 797.3 mg\n\nRecommended Meals:\nChapati/Roti (Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLotus seed halwa (Kamal gattay ka halwa) (Veg) for Dinner\nBuckwheat pancake (Khura) (Veg) for Breakfast\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 11:46:45,094 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 11:46:45,094 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 11:46:47,791 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2B7EEF10>
2025-06-09 11:46:47,791 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000029B2B63FBF0> server_hostname='api.openai.com' timeout=5.0
2025-06-09 11:46:49,084 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000029B2BC65D50>
2025-06-09 11:46:49,084 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 11:46:49,086 [DEBUG] send_request_headers.complete
2025-06-09 11:46:49,086 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 11:46:49,087 [DEBUG] send_request_body.complete
2025-06-09 11:46:49,087 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 11:46:54,582 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 06:16:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4311'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4319'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29808'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'384ms'), (b'x-request-id', b'req_cb3411d032a2248bb8c0e6c1be6df1dd'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94ce80a44b5b3f51-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 11:46:54,584 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 11:46:54,584 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 11:46:54,616 [DEBUG] receive_response_body.complete
2025-06-09 11:46:54,616 [DEBUG] response_closed.started
2025-06-09 11:46:54,617 [DEBUG] response_closed.complete
2025-06-09 11:46:54,617 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 06:16:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4311', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4319', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29808', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '384ms', 'x-request-id': 'req_cb3411d032a2248bb8c0e6c1be6df1dd', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94ce80a44b5b3f51-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 11:46:54,620 [DEBUG] request_id: req_cb3411d032a2248bb8c0e6c1be6df1dd
2025-06-09 11:46:54,622 [INFO]  Meal plan generated with 9 dishes
2025-06-09 11:46:54,623 [INFO] 127.0.0.1 - - [09/Jun/2025 11:46:54] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 15:17:46,528 [INFO] Received Input: 3400 calorie
2025-06-09 15:17:46,530 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-47270922-19b6-4015-82d4-3b9414b0f212', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 3400 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 15:17:46,532 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 15:17:46,533 [DEBUG] close.started
2025-06-09 15:17:46,534 [DEBUG] close.complete
2025-06-09 15:17:46,534 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 15:17:46,535 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-09 15:17:46,535 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-09 15:17:46,546 [DEBUG] 2 retries left
2025-06-09 15:17:46,546 [INFO] Retrying request to /chat/completions in 0.415782 seconds
2025-06-09 15:17:46,963 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-47270922-19b6-4015-82d4-3b9414b0f212', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 3400 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 15:17:46,964 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 15:17:46,965 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 15:17:46,966 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-09 15:17:46,966 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-09 15:17:46,974 [DEBUG] 1 retry left
2025-06-09 15:17:46,974 [INFO] Retrying request to /chat/completions in 0.959488 seconds
2025-06-09 15:17:47,549 [INFO] Received Input: 3400 calorie
2025-06-09 15:17:47,551 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-aca7b1f3-8379-4655-9aa3-2f2cea43ed84', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 3400 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 15:17:47,552 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 15:17:47,553 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 15:17:47,554 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-09 15:17:47,554 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-09 15:17:47,566 [DEBUG] 2 retries left
2025-06-09 15:17:47,567 [INFO] Retrying request to /chat/completions in 0.400077 seconds
2025-06-09 15:17:47,935 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-47270922-19b6-4015-82d4-3b9414b0f212', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 3400 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 15:17:47,937 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 15:17:47,938 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 15:17:47,941 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-09 15:17:47,942 [INFO] Received Input: 3400 calorie
2025-06-09 15:17:47,942 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-09 15:17:47,944 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-29b92a9c-b434-4c0d-81ca-e6271399c410', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 3400 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 15:17:47,952 [DEBUG] Raising connection error
2025-06-09 15:17:47,953 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 15:17:47,953 [ERROR] Error extracting preferences: Connection error.
2025-06-09 15:17:47,954 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 15:17:47,956 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-09 15:17:47,959 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-09 15:17:47,962 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-09 15:17:47,968 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-aca7b1f3-8379-4655-9aa3-2f2cea43ed84', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 3400 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 15:17:47,971 [DEBUG] 2 retries left
2025-06-09 15:17:47,983 [ERROR]  Exception: Connection error.
2025-06-09 15:17:47,984 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 15:17:47,985 [INFO] Retrying request to /chat/completions in 0.447189 seconds
2025-06-09 15:17:47,986 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 15:17:47,988 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-09 15:17:47,990 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 353, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-09 15:17:47,992 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-09 15:17:48,004 [INFO] 127.0.0.1 - - [09/Jun/2025 15:17:48] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-09 15:17:48,014 [DEBUG] 1 retry left
2025-06-09 15:17:48,015 [INFO] Retrying request to /chat/completions in 0.801586 seconds
2025-06-09 15:17:48,435 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-29b92a9c-b434-4c0d-81ca-e6271399c410', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 3400 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 15:17:48,436 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 15:17:48,437 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 15:17:48,437 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-09 15:17:48,437 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-09 15:17:48,446 [DEBUG] 1 retry left
2025-06-09 15:17:48,446 [INFO] Retrying request to /chat/completions in 0.772323 seconds
2025-06-09 15:17:48,818 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-aca7b1f3-8379-4655-9aa3-2f2cea43ed84', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 3400 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 15:17:48,819 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 15:17:48,820 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 15:17:48,821 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-09 15:17:48,822 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-09 15:17:48,830 [DEBUG] Raising connection error
2025-06-09 15:17:48,830 [ERROR] Error extracting preferences: Connection error.
2025-06-09 15:17:48,833 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-09 15:17:48,842 [ERROR]  Exception: Connection error.
2025-06-09 15:17:48,845 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 353, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-09 15:17:48,854 [INFO] 127.0.0.1 - - [09/Jun/2025 15:17:48] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-09 15:17:49,220 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-29b92a9c-b434-4c0d-81ca-e6271399c410', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 3400 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 15:17:49,222 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 15:17:49,223 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 15:17:49,223 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-09 15:17:49,224 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-09 15:17:49,232 [DEBUG] Raising connection error
2025-06-09 15:17:49,232 [ERROR] Error extracting preferences: Connection error.
2025-06-09 15:17:49,235 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-09 15:17:49,243 [ERROR]  Exception: Connection error.
2025-06-09 15:17:49,245 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 353, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-09 15:17:49,257 [INFO] 127.0.0.1 - - [09/Jun/2025 15:17:49] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-09 15:19:56,220 [INFO] 127.0.0.1 - - [09/Jun/2025 15:19:56] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:23:18,189 [INFO] 127.0.0.1 - - [09/Jun/2025 15:23:18] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:23:19,649 [INFO] 127.0.0.1 - - [09/Jun/2025 15:23:19] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:23:20,950 [INFO] 127.0.0.1 - - [09/Jun/2025 15:23:20] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:23:21,721 [INFO] 127.0.0.1 - - [09/Jun/2025 15:23:21] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:23:21,839 [INFO] 127.0.0.1 - - [09/Jun/2025 15:23:21] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:23:22,118 [INFO] 127.0.0.1 - - [09/Jun/2025 15:23:22] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:26:09,556 [INFO] CSV loaded successfully.
2025-06-09 15:26:09,659 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-06-09 15:26:09,659 [INFO] [33mPress CTRL+C to quit[0m
2025-06-09 15:26:09,662 [INFO]  * Restarting with stat
2025-06-09 15:26:12,657 [INFO] CSV loaded successfully.
2025-06-09 15:26:12,695 [WARNING]  * Debugger is active!
2025-06-09 15:26:12,702 [INFO]  * Debugger PIN: 461-893-414
2025-06-09 15:26:30,545 [INFO] 127.0.0.1 - - [09/Jun/2025 15:26:30] "GET / HTTP/1.1" 200 -
2025-06-09 15:26:30,776 [INFO] 127.0.0.1 - - [09/Jun/2025 15:26:30] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-09 15:26:35,232 [INFO] 127.0.0.1 - - [09/Jun/2025 15:26:35] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:26:37,893 [INFO] 127.0.0.1 - - [09/Jun/2025 15:26:37] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:26:38,535 [INFO] 127.0.0.1 - - [09/Jun/2025 15:26:38] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:26:39,738 [INFO] Received Input: 
2025-06-09 15:26:39,738 [ERROR]  Exception: Input cannot be empty
2025-06-09 15:26:39,739 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 351, in generate_meal_plan
    raise ValueError("Input cannot be empty")
ValueError: Input cannot be empty

2025-06-09 15:26:39,742 [INFO] 127.0.0.1 - - [09/Jun/2025 15:26:39] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-09 15:27:04,958 [INFO] 127.0.0.1 - - [09/Jun/2025 15:27:04] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:27:05,139 [INFO] 127.0.0.1 - - [09/Jun/2025 15:27:05] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:27:05,837 [INFO] 127.0.0.1 - - [09/Jun/2025 15:27:05] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:27:05,985 [INFO] 127.0.0.1 - - [09/Jun/2025 15:27:05] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:27:06,190 [INFO] 127.0.0.1 - - [09/Jun/2025 15:27:06] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:27:06,395 [INFO] 127.0.0.1 - - [09/Jun/2025 15:27:06] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:27:06,653 [INFO] 127.0.0.1 - - [09/Jun/2025 15:27:06] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:32:05,433 [INFO] 127.0.0.1 - - [09/Jun/2025 15:32:05] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:32:06,322 [INFO] 127.0.0.1 - - [09/Jun/2025 15:32:06] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:32:49,595 [INFO] 127.0.0.1 - - [09/Jun/2025 15:32:49] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:32:50,302 [INFO] 127.0.0.1 - - [09/Jun/2025 15:32:50] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:32:50,656 [INFO] 127.0.0.1 - - [09/Jun/2025 15:32:50] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:32:50,841 [INFO] 127.0.0.1 - - [09/Jun/2025 15:32:50] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:32:52,600 [INFO] Received Input: 
2025-06-09 15:32:52,601 [ERROR]  Exception: Input cannot be empty
2025-06-09 15:32:52,603 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 351, in generate_meal_plan
    raise ValueError("Input cannot be empty")
ValueError: Input cannot be empty

2025-06-09 15:32:52,604 [INFO] 127.0.0.1 - - [09/Jun/2025 15:32:52] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-09 15:33:49,373 [INFO] Received Input: 1234 calorie meal with 30% protein , 40 % fats ,30 % carbs
2025-06-09 15:33:49,971 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4dacbcb2-f6d4-49a0-b547-cd9ac0169b59', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 1234 calorie meal with 30% protein , 40 % fats ,30 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 15:33:49,994 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 15:33:49,995 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 15:33:50,084 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027CF3C87B50>
2025-06-09 15:33:50,084 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027CF3AFFC80> server_hostname='api.openai.com' timeout=5.0
2025-06-09 15:33:50,150 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027CF414E9D0>
2025-06-09 15:33:50,151 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 15:33:50,152 [DEBUG] send_request_headers.complete
2025-06-09 15:33:50,152 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 15:33:50,152 [DEBUG] send_request_body.complete
2025-06-09 15:33:50,153 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 15:33:51,128 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 10:03:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'618'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'621'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29914'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'172ms'), (b'x-request-id', b'req_cba570dd2a72a72268463df35c4bc491'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=y.9atIKb.jqf3HRKo5GEwOyoXPB.6LiTHGXQS.Jby.g-1749463432-1.0.1.1-qWqmNISZcKAg0FiIeRbAl04SXAaMw4xNaQR4uGeu2bUFtWSukP2b0PR7YyTDk3Ucw8wWWZSa2ybyiosm0.wyOwH0dTbfOMl_miB02DwKt3U; path=/; expires=Mon, 09-Jun-25 10:33:52 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=BGozI.zMQ6WOnfsunProzLSy512t7db52Zsh2qsebTQ-1749463432412-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94cfcd2f39308e16-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 15:33:51,130 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 15:33:51,131 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 15:33:51,131 [DEBUG] receive_response_body.complete
2025-06-09 15:33:51,132 [DEBUG] response_closed.started
2025-06-09 15:33:51,132 [DEBUG] response_closed.complete
2025-06-09 15:33:51,133 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Mon, 09 Jun 2025 10:03:52 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '618'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '621'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29914'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '172ms'), ('x-request-id', 'req_cba570dd2a72a72268463df35c4bc491'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=y.9atIKb.jqf3HRKo5GEwOyoXPB.6LiTHGXQS.Jby.g-1749463432-1.0.1.1-qWqmNISZcKAg0FiIeRbAl04SXAaMw4xNaQR4uGeu2bUFtWSukP2b0PR7YyTDk3Ucw8wWWZSa2ybyiosm0.wyOwH0dTbfOMl_miB02DwKt3U; path=/; expires=Mon, 09-Jun-25 10:33:52 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=BGozI.zMQ6WOnfsunProzLSy512t7db52Zsh2qsebTQ-1749463432412-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94cfcd2f39308e16-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-09 15:33:51,135 [DEBUG] request_id: req_cba570dd2a72a72268463df35c4bc491
2025-06-09 15:33:51,138 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1234,
  "protein_pct": 30,
  "carbs_pct": 30,
  "fat_pct": 40,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 15:33:51,141 [INFO]  Extracted Params: {'calories_target': 1234, 'protein_pct': 30, 'carbs_pct': 30, 'fat_pct': 40, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 15:33:51,166 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-fcf01983-678d-4aac-b7df-1dc1c4c40e11', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1142.0 kcal\nProtein: 92.6 g\nCarbs: 92.6 g\nFat: 54.9 g\nFiber: 37.1 g\nSugar: 3.5 g\nSodium: 308.9 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 15:33:51,167 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 15:33:51,168 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 15:33:51,169 [DEBUG] send_request_headers.complete
2025-06-09 15:33:51,169 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 15:33:51,170 [DEBUG] send_request_body.complete
2025-06-09 15:33:51,170 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 15:33:54,491 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 10:03:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'2768'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2772'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29860'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'280ms'), (b'x-request-id', b'req_8c4231dd6a17064ceb84cc96e8317007'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94cfcd35b80e8e16-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 15:33:54,493 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 15:33:54,493 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 15:33:54,494 [DEBUG] receive_response_body.complete
2025-06-09 15:33:54,495 [DEBUG] response_closed.started
2025-06-09 15:33:54,495 [DEBUG] response_closed.complete
2025-06-09 15:33:54,496 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 10:03:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '2768', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2772', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29860', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '280ms', 'x-request-id': 'req_8c4231dd6a17064ceb84cc96e8317007', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94cfcd35b80e8e16-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 15:33:54,497 [DEBUG] request_id: req_8c4231dd6a17064ceb84cc96e8317007
2025-06-09 15:33:54,499 [INFO]  Meal plan generated with 4 dishes
2025-06-09 15:33:54,500 [INFO] 127.0.0.1 - - [09/Jun/2025 15:33:54] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 15:36:58,018 [INFO] 127.0.0.1 - - [09/Jun/2025 15:36:58] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:36:58,712 [INFO] 127.0.0.1 - - [09/Jun/2025 15:36:58] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:36:58,844 [INFO] 127.0.0.1 - - [09/Jun/2025 15:36:58] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:36:59,087 [INFO] 127.0.0.1 - - [09/Jun/2025 15:36:59] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:36:59,478 [INFO] 127.0.0.1 - - [09/Jun/2025 15:36:59] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:37:00,676 [INFO] 127.0.0.1 - - [09/Jun/2025 15:37:00] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:37:00,808 [INFO] 127.0.0.1 - - [09/Jun/2025 15:37:00] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:37:00,993 [INFO] 127.0.0.1 - - [09/Jun/2025 15:37:00] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:37:01,256 [INFO] 127.0.0.1 - - [09/Jun/2025 15:37:01] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:37:02,388 [INFO] 127.0.0.1 - - [09/Jun/2025 15:37:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:37:02,523 [INFO] 127.0.0.1 - - [09/Jun/2025 15:37:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:37:02,713 [INFO] 127.0.0.1 - - [09/Jun/2025 15:37:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:37:02,961 [INFO] 127.0.0.1 - - [09/Jun/2025 15:37:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 15:37:03,852 [INFO] 127.0.0.1 - - [09/Jun/2025 15:37:03] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:03:09,457 [INFO] 127.0.0.1 - - [09/Jun/2025 16:03:09] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:03:10,169 [INFO] 127.0.0.1 - - [09/Jun/2025 16:03:10] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:03:10,294 [INFO] 127.0.0.1 - - [09/Jun/2025 16:03:10] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:03:10,555 [INFO] 127.0.0.1 - - [09/Jun/2025 16:03:10] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:03:11,202 [INFO] 127.0.0.1 - - [09/Jun/2025 16:03:11] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:03:11,379 [INFO] 127.0.0.1 - - [09/Jun/2025 16:03:11] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:03:41,085 [INFO] 127.0.0.1 - - [09/Jun/2025 16:03:41] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:03:41,258 [INFO] 127.0.0.1 - - [09/Jun/2025 16:03:41] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:03:41,679 [INFO] 127.0.0.1 - - [09/Jun/2025 16:03:41] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:08:22,572 [INFO] 127.0.0.1 - - [09/Jun/2025 16:08:22] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:35,044 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:35] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:35,727 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:35] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:35,820 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:35] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:36,011 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:36] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:36,202 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:36] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:36,393 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:36] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:36,577 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:36] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:36,753 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:36] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:36,929 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:36] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:37,086 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:37] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:37,245 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:37] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:37,408 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:37] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:37,585 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:37] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:37,745 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:37] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:38,056 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:38] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:38,672 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:38] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:38,819 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:38] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:39,069 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:39] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:39,714 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:39] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:39,870 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:39] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:40,106 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:40] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:40,641 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:40] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:40,825 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:40] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:39:51,172 [INFO] 127.0.0.1 - - [09/Jun/2025 16:39:51] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:41:10,205 [INFO] 127.0.0.1 - - [09/Jun/2025 16:41:10] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:41:11,038 [INFO] 127.0.0.1 - - [09/Jun/2025 16:41:11] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:41:11,165 [INFO] 127.0.0.1 - - [09/Jun/2025 16:41:11] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:41:11,435 [INFO] 127.0.0.1 - - [09/Jun/2025 16:41:11] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:41:18,116 [INFO] 127.0.0.1 - - [09/Jun/2025 16:41:18] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:41:48,637 [INFO] 127.0.0.1 - - [09/Jun/2025 16:41:48] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:41:49,252 [INFO] 127.0.0.1 - - [09/Jun/2025 16:41:49] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:41:49,391 [INFO] 127.0.0.1 - - [09/Jun/2025 16:41:49] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:41:49,629 [INFO] 127.0.0.1 - - [09/Jun/2025 16:41:49] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:41:49,887 [INFO] 127.0.0.1 - - [09/Jun/2025 16:41:49] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:41:50,540 [INFO] 127.0.0.1 - - [09/Jun/2025 16:41:50] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:41:50,680 [INFO] 127.0.0.1 - - [09/Jun/2025 16:41:50] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:41:50,878 [INFO] 127.0.0.1 - - [09/Jun/2025 16:41:50] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:41:51,119 [INFO] 127.0.0.1 - - [09/Jun/2025 16:41:51] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:42:10,566 [INFO] 127.0.0.1 - - [09/Jun/2025 16:42:10] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:43:01,447 [INFO] 127.0.0.1 - - [09/Jun/2025 16:43:01] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:43:02,230 [INFO] 127.0.0.1 - - [09/Jun/2025 16:43:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:43:02,348 [INFO] 127.0.0.1 - - [09/Jun/2025 16:43:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:43:02,537 [INFO] 127.0.0.1 - - [09/Jun/2025 16:43:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:43:02,796 [INFO] 127.0.0.1 - - [09/Jun/2025 16:43:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:43:03,442 [INFO] 127.0.0.1 - - [09/Jun/2025 16:43:03] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:43:03,561 [INFO] 127.0.0.1 - - [09/Jun/2025 16:43:03] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:43:03,751 [INFO] 127.0.0.1 - - [09/Jun/2025 16:43:03] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:43:03,928 [INFO] 127.0.0.1 - - [09/Jun/2025 16:43:03] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:43:04,185 [INFO] 127.0.0.1 - - [09/Jun/2025 16:43:04] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:44:38,309 [INFO] 127.0.0.1 - - [09/Jun/2025 16:44:38] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:44:38,431 [INFO] 127.0.0.1 - - [09/Jun/2025 16:44:38] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:44:38,675 [INFO] 127.0.0.1 - - [09/Jun/2025 16:44:38] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:44:38,873 [INFO] 127.0.0.1 - - [09/Jun/2025 16:44:38] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:44:39,078 [INFO] 127.0.0.1 - - [09/Jun/2025 16:44:39] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:44:39,312 [INFO] 127.0.0.1 - - [09/Jun/2025 16:44:39] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:44:39,695 [INFO] 127.0.0.1 - - [09/Jun/2025 16:44:39] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:44:39,806 [INFO] 127.0.0.1 - - [09/Jun/2025 16:44:39] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:44:40,049 [INFO] 127.0.0.1 - - [09/Jun/2025 16:44:40] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:44:45,175 [INFO] Received Input: 
2025-06-09 16:44:45,175 [ERROR]  Exception: Input cannot be empty
2025-06-09 16:44:45,176 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 351, in generate_meal_plan
    raise ValueError("Input cannot be empty")
ValueError: Input cannot be empty

2025-06-09 16:44:45,177 [INFO] 127.0.0.1 - - [09/Jun/2025 16:44:45] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-09 16:45:16,724 [INFO] Received Input: give me meal for calorie 4500 
2025-06-09 16:45:16,726 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ca588c7e-de94-476f-8b9b-d6fe94c3e591', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for calorie 4500 '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-09 16:45:16,727 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 16:45:16,728 [DEBUG] close.started
2025-06-09 16:45:16,729 [DEBUG] close.complete
2025-06-09 16:45:16,730 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-09 16:45:16,852 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027CF44AF650>
2025-06-09 16:45:16,852 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000027CF3AFFC80> server_hostname='api.openai.com' timeout=5.0
2025-06-09 16:45:16,920 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000027CF44AD3D0>
2025-06-09 16:45:16,921 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 16:45:16,922 [DEBUG] send_request_headers.complete
2025-06-09 16:45:16,922 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 16:45:16,922 [DEBUG] send_request_body.complete
2025-06-09 16:45:16,923 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 16:45:18,820 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 11:15:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1103'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1109'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29921'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'158ms'), (b'x-request-id', b'req_b26bfb9fc4c0944e8eef1bbef7177ae1'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=csKQdTsaPTA7l5Mtye52FPRmdBI8_3b_fNS1ciFctQ8-1749467720-1.0.1.1-jiOnpxRO38vzhV0RW0xyjXdUMIIi1.DkGDBh6vIJaHjIxJzRD8jqWSSLVkvduEKsoRueEHUSeOFrxqQhLq7wJuFJG_ZPg2kLwKtbzEpkttI; path=/; expires=Mon, 09-Jun-25 11:45:20 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d035d838ea85b9-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 16:45:18,823 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 16:45:18,823 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 16:45:18,824 [DEBUG] receive_response_body.complete
2025-06-09 16:45:18,825 [DEBUG] response_closed.started
2025-06-09 16:45:18,825 [DEBUG] response_closed.complete
2025-06-09 16:45:18,826 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 11:15:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1103', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1109', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29921', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '158ms', 'x-request-id': 'req_b26bfb9fc4c0944e8eef1bbef7177ae1', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=csKQdTsaPTA7l5Mtye52FPRmdBI8_3b_fNS1ciFctQ8-1749467720-1.0.1.1-jiOnpxRO38vzhV0RW0xyjXdUMIIi1.DkGDBh6vIJaHjIxJzRD8jqWSSLVkvduEKsoRueEHUSeOFrxqQhLq7wJuFJG_ZPg2kLwKtbzEpkttI; path=/; expires=Mon, 09-Jun-25 11:45:20 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d035d838ea85b9-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 16:45:18,829 [DEBUG] request_id: req_b26bfb9fc4c0944e8eef1bbef7177ae1
2025-06-09 16:45:18,830 [INFO] LLM Raw Output:
```json
{
  "calories_target": 4500,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-09 16:45:18,832 [INFO]  Extracted Params: {'calories_target': 4500, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-09 16:45:18,857 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-bc55cb5a-5865-4d56-8d5b-a5d98336d3e4', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 4364.0 kcal\nProtein: 225.0 g\nCarbs: 562.5 g\nFat: 150.0 g\nFiber: 96.3 g\nSugar: 22.0 g\nSodium: 1114.0 mg\n\nRecommended Meals:\nChapati/Roti (Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nNamkeen daliya (Veg) for Breakfast/Lunch/Dinner\nLotus seed halwa (Kamal gattay ka halwa) (Veg) for Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nBuckwheat pancake (Khura) (Veg) for Breakfast\nMaa chaane ki dal (Veg) for Lunch/Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-09 16:45:18,860 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-09 16:45:18,860 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-09 16:45:18,861 [DEBUG] send_request_headers.complete
2025-06-09 16:45:18,862 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-09 16:45:18,862 [DEBUG] send_request_body.complete
2025-06-09 16:45:18,863 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-09 16:45:24,074 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Mon, 09 Jun 2025 11:15:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4778'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4797'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29763'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'474ms'), (b'x-request-id', b'req_326fa7dde6e6608035dfcba587eb808b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d035e41b0b85b9-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-09 16:45:24,076 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-09 16:45:24,076 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-09 16:45:24,077 [DEBUG] receive_response_body.complete
2025-06-09 16:45:24,078 [DEBUG] response_closed.started
2025-06-09 16:45:24,078 [DEBUG] response_closed.complete
2025-06-09 16:45:24,079 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Mon, 09 Jun 2025 11:15:25 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4778', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4797', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29763', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '474ms', 'x-request-id': 'req_326fa7dde6e6608035dfcba587eb808b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d035e41b0b85b9-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-09 16:45:24,079 [DEBUG] request_id: req_326fa7dde6e6608035dfcba587eb808b
2025-06-09 16:45:24,081 [INFO]  Meal plan generated with 13 dishes
2025-06-09 16:45:24,082 [INFO] 127.0.0.1 - - [09/Jun/2025 16:45:24] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-09 16:47:49,367 [INFO] 127.0.0.1 - - [09/Jun/2025 16:47:49] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:47:50,069 [INFO] 127.0.0.1 - - [09/Jun/2025 16:47:50] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:47:50,198 [INFO] 127.0.0.1 - - [09/Jun/2025 16:47:50] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:47:50,380 [INFO] 127.0.0.1 - - [09/Jun/2025 16:47:50] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:47:50,584 [INFO] 127.0.0.1 - - [09/Jun/2025 16:47:50] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:47:50,849 [INFO] 127.0.0.1 - - [09/Jun/2025 16:47:50] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:47:51,901 [INFO] 127.0.0.1 - - [09/Jun/2025 16:47:51] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:47:52,054 [INFO] 127.0.0.1 - - [09/Jun/2025 16:47:52] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:47:52,313 [INFO] 127.0.0.1 - - [09/Jun/2025 16:47:52] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:49:21,443 [INFO] CSV loaded successfully.
2025-06-09 16:49:21,519 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-06-09 16:49:21,519 [INFO] [33mPress CTRL+C to quit[0m
2025-06-09 16:49:21,523 [INFO]  * Restarting with stat
2025-06-09 16:49:24,640 [INFO] CSV loaded successfully.
2025-06-09 16:49:24,683 [WARNING]  * Debugger is active!
2025-06-09 16:49:24,688 [INFO]  * Debugger PIN: 461-893-414
2025-06-09 16:49:26,864 [INFO] 127.0.0.1 - - [09/Jun/2025 16:49:26] "GET / HTTP/1.1" 200 -
2025-06-09 16:49:27,099 [INFO] 127.0.0.1 - - [09/Jun/2025 16:49:27] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-09 16:49:29,178 [INFO] 127.0.0.1 - - [09/Jun/2025 16:49:29] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:49:31,113 [INFO] 127.0.0.1 - - [09/Jun/2025 16:49:31] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:49:31,236 [INFO] 127.0.0.1 - - [09/Jun/2025 16:49:31] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:49:31,465 [INFO] 127.0.0.1 - - [09/Jun/2025 16:49:31] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:49:57,058 [INFO] 127.0.0.1 - - [09/Jun/2025 16:49:57] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:51:16,902 [INFO] 127.0.0.1 - - [09/Jun/2025 16:51:16] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:51:17,516 [INFO] 127.0.0.1 - - [09/Jun/2025 16:51:17] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:51:17,627 [INFO] 127.0.0.1 - - [09/Jun/2025 16:51:17] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:51:17,825 [INFO] 127.0.0.1 - - [09/Jun/2025 16:51:17] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:51:18,068 [INFO] 127.0.0.1 - - [09/Jun/2025 16:51:18] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:51:19,211 [INFO] Received Input: 
2025-06-09 16:51:19,211 [ERROR]  Exception: Input cannot be empty
2025-06-09 16:51:19,213 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner 2.0\app.py", line 351, in generate_meal_plan
    raise ValueError("Input cannot be empty")
ValueError: Input cannot be empty

2025-06-09 16:51:19,214 [INFO] 127.0.0.1 - - [09/Jun/2025 16:51:19] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-09 16:51:43,476 [INFO] 127.0.0.1 - - [09/Jun/2025 16:51:43] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:51:44,142 [INFO] 127.0.0.1 - - [09/Jun/2025 16:51:44] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:51:44,326 [INFO] 127.0.0.1 - - [09/Jun/2025 16:51:44] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:53:49,357 [INFO] 127.0.0.1 - - [09/Jun/2025 16:53:49] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:55:01,068 [INFO] 127.0.0.1 - - [09/Jun/2025 16:55:01] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:55:01,689 [INFO] 127.0.0.1 - - [09/Jun/2025 16:55:01] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:55:01,817 [INFO] 127.0.0.1 - - [09/Jun/2025 16:55:01] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:55:02,012 [INFO] 127.0.0.1 - - [09/Jun/2025 16:55:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:55:02,203 [INFO] 127.0.0.1 - - [09/Jun/2025 16:55:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:55:02,401 [INFO] 127.0.0.1 - - [09/Jun/2025 16:55:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:55:02,608 [INFO] 127.0.0.1 - - [09/Jun/2025 16:55:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:55:02,871 [INFO] 127.0.0.1 - - [09/Jun/2025 16:55:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:55:03,533 [INFO] 127.0.0.1 - - [09/Jun/2025 16:55:03] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:55:03,660 [INFO] 127.0.0.1 - - [09/Jun/2025 16:55:03] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:55:03,849 [INFO] 127.0.0.1 - - [09/Jun/2025 16:55:03] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:55:04,092 [INFO] 127.0.0.1 - - [09/Jun/2025 16:55:04] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 16:55:04,408 [INFO] 127.0.0.1 - - [09/Jun/2025 16:55:04] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 22:54:39,855 [INFO]  * Detected change in 'C:\\Users\\sanke\\OneDrive\\Desktop\\Meal_planner 2.0\\app.py', reloading
2025-06-09 22:54:40,125 [INFO]  * Restarting with stat
2025-06-09 22:54:43,432 [INFO] CSV loaded successfully.
2025-06-09 22:54:43,476 [WARNING]  * Debugger is active!
2025-06-09 22:54:43,480 [INFO]  * Debugger PIN: 461-893-414
2025-06-09 22:54:48,527 [INFO]  * Detected change in 'C:\\Users\\sanke\\OneDrive\\Desktop\\Meal_planner 2.0\\app.py', reloading
2025-06-09 22:54:48,781 [INFO]  * Restarting with stat
2025-06-09 22:54:51,886 [INFO] CSV loaded successfully.
2025-06-09 22:54:51,930 [WARNING]  * Debugger is active!
2025-06-09 22:54:51,938 [INFO]  * Debugger PIN: 461-893-414
2025-06-09 22:55:04,159 [INFO] 127.0.0.1 - - [09/Jun/2025 22:55:04] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 22:55:07,831 [INFO] 127.0.0.1 - - [09/Jun/2025 22:55:07] "GET /chatbot HTTP/1.1" 200 -
2025-06-09 22:56:44,963 [INFO] 127.0.0.1 - - [09/Jun/2025 22:56:44] "GET /chatbot HTTP/1.1" 200 -
2025-06-09 22:56:46,852 [INFO] 127.0.0.1 - - [09/Jun/2025 22:56:46] "GET /chatbot HTTP/1.1" 200 -
2025-06-09 22:56:47,588 [INFO] 127.0.0.1 - - [09/Jun/2025 22:56:47] "GET /chatbot HTTP/1.1" 200 -
2025-06-09 22:56:48,324 [INFO] 127.0.0.1 - - [09/Jun/2025 22:56:48] "GET /chatbot HTTP/1.1" 200 -
2025-06-09 22:56:48,464 [INFO] 127.0.0.1 - - [09/Jun/2025 22:56:48] "GET /chatbot HTTP/1.1" 200 -
2025-06-09 22:56:48,680 [INFO] 127.0.0.1 - - [09/Jun/2025 22:56:48] "GET /chatbot HTTP/1.1" 200 -
2025-06-09 22:56:48,951 [INFO] 127.0.0.1 - - [09/Jun/2025 22:56:48] "GET /chatbot HTTP/1.1" 200 -
2025-06-09 22:56:49,723 [INFO] 127.0.0.1 - - [09/Jun/2025 22:56:49] "GET /chatbot HTTP/1.1" 200 -
2025-06-09 22:56:50,035 [INFO] 127.0.0.1 - - [09/Jun/2025 22:56:50] "GET /chatbot HTTP/1.1" 200 -
2025-06-09 22:56:51,739 [INFO] 127.0.0.1 - - [09/Jun/2025 22:56:51] "GET /chatbot HTTP/1.1" 200 -
2025-06-09 22:56:51,787 [INFO] 127.0.0.1 - - [09/Jun/2025 22:56:51] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-06-09 22:56:56,423 [INFO] 127.0.0.1 - - [09/Jun/2025 22:56:56] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 22:56:59,148 [INFO] 127.0.0.1 - - [09/Jun/2025 22:56:59] "GET /chatbot HTTP/1.1" 200 -
2025-06-09 22:58:29,771 [INFO] 127.0.0.1 - - [09/Jun/2025 22:58:29] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 22:58:32,088 [INFO] 127.0.0.1 - - [09/Jun/2025 22:58:32] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 22:58:32,693 [INFO] 127.0.0.1 - - [09/Jun/2025 22:58:32] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 22:58:32,810 [INFO] 127.0.0.1 - - [09/Jun/2025 22:58:32] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 22:58:33,039 [INFO] 127.0.0.1 - - [09/Jun/2025 22:58:33] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 22:58:33,303 [INFO] 127.0.0.1 - - [09/Jun/2025 22:58:33] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 22:58:34,800 [INFO] 127.0.0.1 - - [09/Jun/2025 22:58:34] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 22:58:34,975 [INFO] 127.0.0.1 - - [09/Jun/2025 22:58:34] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 22:58:45,916 [INFO] 127.0.0.1 - - [09/Jun/2025 22:58:45] "GET /meal-planner HTTP/1.1" 200 -
2025-06-09 23:00:57,407 [INFO] CSV loaded successfully.
2025-06-09 23:00:57,470 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-06-09 23:00:57,471 [INFO] [33mPress CTRL+C to quit[0m
2025-06-09 23:00:57,473 [INFO]  * Restarting with stat
2025-06-09 23:01:00,564 [INFO] CSV loaded successfully.
2025-06-09 23:01:00,605 [WARNING]  * Debugger is active!
2025-06-09 23:01:00,610 [INFO]  * Debugger PIN: 461-893-414
2025-06-09 23:01:04,089 [INFO] 127.0.0.1 - - [09/Jun/2025 23:01:04] "GET / HTTP/1.1" 200 -
2025-06-09 23:01:04,289 [INFO] 127.0.0.1 - - [09/Jun/2025 23:01:04] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-09 23:01:06,296 [INFO] 127.0.0.1 - - [09/Jun/2025 23:01:06] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-09 23:01:18,142 [INFO] 127.0.0.1 - - [09/Jun/2025 23:01:18] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-09 23:01:27,397 [INFO] 127.0.0.1 - - [09/Jun/2025 23:01:27] "GET /meal-planner HTTP/1.1" 200 -
2025-06-10 08:02:25,679 [INFO] 127.0.0.1 - - [10/Jun/2025 08:02:25] "GET /meal-planner HTTP/1.1" 200 -
2025-06-10 08:03:40,232 [INFO] Received Input: give me meal for 1234 calorie 30 % proteins and 30% fats , 40 % carbs
2025-06-10 08:03:40,661 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-dfa40f5a-7b71-4b69-89ac-aa53473ceb20', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1234 calorie 30 % proteins and 30% fats , 40 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-10 08:03:40,677 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 08:03:40,678 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-10 08:03:40,801 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014591B6ADD0>
2025-06-10 08:03:40,801 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001459152FC80> server_hostname='api.openai.com' timeout=5.0
2025-06-10 08:03:40,849 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x00000145915E8F10>
2025-06-10 08:03:40,850 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 08:03:40,851 [DEBUG] send_request_headers.complete
2025-06-10 08:03:40,851 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 08:03:40,852 [DEBUG] send_request_body.complete
2025-06-10 08:03:40,852 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 08:03:41,979 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 02:33:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'844'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'848'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29911'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'178ms'), (b'x-request-id', b'req_77ea270d83b05cb7d2e782ec433575bb'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=QDZCCt_Y8.jzs9H4XJk4OT8Iy9abbmW7s2KCix2sHwI-1749522823-1.0.1.1-hIF8HOvWEPz6h8EA4GkW7sf8AkqVpyd6WdJBnbNUj8FwD6V06JkCRtKMeK8QLjyrUjPG7qLW1xBuV7DY4Afu_OWTzLV2tefh6U0Y_NHY1Ow; path=/; expires=Tue, 10-Jun-25 03:03:43 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=jUPNdyE2AJ1v.Gwf.W446TPuAQJ4GJsLtxXRqmta73Y-1749522823281-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d57726c9850e1c-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 08:03:41,982 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 08:03:41,983 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 08:03:41,983 [DEBUG] receive_response_body.complete
2025-06-10 08:03:41,984 [DEBUG] response_closed.started
2025-06-10 08:03:41,984 [DEBUG] response_closed.complete
2025-06-10 08:03:41,985 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Tue, 10 Jun 2025 02:33:43 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '844'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '848'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29911'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '178ms'), ('x-request-id', 'req_77ea270d83b05cb7d2e782ec433575bb'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=QDZCCt_Y8.jzs9H4XJk4OT8Iy9abbmW7s2KCix2sHwI-1749522823-1.0.1.1-hIF8HOvWEPz6h8EA4GkW7sf8AkqVpyd6WdJBnbNUj8FwD6V06JkCRtKMeK8QLjyrUjPG7qLW1xBuV7DY4Afu_OWTzLV2tefh6U0Y_NHY1Ow; path=/; expires=Tue, 10-Jun-25 03:03:43 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=jUPNdyE2AJ1v.Gwf.W446TPuAQJ4GJsLtxXRqmta73Y-1749522823281-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94d57726c9850e1c-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-10 08:03:41,987 [DEBUG] request_id: req_77ea270d83b05cb7d2e782ec433575bb
2025-06-10 08:03:41,990 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1234,
  "protein_pct": 30,
  "carbs_pct": 40,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-10 08:03:41,992 [INFO]  Extracted Params: {'calories_target': 1234, 'protein_pct': 30, 'carbs_pct': 40, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-10 08:03:42,020 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-dcbe6cad-12c7-4c08-b12a-32c2734c0ee9', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1173.0 kcal\nProtein: 92.6 g\nCarbs: 123.5 g\nFat: 41.2 g\nFiber: 32.1 g\nSugar: 5.5 g\nSodium: 428.3 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-10 08:03:42,022 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 08:03:42,022 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 08:03:42,023 [DEBUG] send_request_headers.complete
2025-06-10 08:03:42,023 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 08:03:42,024 [DEBUG] send_request_body.complete
2025-06-10 08:03:42,025 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 08:03:49,356 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 02:33:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'7032'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'7036'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29850'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'300ms'), (b'x-request-id', b'req_3d96f8cd6b4a70faccef96710ed871fd'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d5772e2d510e1c-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 08:03:49,358 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 08:03:49,358 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 08:03:49,359 [DEBUG] receive_response_body.complete
2025-06-10 08:03:49,359 [DEBUG] response_closed.started
2025-06-10 08:03:49,359 [DEBUG] response_closed.complete
2025-06-10 08:03:49,360 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 02:33:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '7032', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '7036', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29850', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '300ms', 'x-request-id': 'req_3d96f8cd6b4a70faccef96710ed871fd', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d5772e2d510e1c-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-10 08:03:49,361 [DEBUG] request_id: req_3d96f8cd6b4a70faccef96710ed871fd
2025-06-10 08:03:49,362 [INFO]  Meal plan generated with 5 dishes
2025-06-10 08:03:49,364 [INFO] 127.0.0.1 - - [10/Jun/2025 08:03:49] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-10 08:27:26,437 [INFO] Received Input: give me meal for 2234 calorie 30 % proteins and 30% fats , 40 % carbs
2025-06-10 08:27:26,449 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-7476bd48-d4dd-4b46-b5d7-3120b1a7ec49', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2234 calorie 30 % proteins and 30% fats , 40 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-10 08:27:26,456 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 08:27:26,460 [DEBUG] close.started
2025-06-10 08:27:26,461 [DEBUG] close.complete
2025-06-10 08:27:26,461 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-10 08:27:26,577 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001459160F990>
2025-06-10 08:27:26,578 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001459152FC80> server_hostname='api.openai.com' timeout=5.0
2025-06-10 08:27:26,691 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014591ED04D0>
2025-06-10 08:27:26,692 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 08:27:26,694 [DEBUG] send_request_headers.complete
2025-06-10 08:27:26,696 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 08:27:26,698 [DEBUG] send_request_body.complete
2025-06-10 08:27:26,699 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 08:27:28,329 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 02:57:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'868'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'876'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29911'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'178ms'), (b'x-request-id', b'req_17e689425bdbe0294ecb2493a7346f2c'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=22vIdDXYljuKR08oQu_FqNdAqdwnUEeq_SF7MPKvqBc-1749524249-1.0.1.1-JKq_1e8gPMXZlUoZ7pc07E3Mqija2tWHv3dYwF4b3G137Npv6_nr3Jv9YIIqqJmlqIH.pKZWBEuqSP3sWb9jWyVsaeP.vqXs9RVKmjRmQdo; path=/; expires=Tue, 10-Jun-25 03:27:29 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d599f6681a3fb5-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 08:27:28,331 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 08:27:28,332 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 08:27:28,333 [DEBUG] receive_response_body.complete
2025-06-10 08:27:28,334 [DEBUG] response_closed.started
2025-06-10 08:27:28,334 [DEBUG] response_closed.complete
2025-06-10 08:27:28,334 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 02:57:29 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '868', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '876', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29911', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '178ms', 'x-request-id': 'req_17e689425bdbe0294ecb2493a7346f2c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=22vIdDXYljuKR08oQu_FqNdAqdwnUEeq_SF7MPKvqBc-1749524249-1.0.1.1-JKq_1e8gPMXZlUoZ7pc07E3Mqija2tWHv3dYwF4b3G137Npv6_nr3Jv9YIIqqJmlqIH.pKZWBEuqSP3sWb9jWyVsaeP.vqXs9RVKmjRmQdo; path=/; expires=Tue, 10-Jun-25 03:27:29 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d599f6681a3fb5-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-10 08:27:28,336 [DEBUG] request_id: req_17e689425bdbe0294ecb2493a7346f2c
2025-06-10 08:27:28,339 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2234,
  "protein_pct": 30,
  "carbs_pct": 40,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-10 08:27:28,344 [INFO]  Extracted Params: {'calories_target': 2234, 'protein_pct': 30, 'carbs_pct': 40, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-10 08:27:28,376 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-9386a777-69ff-4ade-b8a1-a481c90d2b50', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2111.0 kcal\nProtein: 167.6 g\nCarbs: 223.5 g\nFat: 74.5 g\nFiber: 57.5 g\nSugar: 17.6 g\nSodium: 1086.6 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-10 08:27:28,381 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 08:27:28,382 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 08:27:28,383 [DEBUG] send_request_headers.complete
2025-06-10 08:27:28,383 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 08:27:28,384 [DEBUG] send_request_body.complete
2025-06-10 08:27:28,385 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 08:27:32,968 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 02:57:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3941'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3946'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29829'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'342ms'), (b'x-request-id', b'req_8a22ba58ec3501c455e5ff926688614e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d59a00ff8c3fb5-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 08:27:32,971 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 08:27:32,972 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 08:27:32,973 [DEBUG] receive_response_body.complete
2025-06-10 08:27:32,976 [DEBUG] response_closed.started
2025-06-10 08:27:32,977 [DEBUG] response_closed.complete
2025-06-10 08:27:32,978 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 02:57:34 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3941', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3946', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29829', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '342ms', 'x-request-id': 'req_8a22ba58ec3501c455e5ff926688614e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d59a00ff8c3fb5-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-10 08:27:32,981 [DEBUG] request_id: req_8a22ba58ec3501c455e5ff926688614e
2025-06-10 08:27:32,983 [INFO]  Meal plan generated with 7 dishes
2025-06-10 08:27:32,985 [INFO] 127.0.0.1 - - [10/Jun/2025 08:27:32] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-10 10:32:52,225 [INFO] 127.0.0.1 - - [10/Jun/2025 10:32:52] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-10 10:33:28,044 [INFO] 127.0.0.1 - - [10/Jun/2025 10:33:28] "POST /calorie-calculator HTTP/1.1" 200 -
2025-06-10 10:34:05,646 [INFO] 127.0.0.1 - - [10/Jun/2025 10:34:05] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-10 10:34:08,568 [INFO] 127.0.0.1 - - [10/Jun/2025 10:34:08] "GET /meal-planner HTTP/1.1" 200 -
2025-06-10 10:34:49,026 [INFO] Received Input: give me meal for 1660 calorie with 30 % carbs , 30% fats and 40% protein
2025-06-10 10:34:49,029 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c14c8147-4d77-45ab-af30-bcbf1da37a64', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1660 calorie with 30 % carbs , 30% fats and 40% protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-10 10:34:49,032 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 10:34:49,032 [DEBUG] close.started
2025-06-10 10:34:49,033 [DEBUG] close.complete
2025-06-10 10:34:49,033 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-10 10:34:49,157 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014591EFDB10>
2025-06-10 10:34:49,157 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001459152FC80> server_hostname='api.openai.com' timeout=5.0
2025-06-10 10:34:49,212 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014591EE2050>
2025-06-10 10:34:49,213 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 10:34:49,214 [DEBUG] send_request_headers.complete
2025-06-10 10:34:49,214 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 10:34:49,215 [DEBUG] send_request_body.complete
2025-06-10 10:34:49,215 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 10:34:51,464 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 05:04:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'865'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'868'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_d66ed00886f5d423f180ed22ed64383e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=WC_nEMpyTPIaAPzWwP1VtqvcIKAQYy8sMag.4xxHBCg-1749531893-1.0.1.1-wrpXWnaH3s.uZgZiSOIDo6XwZYvueZPT2fuhUcx7Ly_gAv6j29o7TeCyfVBhJTY.QB7IESVnlZMdYEY11tvHy8484xo_780oxAx6re7gpZA; path=/; expires=Tue, 10-Jun-25 05:34:53 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d6549049438577-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 10:34:51,466 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 10:34:51,467 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 10:34:51,467 [DEBUG] receive_response_body.complete
2025-06-10 10:34:51,468 [DEBUG] response_closed.started
2025-06-10 10:34:51,468 [DEBUG] response_closed.complete
2025-06-10 10:34:51,469 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 05:04:53 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '865', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '868', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_d66ed00886f5d423f180ed22ed64383e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=WC_nEMpyTPIaAPzWwP1VtqvcIKAQYy8sMag.4xxHBCg-1749531893-1.0.1.1-wrpXWnaH3s.uZgZiSOIDo6XwZYvueZPT2fuhUcx7Ly_gAv6j29o7TeCyfVBhJTY.QB7IESVnlZMdYEY11tvHy8484xo_780oxAx6re7gpZA; path=/; expires=Tue, 10-Jun-25 05:34:53 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d6549049438577-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-10 10:34:51,470 [DEBUG] request_id: req_d66ed00886f5d423f180ed22ed64383e
2025-06-10 10:34:51,471 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1660,
  "protein_pct": 40,
  "carbs_pct": 30,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-10 10:34:51,472 [INFO]  Extracted Params: {'calories_target': 1660, 'protein_pct': 40, 'carbs_pct': 30, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-10 10:34:51,495 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a569a948-7707-4b0c-91ab-476396fb557d', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1623.0 kcal\nProtein: 166.0 g\nCarbs: 124.4 g\nFat: 55.3 g\nFiber: 34.9 g\nSugar: 25.0 g\nSodium: 1103.7 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-10 10:34:51,497 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 10:34:51,497 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 10:34:51,498 [DEBUG] send_request_headers.complete
2025-06-10 10:34:51,499 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 10:34:51,499 [DEBUG] send_request_body.complete
2025-06-10 10:34:51,500 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 10:34:57,278 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 05:04:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'5106'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5114'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29852'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'296ms'), (b'x-request-id', b'req_0a71d44860e3cf0cf6d54606e22e8177'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d6549e9b9a8577-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 10:34:57,280 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 10:34:57,281 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 10:34:57,281 [DEBUG] receive_response_body.complete
2025-06-10 10:34:57,281 [DEBUG] response_closed.started
2025-06-10 10:34:57,282 [DEBUG] response_closed.complete
2025-06-10 10:34:57,282 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 05:04:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '5106', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5114', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29852', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '296ms', 'x-request-id': 'req_0a71d44860e3cf0cf6d54606e22e8177', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d6549e9b9a8577-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-10 10:34:57,283 [DEBUG] request_id: req_0a71d44860e3cf0cf6d54606e22e8177
2025-06-10 10:34:57,285 [INFO]  Meal plan generated with 5 dishes
2025-06-10 10:34:57,285 [INFO] 127.0.0.1 - - [10/Jun/2025 10:34:57] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-10 10:36:15,608 [INFO] Received Input: give me meal for 1660 calorie 
2025-06-10 10:36:15,613 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-fbab5517-cc20-42f5-8bf9-d76761cebeb5', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1660 calorie '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-10 10:36:15,615 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 10:36:15,616 [DEBUG] close.started
2025-06-10 10:36:15,616 [DEBUG] close.complete
2025-06-10 10:36:15,617 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-10 10:36:15,723 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014591EFE410>
2025-06-10 10:36:15,723 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001459152FC80> server_hostname='api.openai.com' timeout=5.0
2025-06-10 10:36:15,765 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014591EFFFD0>
2025-06-10 10:36:15,766 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 10:36:15,767 [DEBUG] send_request_headers.complete
2025-06-10 10:36:15,767 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 10:36:15,768 [DEBUG] send_request_body.complete
2025-06-10 10:36:15,768 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 10:36:17,696 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 05:06:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1616'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1677'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29921'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'158ms'), (b'x-request-id', b'req_9ef0f836be9e9d71314b6ee214a6e7cd'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d656ad3db0857e-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 10:36:17,698 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 10:36:17,698 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 10:36:17,699 [DEBUG] receive_response_body.complete
2025-06-10 10:36:17,699 [DEBUG] response_closed.started
2025-06-10 10:36:17,700 [DEBUG] response_closed.complete
2025-06-10 10:36:17,700 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 05:06:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1616', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1677', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29921', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '158ms', 'x-request-id': 'req_9ef0f836be9e9d71314b6ee214a6e7cd', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d656ad3db0857e-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-10 10:36:17,701 [DEBUG] request_id: req_9ef0f836be9e9d71314b6ee214a6e7cd
2025-06-10 10:36:17,703 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1660,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-10 10:36:17,705 [INFO]  Extracted Params: {'calories_target': 1660, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-10 10:36:17,727 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-61ec1412-40f2-4bf4-ab8e-4584777b1104', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1532.0 kcal\nProtein: 83.0 g\nCarbs: 207.5 g\nFat: 55.4 g\nFiber: 51.4 g\nSugar: 4.7 g\nSodium: 471.3 mg\n\nRecommended Meals:\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-10 10:36:17,729 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 10:36:17,729 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 10:36:17,730 [DEBUG] send_request_headers.complete
2025-06-10 10:36:17,730 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 10:36:17,731 [DEBUG] send_request_body.complete
2025-06-10 10:36:17,731 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 10:36:22,564 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 05:06:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4357'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4457'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29841'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'318ms'), (b'x-request-id', b'req_39c7299d4dcfe5e1331c6bff87fbc837'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d656b9ad1f857e-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 10:36:22,566 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 10:36:22,566 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 10:36:22,567 [DEBUG] receive_response_body.complete
2025-06-10 10:36:22,567 [DEBUG] response_closed.started
2025-06-10 10:36:22,568 [DEBUG] response_closed.complete
2025-06-10 10:36:22,568 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 05:06:24 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4357', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4457', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29841', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '318ms', 'x-request-id': 'req_39c7299d4dcfe5e1331c6bff87fbc837', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d656b9ad1f857e-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-10 10:36:22,570 [DEBUG] request_id: req_39c7299d4dcfe5e1331c6bff87fbc837
2025-06-10 10:36:22,571 [INFO]  Meal plan generated with 6 dishes
2025-06-10 10:36:22,572 [INFO] 127.0.0.1 - - [10/Jun/2025 10:36:22] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-10 10:37:20,664 [INFO] Received Input: give me meal for 1660 calorie 
2025-06-10 10:37:20,665 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-32bcc01c-b980-4acf-af0b-6cce3a8a9c20', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1660 calorie '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-10 10:37:20,667 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 10:37:20,667 [DEBUG] close.started
2025-06-10 10:37:20,668 [DEBUG] close.complete
2025-06-10 10:37:20,668 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-10 10:37:20,762 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014591F08110>
2025-06-10 10:37:20,762 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001459152FC80> server_hostname='api.openai.com' timeout=5.0
2025-06-10 10:37:20,811 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014591F0A010>
2025-06-10 10:37:20,811 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 10:37:20,812 [DEBUG] send_request_headers.complete
2025-06-10 10:37:20,812 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 10:37:20,813 [DEBUG] send_request_body.complete
2025-06-10 10:37:20,814 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 10:37:29,084 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 05:07:31 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1974'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'7543'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29921'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'158ms'), (b'x-request-id', b'req_481239cc11569d1ab2d8920d47eee2eb'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d65843cdf185f7-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 10:37:29,086 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 10:37:29,086 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 10:37:29,094 [DEBUG] receive_response_body.complete
2025-06-10 10:37:29,094 [DEBUG] response_closed.started
2025-06-10 10:37:29,095 [DEBUG] response_closed.complete
2025-06-10 10:37:29,095 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 05:07:31 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1974', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '7543', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29921', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '158ms', 'x-request-id': 'req_481239cc11569d1ab2d8920d47eee2eb', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d65843cdf185f7-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-10 10:37:29,096 [DEBUG] request_id: req_481239cc11569d1ab2d8920d47eee2eb
2025-06-10 10:37:29,097 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1660,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-10 10:37:29,099 [INFO]  Extracted Params: {'calories_target': 1660, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-10 10:37:29,121 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c200966f-bd8a-4bde-b505-f48fe8157a2b', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1532.0 kcal\nProtein: 83.0 g\nCarbs: 207.5 g\nFat: 55.4 g\nFiber: 51.4 g\nSugar: 4.7 g\nSodium: 471.3 mg\n\nRecommended Meals:\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-10 10:37:29,123 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 10:37:29,123 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 10:37:29,124 [DEBUG] send_request_headers.complete
2025-06-10 10:37:29,124 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 10:37:29,125 [DEBUG] send_request_body.complete
2025-06-10 10:37:29,125 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 10:37:34,022 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 05:07:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4072'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4074'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29841'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'318ms'), (b'x-request-id', b'req_91235ddb741f5891f3324ef37cbedf1e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d65877ff7885f7-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 10:37:34,024 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 10:37:34,025 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 10:37:34,025 [DEBUG] receive_response_body.complete
2025-06-10 10:37:34,026 [DEBUG] response_closed.started
2025-06-10 10:37:34,026 [DEBUG] response_closed.complete
2025-06-10 10:37:34,027 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 05:07:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4072', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4074', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29841', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '318ms', 'x-request-id': 'req_91235ddb741f5891f3324ef37cbedf1e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d65877ff7885f7-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-10 10:37:34,027 [DEBUG] request_id: req_91235ddb741f5891f3324ef37cbedf1e
2025-06-10 10:37:34,029 [INFO]  Meal plan generated with 6 dishes
2025-06-10 10:37:34,029 [INFO] 127.0.0.1 - - [10/Jun/2025 10:37:34] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-10 10:38:46,581 [INFO] Received Input: give me meal for 1660 calorie 
2025-06-10 10:38:46,583 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-14dbadca-e62c-46c6-8765-9e30a454009b', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1660 calorie '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-10 10:38:46,584 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 10:38:46,586 [DEBUG] close.started
2025-06-10 10:38:46,587 [DEBUG] close.complete
2025-06-10 10:38:46,588 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-10 10:38:46,785 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014591EE1410>
2025-06-10 10:38:46,785 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001459152FC80> server_hostname='api.openai.com' timeout=5.0
2025-06-10 10:38:46,865 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014591EE0810>
2025-06-10 10:38:46,866 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 10:38:46,867 [DEBUG] send_request_headers.complete
2025-06-10 10:38:46,867 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 10:38:46,867 [DEBUG] send_request_body.complete
2025-06-10 10:38:46,868 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 10:38:49,359 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 05:08:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1173'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1195'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29921'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'158ms'), (b'x-request-id', b'req_7bd29c310eadf15ab27d60731a42a844'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d65a5dbb1f87ee-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 10:38:49,361 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 10:38:49,362 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 10:38:49,363 [DEBUG] receive_response_body.complete
2025-06-10 10:38:49,363 [DEBUG] response_closed.started
2025-06-10 10:38:49,364 [DEBUG] response_closed.complete
2025-06-10 10:38:49,364 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 05:08:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1173', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1195', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29921', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '158ms', 'x-request-id': 'req_7bd29c310eadf15ab27d60731a42a844', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d65a5dbb1f87ee-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-10 10:38:49,366 [DEBUG] request_id: req_7bd29c310eadf15ab27d60731a42a844
2025-06-10 10:38:49,367 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1660,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-10 10:38:49,369 [INFO]  Extracted Params: {'calories_target': 1660, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-10 10:38:49,393 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-8a53e43d-c41e-431c-9c58-60916ffb17d2', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1532.0 kcal\nProtein: 83.0 g\nCarbs: 207.5 g\nFat: 55.4 g\nFiber: 51.4 g\nSugar: 4.7 g\nSodium: 471.3 mg\n\nRecommended Meals:\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-10 10:38:49,395 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 10:38:49,395 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 10:38:49,396 [DEBUG] send_request_headers.complete
2025-06-10 10:38:49,396 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 10:38:49,397 [DEBUG] send_request_body.complete
2025-06-10 10:38:49,398 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 10:38:53,156 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 05:08:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3361'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3364'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29841'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'318ms'), (b'x-request-id', b'req_c63e094e184826a4f5a40b8a04c9b4b6'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d65a6d8ae787ee-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 10:38:53,158 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 10:38:53,158 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 10:38:53,159 [DEBUG] receive_response_body.complete
2025-06-10 10:38:53,159 [DEBUG] response_closed.started
2025-06-10 10:38:53,160 [DEBUG] response_closed.complete
2025-06-10 10:38:53,160 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 05:08:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3361', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3364', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29841', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '318ms', 'x-request-id': 'req_c63e094e184826a4f5a40b8a04c9b4b6', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d65a6d8ae787ee-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-10 10:38:53,161 [DEBUG] request_id: req_c63e094e184826a4f5a40b8a04c9b4b6
2025-06-10 10:38:53,162 [INFO]  Meal plan generated with 6 dishes
2025-06-10 10:38:53,163 [INFO] 127.0.0.1 - - [10/Jun/2025 10:38:53] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-10 10:42:48,583 [INFO] Received Input: give me meal for 1660 calorie 40% 
2025-06-10 10:42:48,585 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c245ac1a-a23f-41a2-9478-f671483243e8', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1660 calorie 40% '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-10 10:42:48,586 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 10:42:48,588 [DEBUG] close.started
2025-06-10 10:42:48,589 [DEBUG] close.complete
2025-06-10 10:42:48,590 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-10 10:42:48,759 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014591F1CAD0>
2025-06-10 10:42:48,759 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001459152FC80> server_hostname='api.openai.com' timeout=5.0
2025-06-10 10:42:48,808 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014591F1C0D0>
2025-06-10 10:42:48,808 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 10:42:48,809 [DEBUG] send_request_headers.complete
2025-06-10 10:42:48,809 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 10:42:48,810 [DEBUG] send_request_body.complete
2025-06-10 10:42:48,811 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 10:42:48,826 [INFO] Received Input: give me meal for 1660 calorie 40% 
2025-06-10 10:42:48,828 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-40999515-6473-484d-8fad-e6fe5d6a1d96', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1660 calorie 40% '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-10 10:42:48,829 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 10:42:48,830 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-10 10:42:48,858 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014591F1E410>
2025-06-10 10:42:48,859 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001459152FC80> server_hostname='api.openai.com' timeout=5.0
2025-06-10 10:42:48,894 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000014591F1D890>
2025-06-10 10:42:48,895 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 10:42:48,895 [DEBUG] send_request_headers.complete
2025-06-10 10:42:48,896 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 10:42:48,896 [DEBUG] send_request_body.complete
2025-06-10 10:42:48,897 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 10:42:50,242 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 05:12:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1137'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1140'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29920'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'160ms'), (b'x-request-id', b'req_feab0747dcb22891cfb1c96cfef81edd'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d66045db543a1d-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 10:42:50,244 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 10:42:50,244 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 10:42:50,245 [DEBUG] receive_response_body.complete
2025-06-10 10:42:50,246 [DEBUG] response_closed.started
2025-06-10 10:42:50,246 [DEBUG] response_closed.complete
2025-06-10 10:42:50,246 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 05:12:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1137', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1140', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29920', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '160ms', 'x-request-id': 'req_feab0747dcb22891cfb1c96cfef81edd', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d66045db543a1d-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-10 10:42:50,247 [DEBUG] request_id: req_feab0747dcb22891cfb1c96cfef81edd
2025-06-10 10:42:50,249 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1660,
  "protein_pct": 40,
  "carbs_pct": 30,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-10 10:42:50,251 [INFO]  Extracted Params: {'calories_target': 1660, 'protein_pct': 40, 'carbs_pct': 30, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-10 10:42:50,260 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 05:12:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1102'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1106'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29920'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'160ms'), (b'x-request-id', b'req_7372d30490e6cb2b7ffb220537c912da'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d660465d3d84aa-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 10:42:50,262 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 10:42:50,262 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 10:42:50,264 [DEBUG] receive_response_body.complete
2025-06-10 10:42:50,264 [DEBUG] response_closed.started
2025-06-10 10:42:50,265 [DEBUG] response_closed.complete
2025-06-10 10:42:50,266 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 05:12:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1102', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1106', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29920', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '160ms', 'x-request-id': 'req_7372d30490e6cb2b7ffb220537c912da', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d660465d3d84aa-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-10 10:42:50,268 [DEBUG] request_id: req_7372d30490e6cb2b7ffb220537c912da
2025-06-10 10:42:50,279 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ec106e1b-e42b-4ee8-a6bd-4955552ab187', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1623.0 kcal\nProtein: 166.0 g\nCarbs: 124.4 g\nFat: 55.3 g\nFiber: 34.9 g\nSugar: 25.0 g\nSodium: 1103.7 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-10 10:42:50,280 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1660,
  "protein_pct": 40,
  "carbs_pct": 30,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-10 10:42:50,282 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 10:42:50,284 [INFO]  Extracted Params: {'calories_target': 1660, 'protein_pct': 40, 'carbs_pct': 30, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-10 10:42:50,284 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 10:42:50,289 [DEBUG] send_request_headers.complete
2025-06-10 10:42:50,290 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 10:42:50,293 [DEBUG] send_request_body.complete
2025-06-10 10:42:50,294 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 10:42:50,311 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f315847d-3068-45dc-909d-4dc23e218cea', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1623.0 kcal\nProtein: 166.0 g\nCarbs: 124.4 g\nFat: 55.3 g\nFiber: 34.9 g\nSugar: 25.0 g\nSodium: 1103.7 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-10 10:42:50,312 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-10 10:42:50,313 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-10 10:42:50,314 [DEBUG] send_request_headers.complete
2025-06-10 10:42:50,314 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-10 10:42:50,315 [DEBUG] send_request_body.complete
2025-06-10 10:42:50,315 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-10 10:42:54,040 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 05:12:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3476'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3485'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29852'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'296ms'), (b'x-request-id', b'req_7e0661416ba9d22b101f97108d4f2d45'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d6604f1f423a1d-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 10:42:54,041 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 10:42:54,042 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 10:42:54,045 [DEBUG] receive_response_body.complete
2025-06-10 10:42:54,045 [DEBUG] response_closed.started
2025-06-10 10:42:54,046 [DEBUG] response_closed.complete
2025-06-10 10:42:54,046 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 05:12:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3476', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3485', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29852', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '296ms', 'x-request-id': 'req_7e0661416ba9d22b101f97108d4f2d45', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d6604f1f423a1d-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-10 10:42:54,048 [DEBUG] request_id: req_7e0661416ba9d22b101f97108d4f2d45
2025-06-10 10:42:54,048 [INFO]  Meal plan generated with 5 dishes
2025-06-10 10:42:54,049 [INFO] 127.0.0.1 - - [10/Jun/2025 10:42:54] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-10 10:42:54,994 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 10 Jun 2025 05:12:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4383'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4407'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29852'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'296ms'), (b'x-request-id', b'req_b368fd0aaa8a578d641eb171374f502f'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94d6604f39f784aa-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-10 10:42:54,996 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-10 10:42:54,996 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-10 10:42:55,003 [DEBUG] receive_response_body.complete
2025-06-10 10:42:55,004 [DEBUG] response_closed.started
2025-06-10 10:42:55,004 [DEBUG] response_closed.complete
2025-06-10 10:42:55,005 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 10 Jun 2025 05:12:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4383', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4407', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29852', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '296ms', 'x-request-id': 'req_b368fd0aaa8a578d641eb171374f502f', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94d6604f39f784aa-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-10 10:42:55,006 [DEBUG] request_id: req_b368fd0aaa8a578d641eb171374f502f
2025-06-10 10:42:55,008 [INFO]  Meal plan generated with 5 dishes
2025-06-10 10:42:55,008 [INFO] 127.0.0.1 - - [10/Jun/2025 10:42:55] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-10 10:44:43,109 [INFO] 127.0.0.1 - - [10/Jun/2025 10:44:43] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:37:06,075 [INFO] CSV loaded successfully.
2025-06-11 10:37:06,155 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-06-11 10:37:06,155 [INFO] [33mPress CTRL+C to quit[0m
2025-06-11 10:37:06,158 [INFO]  * Restarting with stat
2025-06-11 10:37:09,133 [INFO] CSV loaded successfully.
2025-06-11 10:37:09,179 [WARNING]  * Debugger is active!
2025-06-11 10:37:09,184 [INFO]  * Debugger PIN: 461-893-414
2025-06-11 10:37:12,917 [INFO] 127.0.0.1 - - [11/Jun/2025 10:37:12] "GET / HTTP/1.1" 200 -
2025-06-11 10:37:13,153 [INFO] 127.0.0.1 - - [11/Jun/2025 10:37:13] "GET /static/css/main.css HTTP/1.1" 200 -
2025-06-11 10:37:14,694 [INFO] 127.0.0.1 - - [11/Jun/2025 10:37:14] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:38:11,687 [INFO] Received Input: give me meal for 1660 calories with 60 % protein , 30 % fats and 20 % carbs
2025-06-11 10:38:12,248 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-440aa36f-459f-41ac-a397-5041de86aa8e', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1660 calories with 60 % protein , 30 % fats and 20 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 10:38:12,263 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:38:12,263 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 10:38:12,472 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AEE32990>
2025-06-11 10:38:12,472 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E9AE7FFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 10:38:12,764 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AEE33990>
2025-06-11 10:38:12,765 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:38:12,766 [DEBUG] send_request_headers.complete
2025-06-11 10:38:12,766 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:38:12,767 [DEBUG] send_request_body.complete
2025-06-11 10:38:12,767 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:38:14,796 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:08:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'891'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'899'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_86059c9e6fdeffe112269afe30e01237'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=D7U92aD1zm1hTWh0y.XtQfij2hkqDcjuuGjpq0aMYIQ-1749618495-1.0.1.1-stXPIIhqmOAoMEvFaGvKqkgoyj46vJYE.R24WrbTZWs4mIO6WIMOiODMdvWg90GNYs6KexMsTVUUaeVJxu8G4MKkU0Oiidw.CapVVX7Zovw; path=/; expires=Wed, 11-Jun-25 05:38:15 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=1XP66LSpCTfrIsyf9HBLJemS6BJLd7cwnANMb66hidQ-1749618495693-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de96e22aa43a3f-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:38:14,799 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:38:14,801 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:38:14,940 [DEBUG] receive_response_body.complete
2025-06-11 10:38:14,940 [DEBUG] response_closed.started
2025-06-11 10:38:14,941 [DEBUG] response_closed.complete
2025-06-11 10:38:14,942 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Wed, 11 Jun 2025 05:08:15 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '891'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '899'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29910'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '180ms'), ('x-request-id', 'req_86059c9e6fdeffe112269afe30e01237'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=D7U92aD1zm1hTWh0y.XtQfij2hkqDcjuuGjpq0aMYIQ-1749618495-1.0.1.1-stXPIIhqmOAoMEvFaGvKqkgoyj46vJYE.R24WrbTZWs4mIO6WIMOiODMdvWg90GNYs6KexMsTVUUaeVJxu8G4MKkU0Oiidw.CapVVX7Zovw; path=/; expires=Wed, 11-Jun-25 05:38:15 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=1XP66LSpCTfrIsyf9HBLJemS6BJLd7cwnANMb66hidQ-1749618495693-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94de96e22aa43a3f-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-11 10:38:14,943 [DEBUG] request_id: req_86059c9e6fdeffe112269afe30e01237
2025-06-11 10:38:14,952 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1660,
  "protein_pct": 60,
  "carbs_pct": 20,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 10:38:14,953 [INFO]  Extracted Params: {'calories_target': 1660, 'protein_pct': 60, 'carbs_pct': 20, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 10:38:14,990 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-83e8b5cc-66da-4203-872c-232c1635cea4', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2146.0 kcal\nProtein: 248.9 g\nCarbs: 82.9 g\nFat: 91.1 g\nFiber: 24.9 g\nSugar: 25.0 g\nSodium: 2281.5 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRasam powder (Rasam masala) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 10:38:14,992 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:38:14,993 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:38:14,994 [DEBUG] send_request_headers.complete
2025-06-11 10:38:14,994 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:38:14,995 [DEBUG] send_request_body.complete
2025-06-11 10:38:14,996 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:38:19,289 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:08:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3920'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3923'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_e609152788fc31759bc2052724933cfc'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de96f00e213a3f-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:38:19,291 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:38:19,292 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:38:19,293 [DEBUG] receive_response_body.complete
2025-06-11 10:38:19,293 [DEBUG] response_closed.started
2025-06-11 10:38:19,294 [DEBUG] response_closed.complete
2025-06-11 10:38:19,294 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:08:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3920', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3923', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_e609152788fc31759bc2052724933cfc', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94de96f00e213a3f-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:38:19,296 [DEBUG] request_id: req_e609152788fc31759bc2052724933cfc
2025-06-11 10:38:19,298 [INFO]  Meal plan generated with 9 dishes
2025-06-11 10:38:19,299 [INFO] 127.0.0.1 - - [11/Jun/2025 10:38:19] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 10:38:45,664 [INFO] Received Input: give me meal for 1660 calories with 60 % protein , 30 % fats and 20 % carbs
2025-06-11 10:38:45,666 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-81288d0f-7635-46a0-9cd1-5b371d076a0e', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1660 calories with 60 % protein , 30 % fats and 20 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 10:38:45,668 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:38:45,669 [DEBUG] close.started
2025-06-11 10:38:45,671 [DEBUG] close.complete
2025-06-11 10:38:45,672 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 10:38:45,704 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AF1979D0>
2025-06-11 10:38:45,704 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E9AE7FFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 10:38:45,771 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AEE33BD0>
2025-06-11 10:38:45,772 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:38:45,772 [DEBUG] send_request_headers.complete
2025-06-11 10:38:45,773 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:38:45,773 [DEBUG] send_request_body.complete
2025-06-11 10:38:45,774 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:38:47,295 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:08:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'848'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'854'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_04c6a0054b9fdc00927d79896e0bf470'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de97b0396585eb-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:38:47,297 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:38:47,297 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:38:47,300 [DEBUG] receive_response_body.complete
2025-06-11 10:38:47,300 [DEBUG] response_closed.started
2025-06-11 10:38:47,301 [DEBUG] response_closed.complete
2025-06-11 10:38:47,302 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:08:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '848', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '854', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_04c6a0054b9fdc00927d79896e0bf470', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94de97b0396585eb-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:38:47,304 [DEBUG] request_id: req_04c6a0054b9fdc00927d79896e0bf470
2025-06-11 10:38:47,305 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1660,
  "protein_pct": 60,
  "carbs_pct": 20,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 10:38:47,308 [INFO]  Extracted Params: {'calories_target': 1660, 'protein_pct': 60, 'carbs_pct': 20, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 10:38:47,340 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-fa7a40c6-00ec-4026-9eb4-1c26aee6ca72', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2146.0 kcal\nProtein: 248.9 g\nCarbs: 82.9 g\nFat: 91.1 g\nFiber: 24.9 g\nSugar: 25.0 g\nSodium: 2281.5 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRasam powder (Rasam masala) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 10:38:47,342 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:38:47,343 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:38:47,344 [DEBUG] send_request_headers.complete
2025-06-11 10:38:47,346 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:38:47,347 [DEBUG] send_request_body.complete
2025-06-11 10:38:47,348 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:38:50,911 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:08:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3235'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3238'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_f9ca848c0392656cb2b8d916227e17ac'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de97ba0b6985eb-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:38:50,912 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:38:50,913 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:38:50,914 [DEBUG] receive_response_body.complete
2025-06-11 10:38:50,914 [DEBUG] response_closed.started
2025-06-11 10:38:50,915 [DEBUG] response_closed.complete
2025-06-11 10:38:50,915 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:08:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3235', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3238', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_f9ca848c0392656cb2b8d916227e17ac', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94de97ba0b6985eb-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:38:50,918 [DEBUG] request_id: req_f9ca848c0392656cb2b8d916227e17ac
2025-06-11 10:38:50,919 [INFO]  Meal plan generated with 9 dishes
2025-06-11 10:38:50,920 [INFO] 127.0.0.1 - - [11/Jun/2025 10:38:50] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 10:39:47,289 [INFO] Received Input: give me meal for 1660 calories with 60 % protein , 30 % fats and 20 % carbs
2025-06-11 10:39:47,290 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-38cc01c2-f5e2-473a-902c-cb1e26874bf3', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1660 calories with 60 % protein , 30 % fats and 20 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 10:39:47,293 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:39:47,294 [DEBUG] close.started
2025-06-11 10:39:47,296 [DEBUG] close.complete
2025-06-11 10:39:47,296 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 10:39:47,378 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AF1940D0>
2025-06-11 10:39:47,379 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E9AE7FFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 10:39:47,446 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AF1B2610>
2025-06-11 10:39:47,447 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:39:47,447 [DEBUG] send_request_headers.complete
2025-06-11 10:39:47,448 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:39:47,448 [DEBUG] send_request_body.complete
2025-06-11 10:39:47,449 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:39:47,472 [INFO] Received Input: give me meal for 1660 calories with 60 % protein , 30 % fats and 20 % carbs
2025-06-11 10:39:47,475 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-8367fa82-3b66-4e7f-a038-665366f4f537', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1660 calories with 60 % protein , 30 % fats and 20 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 10:39:47,477 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:39:47,478 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 10:39:47,536 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AF1C9F50>
2025-06-11 10:39:47,536 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E9AE7FFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 10:39:47,591 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AF1C9C50>
2025-06-11 10:39:47,593 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:39:47,594 [DEBUG] send_request_headers.complete
2025-06-11 10:39:47,595 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:39:47,595 [DEBUG] send_request_body.complete
2025-06-11 10:39:47,596 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:39:48,887 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:09:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'793'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'829'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_ded2fda52452f33794fc76cc79820f48'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de9932ea0d3c88-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:39:48,889 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:39:48,890 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:39:48,891 [DEBUG] receive_response_body.complete
2025-06-11 10:39:48,893 [DEBUG] response_closed.started
2025-06-11 10:39:48,893 [DEBUG] response_closed.complete
2025-06-11 10:39:48,894 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:09:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '793', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '829', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_ded2fda52452f33794fc76cc79820f48', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94de9932ea0d3c88-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:39:48,896 [DEBUG] request_id: req_ded2fda52452f33794fc76cc79820f48
2025-06-11 10:39:48,896 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1660,
  "protein_pct": 60,
  "carbs_pct": 20,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 10:39:48,898 [INFO]  Extracted Params: {'calories_target': 1660, 'protein_pct': 60, 'carbs_pct': 20, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 10:39:48,931 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b7e3f5f0-c66b-4f96-ac00-801ecfa26d77', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2146.0 kcal\nProtein: 248.9 g\nCarbs: 82.9 g\nFat: 91.1 g\nFiber: 24.9 g\nSugar: 25.0 g\nSodium: 2281.5 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRasam powder (Rasam masala) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 10:39:48,996 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:39:48,997 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:39:48,998 [DEBUG] send_request_headers.complete
2025-06-11 10:39:48,998 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:39:48,999 [DEBUG] send_request_body.complete
2025-06-11 10:39:49,018 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:39:50,008 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:09:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1542'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1546'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_979b9325d5550dc40b74ccb4cc06bdd2'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de9931bd188afa-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:39:50,010 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:39:50,011 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:39:50,012 [DEBUG] receive_response_body.complete
2025-06-11 10:39:50,012 [DEBUG] response_closed.started
2025-06-11 10:39:50,012 [DEBUG] response_closed.complete
2025-06-11 10:39:50,013 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:09:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1542', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1546', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_979b9325d5550dc40b74ccb4cc06bdd2', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94de9931bd188afa-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:39:50,015 [DEBUG] request_id: req_979b9325d5550dc40b74ccb4cc06bdd2
2025-06-11 10:39:50,016 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1660,
  "protein_pct": 60,
  "carbs_pct": 20,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 10:39:50,018 [INFO]  Extracted Params: {'calories_target': 1660, 'protein_pct': 60, 'carbs_pct': 20, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 10:39:50,054 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1d5d0bf2-b31e-434e-97d1-3955da1baa7e', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2146.0 kcal\nProtein: 248.9 g\nCarbs: 82.9 g\nFat: 91.1 g\nFiber: 24.9 g\nSugar: 25.0 g\nSodium: 2281.5 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRasam powder (Rasam masala) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 10:39:50,056 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:39:50,058 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:39:50,059 [DEBUG] send_request_headers.complete
2025-06-11 10:39:50,061 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:39:50,061 [DEBUG] send_request_body.complete
2025-06-11 10:39:50,062 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:39:53,848 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:09:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4458'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4463'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_499c550222b68fd9830187c365d76ae9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de993bac4c3c88-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:39:53,850 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:39:53,850 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:39:53,851 [DEBUG] receive_response_body.complete
2025-06-11 10:39:53,852 [DEBUG] response_closed.started
2025-06-11 10:39:53,852 [DEBUG] response_closed.complete
2025-06-11 10:39:53,852 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:09:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4458', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4463', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_499c550222b68fd9830187c365d76ae9', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94de993bac4c3c88-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:39:53,854 [DEBUG] request_id: req_499c550222b68fd9830187c365d76ae9
2025-06-11 10:39:53,856 [INFO]  Meal plan generated with 9 dishes
2025-06-11 10:39:53,857 [INFO] 127.0.0.1 - - [11/Jun/2025 10:39:53] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 10:39:54,459 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:09:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3642'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4009'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_cd3c718756f48effb9cd7d203658f8ee'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de994238928afa-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:39:54,462 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:39:54,463 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:39:54,463 [DEBUG] receive_response_body.complete
2025-06-11 10:39:54,464 [DEBUG] response_closed.started
2025-06-11 10:39:54,464 [DEBUG] response_closed.complete
2025-06-11 10:39:54,465 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:09:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3642', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4009', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_cd3c718756f48effb9cd7d203658f8ee', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94de994238928afa-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:39:54,467 [DEBUG] request_id: req_cd3c718756f48effb9cd7d203658f8ee
2025-06-11 10:39:54,468 [INFO]  Meal plan generated with 9 dishes
2025-06-11 10:39:54,469 [INFO] 127.0.0.1 - - [11/Jun/2025 10:39:54] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 10:41:08,618 [INFO] Received Input: give me meal for 1660 calories with 60 % protein , 30 % fats and 20 % carbs
2025-06-11 10:41:08,624 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c9a7e827-c066-4079-95a4-6df9bf376e75', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1660 calories with 60 % protein , 30 % fats and 20 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 10:41:08,628 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:41:08,629 [DEBUG] close.started
2025-06-11 10:41:08,630 [DEBUG] close.complete
2025-06-11 10:41:08,631 [DEBUG] close.started
2025-06-11 10:41:08,632 [DEBUG] close.complete
2025-06-11 10:41:08,632 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 10:41:09,618 [INFO] Received Input: give me meal for 1660 calories with 60 % protein , 30 % fats and 20 % carbs
2025-06-11 10:41:09,619 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-72d8944b-491b-410d-a556-0e6c74f366a2', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1660 calories with 60 % protein , 30 % fats and 20 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 10:41:09,624 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:41:09,625 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 10:41:09,728 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AF1C8A10>
2025-06-11 10:41:09,728 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E9AE7FFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 10:41:09,744 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AF1ABD10>
2025-06-11 10:41:09,745 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E9AE7FFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 10:41:09,849 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AF1B3190>
2025-06-11 10:41:09,850 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:41:09,851 [DEBUG] send_request_headers.complete
2025-06-11 10:41:09,851 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:41:09,852 [DEBUG] send_request_body.complete
2025-06-11 10:41:09,853 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:41:09,872 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AF1A8E50>
2025-06-11 10:41:09,874 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:41:09,875 [DEBUG] send_request_headers.complete
2025-06-11 10:41:09,876 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:41:09,877 [DEBUG] send_request_body.complete
2025-06-11 10:41:09,877 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:41:11,556 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:11:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1018'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1167'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_8af622c0d00598e2f5313ff69b9aa25e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de9b354c458593-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:41:11,559 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:41:11,559 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:41:11,562 [DEBUG] receive_response_body.complete
2025-06-11 10:41:11,563 [DEBUG] response_closed.started
2025-06-11 10:41:11,564 [DEBUG] response_closed.complete
2025-06-11 10:41:11,565 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:11:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1018', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1167', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_8af622c0d00598e2f5313ff69b9aa25e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94de9b354c458593-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:41:11,569 [DEBUG] request_id: req_8af622c0d00598e2f5313ff69b9aa25e
2025-06-11 10:41:11,571 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1660,
  "protein_pct": 60,
  "carbs_pct": 20,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 10:41:11,575 [INFO]  Extracted Params: {'calories_target': 1660, 'protein_pct': 60, 'carbs_pct': 20, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 10:41:11,583 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:11:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'875'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'879'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_be71622dd50030ab42963262399b9df5'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de9b35b876b1e3-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:41:11,609 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:41:11,610 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:41:11,611 [DEBUG] receive_response_body.complete
2025-06-11 10:41:11,617 [DEBUG] response_closed.started
2025-06-11 10:41:11,628 [DEBUG] response_closed.complete
2025-06-11 10:41:11,634 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-0b0b877b-fcb0-4046-ae8e-915c1e1eb23b', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2146.0 kcal\nProtein: 248.9 g\nCarbs: 82.9 g\nFat: 91.1 g\nFiber: 24.9 g\nSugar: 25.0 g\nSodium: 2281.5 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRasam powder (Rasam masala) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 10:41:11,635 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:11:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '875', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '879', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_be71622dd50030ab42963262399b9df5', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94de9b35b876b1e3-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:41:11,648 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:41:11,650 [DEBUG] request_id: req_be71622dd50030ab42963262399b9df5
2025-06-11 10:41:11,651 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:41:11,653 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1660,
  "protein_pct": 60,
  "carbs_pct": 20,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 10:41:11,657 [DEBUG] send_request_headers.complete
2025-06-11 10:41:11,660 [INFO]  Extracted Params: {'calories_target': 1660, 'protein_pct': 60, 'carbs_pct': 20, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 10:41:11,660 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:41:11,668 [DEBUG] send_request_body.complete
2025-06-11 10:41:11,681 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:41:11,723 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-105d2e9c-7ce4-4af7-a272-fbbf6c25a3d8', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2146.0 kcal\nProtein: 248.9 g\nCarbs: 82.9 g\nFat: 91.1 g\nFiber: 24.9 g\nSugar: 25.0 g\nSodium: 2281.5 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRasam powder (Rasam masala) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 10:41:11,728 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:41:11,729 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:41:11,730 [DEBUG] send_request_headers.complete
2025-06-11 10:41:11,730 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:41:11,731 [DEBUG] send_request_body.complete
2025-06-11 10:41:11,731 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:41:12,560 [INFO] 127.0.0.1 - - [11/Jun/2025 10:41:12] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:41:13,368 [INFO] 127.0.0.1 - - [11/Jun/2025 10:41:13] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:41:13,743 [INFO] 127.0.0.1 - - [11/Jun/2025 10:41:13] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:41:15,994 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:11:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3529'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3534'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_7ba6b308877ee22a1abc640d3b006b83'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de9b42ceff8593-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:41:15,996 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:41:15,997 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:41:16,003 [DEBUG] receive_response_body.complete
2025-06-11 10:41:16,004 [DEBUG] response_closed.started
2025-06-11 10:41:16,004 [DEBUG] response_closed.complete
2025-06-11 10:41:16,008 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:11:16 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3529', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3534', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_7ba6b308877ee22a1abc640d3b006b83', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94de9b42ceff8593-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:41:16,010 [DEBUG] request_id: req_7ba6b308877ee22a1abc640d3b006b83
2025-06-11 10:41:16,011 [INFO]  Meal plan generated with 9 dishes
2025-06-11 10:41:16,014 [INFO] 127.0.0.1 - - [11/Jun/2025 10:41:16] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 10:41:16,898 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:11:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4277'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4281'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_90f24e612a54698cd70d251848849fff'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de9b44192db1e3-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:41:16,917 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:41:16,944 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:41:16,946 [DEBUG] receive_response_body.complete
2025-06-11 10:41:16,949 [DEBUG] response_closed.started
2025-06-11 10:41:16,950 [DEBUG] response_closed.complete
2025-06-11 10:41:16,951 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:11:17 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4277', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4281', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_90f24e612a54698cd70d251848849fff', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94de9b44192db1e3-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:41:16,979 [DEBUG] request_id: req_90f24e612a54698cd70d251848849fff
2025-06-11 10:41:16,981 [INFO]  Meal plan generated with 9 dishes
2025-06-11 10:41:16,982 [INFO] 127.0.0.1 - - [11/Jun/2025 10:41:16] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 10:42:00,600 [INFO] Received Input: give me meal for 1660 calories with 50 % fats , 30 % protein and 20 % carbs 
2025-06-11 10:42:00,604 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-91c5d6d9-4564-4038-a00f-c4d89494d189', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1660 calories with 50 % fats , 30 % protein and 20 % carbs '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 10:42:00,605 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:42:00,606 [DEBUG] close.started
2025-06-11 10:42:00,606 [DEBUG] close.complete
2025-06-11 10:42:00,609 [DEBUG] close.started
2025-06-11 10:42:00,610 [DEBUG] close.complete
2025-06-11 10:42:00,611 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 10:42:00,680 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AF1D6ED0>
2025-06-11 10:42:00,680 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E9AE7FFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 10:42:00,761 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AF1D4B10>
2025-06-11 10:42:00,761 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:42:00,762 [DEBUG] send_request_headers.complete
2025-06-11 10:42:00,762 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:42:00,763 [DEBUG] send_request_body.complete
2025-06-11 10:42:00,763 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:42:01,839 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:12:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'675'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'679'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29909'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'182ms'), (b'x-request-id', b'req_bfc840c6766f6f63a41c9a47c28e2fcb'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de9c730f87471c-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:42:01,841 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:42:01,841 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:42:01,844 [DEBUG] receive_response_body.complete
2025-06-11 10:42:01,845 [DEBUG] response_closed.started
2025-06-11 10:42:01,845 [DEBUG] response_closed.complete
2025-06-11 10:42:01,846 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:12:02 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '675', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '679', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29909', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '182ms', 'x-request-id': 'req_bfc840c6766f6f63a41c9a47c28e2fcb', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94de9c730f87471c-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:42:01,847 [DEBUG] request_id: req_bfc840c6766f6f63a41c9a47c28e2fcb
2025-06-11 10:42:01,848 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1660,
  "protein_pct": 30,
  "carbs_pct": 20,
  "fat_pct": 50,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 10:42:01,850 [INFO]  Extracted Params: {'calories_target': 1660, 'protein_pct': 30, 'carbs_pct': 20, 'fat_pct': 50, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 10:42:01,878 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d36e15c1-e965-4334-88c6-e04eb12d4e10', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1568.0 kcal\nProtein: 124.5 g\nCarbs: 83.0 g\nFat: 92.2 g\nFiber: 36.3 g\nSugar: 3.3 g\nSodium: 391.6 mg\n\nRecommended Meals:\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 10:42:01,879 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:42:01,880 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:42:01,881 [DEBUG] send_request_headers.complete
2025-06-11 10:42:01,881 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:42:01,882 [DEBUG] send_request_body.complete
2025-06-11 10:42:01,882 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:42:05,369 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:12:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3045'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3056'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29853'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'294ms'), (b'x-request-id', b'req_e797f6f94958236cd87e72069a0a3117'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de9c7a0809471c-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:42:05,371 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:42:05,371 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:42:05,372 [DEBUG] receive_response_body.complete
2025-06-11 10:42:05,372 [DEBUG] response_closed.started
2025-06-11 10:42:05,373 [DEBUG] response_closed.complete
2025-06-11 10:42:05,373 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:12:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3045', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3056', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29853', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '294ms', 'x-request-id': 'req_e797f6f94958236cd87e72069a0a3117', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94de9c7a0809471c-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:42:05,375 [DEBUG] request_id: req_e797f6f94958236cd87e72069a0a3117
2025-06-11 10:42:05,377 [INFO]  Meal plan generated with 5 dishes
2025-06-11 10:42:05,378 [INFO] 127.0.0.1 - - [11/Jun/2025 10:42:05] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 10:42:35,322 [INFO] Received Input: give me meal for 1660 calories with 50 % fats , 30 % protein and 20 % carbs 
2025-06-11 10:42:35,324 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-68ff0368-f8fd-43bc-99a0-2e3c6a5769f1', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1660 calories with 50 % fats , 30 % protein and 20 % carbs '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 10:42:35,326 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:42:35,327 [DEBUG] close.started
2025-06-11 10:42:35,328 [DEBUG] close.complete
2025-06-11 10:42:35,329 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 10:42:35,431 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AF1E68D0>
2025-06-11 10:42:35,432 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001E9AE7FFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 10:42:35,485 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001E9AF1E6D90>
2025-06-11 10:42:35,492 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:42:35,493 [DEBUG] send_request_headers.complete
2025-06-11 10:42:35,494 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:42:35,495 [DEBUG] send_request_body.complete
2025-06-11 10:42:35,497 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:42:36,884 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:12:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1040'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1045'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29909'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'182ms'), (b'x-request-id', b'req_fe3e983eefd4e50cceb5c1839d335cb1'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de9d4c1bd02e32-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:42:36,886 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:42:36,887 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:42:36,888 [DEBUG] receive_response_body.complete
2025-06-11 10:42:36,888 [DEBUG] response_closed.started
2025-06-11 10:42:36,889 [DEBUG] response_closed.complete
2025-06-11 10:42:36,889 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:12:37 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1040', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1045', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29909', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '182ms', 'x-request-id': 'req_fe3e983eefd4e50cceb5c1839d335cb1', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94de9d4c1bd02e32-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:42:36,897 [DEBUG] request_id: req_fe3e983eefd4e50cceb5c1839d335cb1
2025-06-11 10:42:36,899 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1660,
  "protein_pct": 30,
  "carbs_pct": 20,
  "fat_pct": 50,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 10:42:36,912 [INFO]  Extracted Params: {'calories_target': 1660, 'protein_pct': 30, 'carbs_pct': 20, 'fat_pct': 50, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 10:42:36,963 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f1e2920e-21c3-48e1-9e6e-acc5927f162d', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1568.0 kcal\nProtein: 124.5 g\nCarbs: 83.0 g\nFat: 92.2 g\nFiber: 36.3 g\nSugar: 3.3 g\nSodium: 391.6 mg\n\nRecommended Meals:\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 10:42:36,965 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:42:36,965 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:42:36,966 [DEBUG] send_request_headers.complete
2025-06-11 10:42:36,967 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:42:36,970 [DEBUG] send_request_body.complete
2025-06-11 10:42:36,971 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:42:40,084 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:12:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'2792'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2795'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29853'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'294ms'), (b'x-request-id', b'req_1dab52ef0455f94bcf856328a3ccffe6'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94de9d553a0d2e32-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:42:40,086 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:42:40,087 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:42:40,088 [DEBUG] receive_response_body.complete
2025-06-11 10:42:40,088 [DEBUG] response_closed.started
2025-06-11 10:42:40,088 [DEBUG] response_closed.complete
2025-06-11 10:42:40,089 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:12:41 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '2792', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2795', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29853', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '294ms', 'x-request-id': 'req_1dab52ef0455f94bcf856328a3ccffe6', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94de9d553a0d2e32-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:42:40,091 [DEBUG] request_id: req_1dab52ef0455f94bcf856328a3ccffe6
2025-06-11 10:42:40,092 [INFO]  Meal plan generated with 5 dishes
2025-06-11 10:42:40,092 [INFO] 127.0.0.1 - - [11/Jun/2025 10:42:40] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 10:44:58,508 [INFO] CSV loaded successfully.
2025-06-11 10:44:58,570 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-06-11 10:44:58,571 [INFO] [33mPress CTRL+C to quit[0m
2025-06-11 10:44:58,573 [INFO]  * Restarting with stat
2025-06-11 10:45:01,805 [INFO] CSV loaded successfully.
2025-06-11 10:45:01,849 [WARNING]  * Debugger is active!
2025-06-11 10:45:01,857 [INFO]  * Debugger PIN: 461-893-414
2025-06-11 10:45:02,440 [INFO] 127.0.0.1 - - [11/Jun/2025 10:45:02] "GET / HTTP/1.1" 200 -
2025-06-11 10:45:02,698 [INFO] 127.0.0.1 - - [11/Jun/2025 10:45:02] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 10:45:08,510 [INFO] 127.0.0.1 - - [11/Jun/2025 10:45:08] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:45:43,596 [INFO] Received Input: meal for 1234 calorie with 30 % protein , 30 % fats and 40 % carbs
2025-06-11 10:45:44,086 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f78adf81-28d6-441d-8a92-b384c49ab5ab', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: meal for 1234 calorie with 30 % protein , 30 % fats and 40 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 10:45:44,100 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:45:44,101 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 10:45:44,209 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F9552850>
2025-06-11 10:45:44,209 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F2F8F1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 10:45:44,267 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F9552910>
2025-06-11 10:45:44,267 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:45:44,268 [DEBUG] send_request_headers.complete
2025-06-11 10:45:44,269 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:45:44,270 [DEBUG] send_request_body.complete
2025-06-11 10:45:44,270 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:45:45,246 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:15:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'659'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'665'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29912'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'176ms'), (b'x-request-id', b'req_70538e437b4530f442e4a17684f59714'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=xlpqPdg6RmbM89JupU3mWbOlx_HuVZ_kkuVOvNW0mf0-1749618946-1.0.1.1-aiXjxaij4p.8vydZvEFQUqOCODkyUjsj._BhSXNk7W1e0DoolUEgAAw5wzigzlV1yIjO2hzccO8mKVe5RS4tdpJu4zmNNsflajbG.iLoAjg; path=/; expires=Wed, 11-Jun-25 05:45:46 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=X6igVlCLqg3_gAL.pGdZkE0Aj.IsNF0iMfHcfD9PqPw-1749618946166-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94dea1e7cc72ffa6-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:45:45,249 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:45:45,250 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:45:45,251 [DEBUG] receive_response_body.complete
2025-06-11 10:45:45,252 [DEBUG] response_closed.started
2025-06-11 10:45:45,252 [DEBUG] response_closed.complete
2025-06-11 10:45:45,253 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Wed, 11 Jun 2025 05:15:46 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '659'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '665'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29912'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '176ms'), ('x-request-id', 'req_70538e437b4530f442e4a17684f59714'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=xlpqPdg6RmbM89JupU3mWbOlx_HuVZ_kkuVOvNW0mf0-1749618946-1.0.1.1-aiXjxaij4p.8vydZvEFQUqOCODkyUjsj._BhSXNk7W1e0DoolUEgAAw5wzigzlV1yIjO2hzccO8mKVe5RS4tdpJu4zmNNsflajbG.iLoAjg; path=/; expires=Wed, 11-Jun-25 05:45:46 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=X6igVlCLqg3_gAL.pGdZkE0Aj.IsNF0iMfHcfD9PqPw-1749618946166-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94dea1e7cc72ffa6-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-11 10:45:45,255 [DEBUG] request_id: req_70538e437b4530f442e4a17684f59714
2025-06-11 10:45:45,259 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1234,
  "protein_pct": 30,
  "carbs_pct": 40,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 10:45:45,261 [INFO]  Extracted Params: {'calories_target': 1234, 'protein_pct': 30, 'carbs_pct': 40, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 10:45:45,292 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-72bc4e8a-2d8d-4365-8fa8-3674e45b3f21', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1173.0 kcal\nProtein: 92.6 g\nCarbs: 123.5 g\nFat: 41.2 g\nFiber: 32.1 g\nSugar: 5.5 g\nSodium: 428.3 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 10:45:45,295 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 10:45:45,296 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 10:45:45,297 [DEBUG] send_request_headers.complete
2025-06-11 10:45:45,297 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 10:45:45,298 [DEBUG] send_request_body.complete
2025-06-11 10:45:45,299 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 10:45:48,943 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:15:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3285'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3292'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29850'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'300ms'), (b'x-request-id', b'req_57b96cc7e668c32bddf1ff2ab23e01cb'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94dea1ee59b6ffa6-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 10:45:48,945 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 10:45:48,946 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 10:45:48,947 [DEBUG] receive_response_body.complete
2025-06-11 10:45:48,947 [DEBUG] response_closed.started
2025-06-11 10:45:48,948 [DEBUG] response_closed.complete
2025-06-11 10:45:48,949 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:15:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3285', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3292', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29850', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '300ms', 'x-request-id': 'req_57b96cc7e668c32bddf1ff2ab23e01cb', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94dea1ee59b6ffa6-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 10:45:48,951 [DEBUG] request_id: req_57b96cc7e668c32bddf1ff2ab23e01cb
2025-06-11 10:45:48,952 [INFO]  Meal plan generated with 5 dishes
2025-06-11 10:45:48,954 [INFO] 127.0.0.1 - - [11/Jun/2025 10:45:48] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 10:52:41,077 [INFO] 127.0.0.1 - - [11/Jun/2025 10:52:41] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:57:04,402 [INFO] 127.0.0.1 - - [11/Jun/2025 10:57:04] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:57:21,828 [INFO] 127.0.0.1 - - [11/Jun/2025 10:57:21] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:59:45,827 [INFO] 127.0.0.1 - - [11/Jun/2025 10:59:45] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:59:46,861 [INFO] 127.0.0.1 - - [11/Jun/2025 10:59:46] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:59:47,237 [INFO] 127.0.0.1 - - [11/Jun/2025 10:59:47] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:59:47,662 [INFO] 127.0.0.1 - - [11/Jun/2025 10:59:47] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:59:48,267 [INFO] 127.0.0.1 - - [11/Jun/2025 10:59:48] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:59:48,584 [INFO] 127.0.0.1 - - [11/Jun/2025 10:59:48] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:59:48,766 [INFO] 127.0.0.1 - - [11/Jun/2025 10:59:48] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 10:59:49,023 [INFO] 127.0.0.1 - - [11/Jun/2025 10:59:49] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:01:07,575 [INFO] Received Input: give me meal for 2345 calorie with 30 % fats, 30 % carbs 40 % protein
2025-06-11 11:01:07,580 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-9fb5c44d-2986-4fbe-a386-95a952c553ec', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2345 calorie with 30 % fats, 30 % carbs 40 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 11:01:07,601 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 11:01:07,607 [DEBUG] close.started
2025-06-11 11:01:07,609 [DEBUG] close.complete
2025-06-11 11:01:07,612 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 11:01:07,723 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F9552990>
2025-06-11 11:01:07,723 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F2F8F1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 11:01:07,772 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F98E7BD0>
2025-06-11 11:01:07,772 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 11:01:07,773 [DEBUG] send_request_headers.complete
2025-06-11 11:01:07,773 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 11:01:07,774 [DEBUG] send_request_body.complete
2025-06-11 11:01:07,774 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 11:01:09,765 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:31:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1292'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1296'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29911'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'178ms'), (b'x-request-id', b'req_2d210a752f01c6af5923e508b59559a7'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=7b.rtMMIjL9TjYpuMC_8HN_ZU62KYwYWp6imyqC1_OM-1749619870-1.0.1.1-u.rc10mdK3oNxj6KqH_ZpFDeLtDiDmz8zY00.nY0Q97OmE3ACnY6SBUAwhmcGuPOigVmtweW4_w_bEu3HDQdCR8wHcCIZoUcd9u8wgW3zLs; path=/; expires=Wed, 11-Jun-25 06:01:10 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94deb873be13442b-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 11:01:09,767 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 11:01:09,767 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 11:01:09,768 [DEBUG] receive_response_body.complete
2025-06-11 11:01:09,768 [DEBUG] response_closed.started
2025-06-11 11:01:09,769 [DEBUG] response_closed.complete
2025-06-11 11:01:09,769 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:31:10 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1292', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1296', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29911', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '178ms', 'x-request-id': 'req_2d210a752f01c6af5923e508b59559a7', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=7b.rtMMIjL9TjYpuMC_8HN_ZU62KYwYWp6imyqC1_OM-1749619870-1.0.1.1-u.rc10mdK3oNxj6KqH_ZpFDeLtDiDmz8zY00.nY0Q97OmE3ACnY6SBUAwhmcGuPOigVmtweW4_w_bEu3HDQdCR8wHcCIZoUcd9u8wgW3zLs; path=/; expires=Wed, 11-Jun-25 06:01:10 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94deb873be13442b-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 11:01:09,772 [DEBUG] request_id: req_2d210a752f01c6af5923e508b59559a7
2025-06-11 11:01:09,773 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 40,
  "carbs_pct": 30,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 11:01:09,776 [INFO]  Extracted Params: {'calories_target': 2345, 'protein_pct': 40, 'carbs_pct': 30, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 11:01:09,807 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-456a074f-3c18-4393-b985-43120cb6ffa2', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2329.0 kcal\nProtein: 234.5 g\nCarbs: 175.8 g\nFat: 78.3 g\nFiber: 35.9 g\nSugar: 25.0 g\nSodium: 2107.7 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 11:01:09,810 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 11:01:09,814 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 11:01:09,815 [DEBUG] send_request_headers.complete
2025-06-11 11:01:09,816 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 11:01:09,816 [DEBUG] send_request_body.complete
2025-06-11 11:01:09,817 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 11:01:16,003 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 05:31:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'5874'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5876'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29827'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'346ms'), (b'x-request-id', b'req_b964582aa9af810c778073aa09b4d30e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94deb880a895442b-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 11:01:16,004 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 11:01:16,005 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 11:01:16,006 [DEBUG] receive_response_body.complete
2025-06-11 11:01:16,006 [DEBUG] response_closed.started
2025-06-11 11:01:16,007 [DEBUG] response_closed.complete
2025-06-11 11:01:16,007 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 05:31:16 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '5874', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5876', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29827', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '346ms', 'x-request-id': 'req_b964582aa9af810c778073aa09b4d30e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94deb880a895442b-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 11:01:16,009 [DEBUG] request_id: req_b964582aa9af810c778073aa09b4d30e
2025-06-11 11:01:16,011 [INFO]  Meal plan generated with 8 dishes
2025-06-11 11:01:16,012 [INFO] 127.0.0.1 - - [11/Jun/2025 11:01:16] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 11:02:30,325 [INFO] 127.0.0.1 - - [11/Jun/2025 11:02:30] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:02:31,310 [INFO] 127.0.0.1 - - [11/Jun/2025 11:02:31] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:49,457 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:49] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:50,568 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:50] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:51,503 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:51] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:51,843 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:51] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:52,036 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:52] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:52,266 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:52] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:52,582 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:52] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:52,945 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:52] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:53,461 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:53] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:55,298 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:55] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:55,608 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:55] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:55,915 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:55] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:56,307 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:56] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:56,714 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:56] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:57,108 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:57] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:57,412 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:57] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:57,741 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:57] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:57,962 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:57] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:58,169 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:58] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:58,396 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:58] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:58,632 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:58] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:59,140 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:59] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:03:59,392 [INFO] 127.0.0.1 - - [11/Jun/2025 11:03:59] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:00,091 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:00] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:00,697 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:00] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:01,080 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:01] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:01,514 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:01] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:01,847 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:01] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:02,030 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:02,260 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:02,493 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:02,759 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:03,413 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:03] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:45,989 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:45] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:48,230 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:48] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:48,473 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:48] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:49,141 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:49] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:49,330 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:49] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:49,759 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:49] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:49,949 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:49] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:50,341 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:50] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:50,678 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:50] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:50,928 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:50] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:51,223 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:51] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:51,531 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:51] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:51,726 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:51] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:51,913 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:51] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:52,092 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:52] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:52,275 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:52] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:52,454 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:52] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:52,770 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:52] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:53,203 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:53] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:53,980 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:53] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:54,930 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:54] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:55,309 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:55] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:57,630 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:57] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:57,945 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:57] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:04:58,210 [INFO] 127.0.0.1 - - [11/Jun/2025 11:04:58] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:05:01,560 [INFO] 127.0.0.1 - - [11/Jun/2025 11:05:01] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:05:01,743 [INFO] 127.0.0.1 - - [11/Jun/2025 11:05:01] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:05:02,242 [INFO] 127.0.0.1 - - [11/Jun/2025 11:05:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:05:02,428 [INFO] 127.0.0.1 - - [11/Jun/2025 11:05:02] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:06:43,290 [INFO] 127.0.0.1 - - [11/Jun/2025 11:06:43] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:09:28,341 [INFO] 127.0.0.1 - - [11/Jun/2025 11:09:28] "GET / HTTP/1.1" 200 -
2025-06-11 11:09:28,384 [INFO] 127.0.0.1 - - [11/Jun/2025 11:09:28] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 11:09:29,436 [INFO] 127.0.0.1 - - [11/Jun/2025 11:09:29] "GET / HTTP/1.1" 200 -
2025-06-11 11:09:29,493 [INFO] 127.0.0.1 - - [11/Jun/2025 11:09:29] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 11:09:29,625 [INFO] 127.0.0.1 - - [11/Jun/2025 11:09:29] "GET / HTTP/1.1" 200 -
2025-06-11 11:09:29,691 [INFO] 127.0.0.1 - - [11/Jun/2025 11:09:29] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 11:09:34,837 [INFO] 127.0.0.1 - - [11/Jun/2025 11:09:34] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:09:39,325 [INFO] 127.0.0.1 - - [11/Jun/2025 11:09:39] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:09:44,175 [INFO] 127.0.0.1 - - [11/Jun/2025 11:09:44] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:09:47,373 [INFO] 127.0.0.1 - - [11/Jun/2025 11:09:47] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:09:50,630 [INFO] 127.0.0.1 - - [11/Jun/2025 11:09:50] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:10:09,960 [INFO] 127.0.0.1 - - [11/Jun/2025 11:10:09] "GET / HTTP/1.1" 200 -
2025-06-11 11:10:09,993 [INFO] 127.0.0.1 - - [11/Jun/2025 11:10:09] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 11:11:43,486 [INFO] 127.0.0.1 - - [11/Jun/2025 11:11:43] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:11:45,108 [INFO] 127.0.0.1 - - [11/Jun/2025 11:11:45] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:11:45,822 [INFO] 127.0.0.1 - - [11/Jun/2025 11:11:45] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:11:46,301 [INFO] 127.0.0.1 - - [11/Jun/2025 11:11:46] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:11:46,485 [INFO] 127.0.0.1 - - [11/Jun/2025 11:11:46] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:11:49,543 [INFO] 127.0.0.1 - - [11/Jun/2025 11:11:49] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:11:50,058 [INFO] 127.0.0.1 - - [11/Jun/2025 11:11:50] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:11:50,242 [INFO] 127.0.0.1 - - [11/Jun/2025 11:11:50] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:11:50,590 [INFO] 127.0.0.1 - - [11/Jun/2025 11:11:50] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:11:50,721 [INFO] 127.0.0.1 - - [11/Jun/2025 11:11:50] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:11:50,963 [INFO] 127.0.0.1 - - [11/Jun/2025 11:11:50] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:12:10,089 [INFO] 127.0.0.1 - - [11/Jun/2025 11:12:10] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:12:10,267 [INFO] 127.0.0.1 - - [11/Jun/2025 11:12:10] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:12:10,789 [INFO] 127.0.0.1 - - [11/Jun/2025 11:12:10] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:12:10,928 [INFO] 127.0.0.1 - - [11/Jun/2025 11:12:10] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:12:11,163 [INFO] 127.0.0.1 - - [11/Jun/2025 11:12:11] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:12:11,412 [INFO] 127.0.0.1 - - [11/Jun/2025 11:12:11] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:12:11,536 [INFO] 127.0.0.1 - - [11/Jun/2025 11:12:11] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:12:11,738 [INFO] 127.0.0.1 - - [11/Jun/2025 11:12:11] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:12:11,966 [INFO] 127.0.0.1 - - [11/Jun/2025 11:12:11] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:12:14,694 [INFO] 127.0.0.1 - - [11/Jun/2025 11:12:14] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:14:04,288 [INFO] 127.0.0.1 - - [11/Jun/2025 11:14:04] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:14:13,345 [INFO] 127.0.0.1 - - [11/Jun/2025 11:14:13] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:14:16,724 [INFO] 127.0.0.1 - - [11/Jun/2025 11:14:16] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 11:14:19,828 [INFO] 127.0.0.1 - - [11/Jun/2025 11:14:19] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:14:24,548 [INFO] 127.0.0.1 - - [11/Jun/2025 11:14:24] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:58:25,499 [INFO] 127.0.0.1 - - [11/Jun/2025 11:58:25] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:58:38,364 [INFO] Received Input: meal for 2345 calorie
2025-06-11 11:58:38,367 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ebb864e6-e855-4d80-ab56-d5e0277ec076', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: meal for 2345 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 11:58:38,369 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 11:58:38,370 [DEBUG] close.started
2025-06-11 11:58:38,374 [DEBUG] close.complete
2025-06-11 11:58:38,374 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 11:58:38,468 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F9553510>
2025-06-11 11:58:38,468 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F2F8F1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 11:58:38,518 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F98D0890>
2025-06-11 11:58:38,519 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 11:58:38,519 [DEBUG] send_request_headers.complete
2025-06-11 11:58:38,520 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 11:58:38,520 [DEBUG] send_request_body.complete
2025-06-11 11:58:38,521 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 11:58:40,617 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 06:28:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1237'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1256'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29923'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'154ms'), (b'x-request-id', b'req_9f9caa3abc7d068be894ca7b11c0ee85'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=GNtKU1hIi_VxIbM.NUgl5JCf7AT69X22Sjl6XppLeOc-1749623321-1.0.1.1-L3iidTuYOrQQDCaoH3tgGLPxJ_bH2P9gFKwZLPexrs4mhqE3350EW3hj1iNwE0Vquchb5YE0rWKNGsToAF1HG.L.sTjhj4sxPjgRo4eEF2E; path=/; expires=Wed, 11-Jun-25 06:58:41 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94df0cb1ceca3c52-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 11:58:40,619 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 11:58:40,620 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 11:58:40,621 [DEBUG] receive_response_body.complete
2025-06-11 11:58:40,621 [DEBUG] response_closed.started
2025-06-11 11:58:40,622 [DEBUG] response_closed.complete
2025-06-11 11:58:40,623 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 06:28:41 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1237', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1256', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29923', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '154ms', 'x-request-id': 'req_9f9caa3abc7d068be894ca7b11c0ee85', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=GNtKU1hIi_VxIbM.NUgl5JCf7AT69X22Sjl6XppLeOc-1749623321-1.0.1.1-L3iidTuYOrQQDCaoH3tgGLPxJ_bH2P9gFKwZLPexrs4mhqE3350EW3hj1iNwE0Vquchb5YE0rWKNGsToAF1HG.L.sTjhj4sxPjgRo4eEF2E; path=/; expires=Wed, 11-Jun-25 06:58:41 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94df0cb1ceca3c52-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 11:58:40,626 [DEBUG] request_id: req_9f9caa3abc7d068be894ca7b11c0ee85
2025-06-11 11:58:40,628 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 11:58:40,631 [INFO]  Extracted Params: {'calories_target': 2345, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 11:58:40,657 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2f45c0a8-c011-4492-b026-8805f902c61a', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2198.0 kcal\nProtein: 117.3 g\nCarbs: 293.1 g\nFat: 78.1 g\nFiber: 60.2 g\nSugar: 6.5 g\nSodium: 730.9 mg\n\nRecommended Meals:\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 11:58:40,659 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 11:58:40,660 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 11:58:40,662 [DEBUG] send_request_headers.complete
2025-06-11 11:58:40,662 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 11:58:40,663 [DEBUG] send_request_body.complete
2025-06-11 11:58:40,664 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 11:58:45,737 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 06:28:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3899'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3914'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_76d79883d09457994aea30c21e6b0dd2'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94df0cbffb3a3c52-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 11:58:45,739 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 11:58:45,739 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 11:58:45,740 [DEBUG] receive_response_body.complete
2025-06-11 11:58:45,741 [DEBUG] response_closed.started
2025-06-11 11:58:45,741 [DEBUG] response_closed.complete
2025-06-11 11:58:45,742 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 06:28:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3899', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3914', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_76d79883d09457994aea30c21e6b0dd2', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94df0cbffb3a3c52-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 11:58:45,747 [DEBUG] request_id: req_76d79883d09457994aea30c21e6b0dd2
2025-06-11 11:58:45,748 [INFO]  Meal plan generated with 8 dishes
2025-06-11 11:58:45,749 [INFO] 127.0.0.1 - - [11/Jun/2025 11:58:45] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 11:59:10,704 [INFO] Received Input: meal for 2345 calorie
2025-06-11 11:59:10,707 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-68fd8e60-5f1c-4e03-aed7-4d18bd1010ed', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: meal for 2345 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 11:59:10,709 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 11:59:10,710 [DEBUG] close.started
2025-06-11 11:59:10,711 [DEBUG] close.complete
2025-06-11 11:59:10,711 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 11:59:10,844 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F9552F90>
2025-06-11 11:59:10,844 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F2F8F1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 11:59:10,925 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F90AE510>
2025-06-11 11:59:10,925 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 11:59:10,926 [DEBUG] send_request_headers.complete
2025-06-11 11:59:10,926 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 11:59:10,927 [DEBUG] send_request_body.complete
2025-06-11 11:59:10,927 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 11:59:11,587 [INFO] Received Input: meal for 2345 calorie
2025-06-11 11:59:11,591 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4ba32d5e-5182-4d8c-b9a7-a24c924f7bd1', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: meal for 2345 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 11:59:11,593 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 11:59:11,595 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 11:59:11,641 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F98F5210>
2025-06-11 11:59:11,641 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F2F8F1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 11:59:11,714 [INFO] Received Input: meal for 2345 calorie
2025-06-11 11:59:11,717 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ed6b9f50-deea-4279-8448-55e39430a3b6', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: meal for 2345 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 11:59:11,720 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 11:59:11,720 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 11:59:11,726 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F98F6F50>
2025-06-11 11:59:11,726 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 11:59:11,728 [DEBUG] send_request_headers.complete
2025-06-11 11:59:11,729 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 11:59:11,730 [DEBUG] send_request_body.complete
2025-06-11 11:59:11,730 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 11:59:11,759 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F98E5150>
2025-06-11 11:59:11,760 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F2F8F1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 11:59:11,833 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F98E74D0>
2025-06-11 11:59:11,833 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 11:59:11,834 [DEBUG] send_request_headers.complete
2025-06-11 11:59:11,835 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 11:59:11,836 [DEBUG] send_request_body.complete
2025-06-11 11:59:11,836 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 11:59:11,994 [INFO] Received Input: meal for 2345 calorie
2025-06-11 11:59:11,996 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-823c3996-4e8f-43bb-bb95-24642a4e3881', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: meal for 2345 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 11:59:11,999 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 11:59:11,999 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 11:59:12,082 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F6E2D210>
2025-06-11 11:59:12,082 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F2F8F1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 11:59:12,143 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F9541290>
2025-06-11 11:59:12,144 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 11:59:12,145 [DEBUG] send_request_headers.complete
2025-06-11 11:59:12,145 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 11:59:12,146 [DEBUG] send_request_body.complete
2025-06-11 11:59:12,146 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 11:59:12,693 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 06:29:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1321'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1332'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29923'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'154ms'), (b'x-request-id', b'req_0fbc43a849e64c192c42faf95f417076'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94df0d7c7f1fb895-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 11:59:12,695 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 11:59:12,696 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 11:59:12,696 [DEBUG] receive_response_body.complete
2025-06-11 11:59:12,697 [DEBUG] response_closed.started
2025-06-11 11:59:12,697 [DEBUG] response_closed.complete
2025-06-11 11:59:12,698 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 06:29:13 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1321', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1332', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29923', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '154ms', 'x-request-id': 'req_0fbc43a849e64c192c42faf95f417076', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94df0d7c7f1fb895-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 11:59:12,700 [DEBUG] request_id: req_0fbc43a849e64c192c42faf95f417076
2025-06-11 11:59:12,701 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 11:59:12,703 [INFO]  Extracted Params: {'calories_target': 2345, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 11:59:12,726 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-fa23c8f4-608e-4bd3-a802-3991fe65c733', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2198.0 kcal\nProtein: 117.3 g\nCarbs: 293.1 g\nFat: 78.1 g\nFiber: 60.2 g\nSugar: 6.5 g\nSodium: 730.9 mg\n\nRecommended Meals:\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 11:59:12,728 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 11:59:12,728 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 11:59:12,729 [DEBUG] send_request_headers.complete
2025-06-11 11:59:12,729 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 11:59:12,730 [DEBUG] send_request_body.complete
2025-06-11 11:59:12,730 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 11:59:13,230 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 06:29:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1136'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1145'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29923'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'154ms'), (b'x-request-id', b'req_efbac2283026a45e54927c9ada9c845b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94df0d814c715717-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 11:59:13,232 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 11:59:13,233 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 11:59:13,234 [DEBUG] receive_response_body.complete
2025-06-11 11:59:13,234 [DEBUG] response_closed.started
2025-06-11 11:59:13,234 [DEBUG] response_closed.complete
2025-06-11 11:59:13,235 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 06:29:13 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1136', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1145', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29923', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '154ms', 'x-request-id': 'req_efbac2283026a45e54927c9ada9c845b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94df0d814c715717-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 11:59:13,237 [DEBUG] request_id: req_efbac2283026a45e54927c9ada9c845b
2025-06-11 11:59:13,237 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 11:59:13,239 [INFO]  Extracted Params: {'calories_target': 2345, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 11:59:13,260 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-82c0123d-c7cc-4ced-b658-e43e01139020', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2198.0 kcal\nProtein: 117.3 g\nCarbs: 293.1 g\nFat: 78.1 g\nFiber: 60.2 g\nSugar: 6.5 g\nSodium: 730.9 mg\n\nRecommended Meals:\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 11:59:13,262 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 11:59:13,263 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 11:59:13,263 [DEBUG] send_request_headers.complete
2025-06-11 11:59:13,264 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 11:59:13,265 [DEBUG] send_request_body.complete
2025-06-11 11:59:13,265 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 11:59:13,825 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 06:29:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1217'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1225'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29923'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'154ms'), (b'x-request-id', b'req_a14ace964fc1d96af864be578c62dcd1'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94df0d841e5d4460-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 11:59:13,828 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 11:59:13,829 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 11:59:13,832 [DEBUG] receive_response_body.complete
2025-06-11 11:59:13,833 [DEBUG] response_closed.started
2025-06-11 11:59:13,833 [DEBUG] response_closed.complete
2025-06-11 11:59:13,834 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 06:29:14 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1217', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1225', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29923', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '154ms', 'x-request-id': 'req_a14ace964fc1d96af864be578c62dcd1', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94df0d841e5d4460-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 11:59:13,836 [DEBUG] request_id: req_a14ace964fc1d96af864be578c62dcd1
2025-06-11 11:59:13,837 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 11:59:13,838 [INFO]  Extracted Params: {'calories_target': 2345, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 11:59:13,863 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a87fe77b-4bb3-4fbb-8454-92fa5bfa0e0d', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2198.0 kcal\nProtein: 117.3 g\nCarbs: 293.1 g\nFat: 78.1 g\nFiber: 60.2 g\nSugar: 6.5 g\nSodium: 730.9 mg\n\nRecommended Meals:\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 11:59:13,865 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 11:59:13,866 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 11:59:13,866 [DEBUG] send_request_headers.complete
2025-06-11 11:59:13,867 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 11:59:13,867 [DEBUG] send_request_body.complete
2025-06-11 11:59:13,868 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 11:59:13,914 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 06:29:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1354'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1356'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29923'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'154ms'), (b'x-request-id', b'req_714726941678ce1a4758650d95fb9484'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94df0d82090080c2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 11:59:13,916 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 11:59:13,917 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 11:59:13,918 [DEBUG] receive_response_body.complete
2025-06-11 11:59:13,918 [DEBUG] response_closed.started
2025-06-11 11:59:13,919 [DEBUG] response_closed.complete
2025-06-11 11:59:13,919 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 06:29:14 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1354', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1356', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29923', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '154ms', 'x-request-id': 'req_714726941678ce1a4758650d95fb9484', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94df0d82090080c2-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 11:59:13,920 [DEBUG] request_id: req_714726941678ce1a4758650d95fb9484
2025-06-11 11:59:13,922 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 11:59:13,923 [INFO]  Extracted Params: {'calories_target': 2345, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 11:59:13,947 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e36c1bd6-abfc-46c2-afb1-7d1f6072648f', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2198.0 kcal\nProtein: 117.3 g\nCarbs: 293.1 g\nFat: 78.1 g\nFiber: 60.2 g\nSugar: 6.5 g\nSodium: 730.9 mg\n\nRecommended Meals:\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 11:59:13,949 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 11:59:13,949 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 11:59:13,950 [DEBUG] send_request_headers.complete
2025-06-11 11:59:13,951 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 11:59:13,951 [DEBUG] send_request_body.complete
2025-06-11 11:59:13,952 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 11:59:14,401 [INFO] 127.0.0.1 - - [11/Jun/2025 11:59:14] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 11:59:16,861 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 06:29:17 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3770'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3774'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_e7a313aa2d9eb01c3d4033abff174b77'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94df0d87ac3cb895-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 11:59:16,863 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 11:59:16,864 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 11:59:16,867 [DEBUG] receive_response_body.complete
2025-06-11 11:59:16,867 [DEBUG] response_closed.started
2025-06-11 11:59:16,868 [DEBUG] response_closed.complete
2025-06-11 11:59:16,868 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 06:29:17 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3770', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3774', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_e7a313aa2d9eb01c3d4033abff174b77', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94df0d87ac3cb895-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 11:59:16,870 [DEBUG] request_id: req_e7a313aa2d9eb01c3d4033abff174b77
2025-06-11 11:59:16,870 [INFO]  Meal plan generated with 8 dishes
2025-06-11 11:59:16,871 [INFO] 127.0.0.1 - - [11/Jun/2025 11:59:16] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 11:59:17,724 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 06:29:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4006'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4012'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_473db12083dd6f3edff09dd70598fb1a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94df0d8b19785717-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 11:59:17,727 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 11:59:17,727 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 11:59:17,728 [DEBUG] receive_response_body.complete
2025-06-11 11:59:17,728 [DEBUG] response_closed.started
2025-06-11 11:59:17,728 [DEBUG] response_closed.complete
2025-06-11 11:59:17,729 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 06:29:18 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4006', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4012', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_473db12083dd6f3edff09dd70598fb1a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94df0d8b19785717-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 11:59:17,731 [DEBUG] request_id: req_473db12083dd6f3edff09dd70598fb1a
2025-06-11 11:59:17,732 [INFO]  Meal plan generated with 8 dishes
2025-06-11 11:59:17,733 [INFO] 127.0.0.1 - - [11/Jun/2025 11:59:17] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 11:59:18,362 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 06:29:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4037'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4049'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'498'), (b'x-ratelimit-remaining-tokens', b'29600'), (b'x-ratelimit-reset-requests', b'151ms'), (b'x-ratelimit-reset-tokens', b'798ms'), (b'x-request-id', b'req_9639795ca2ef313a4ec4bcab811c8bc6'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94df0d8f8ce380c2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 11:59:18,364 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 11:59:18,364 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 11:59:18,366 [DEBUG] receive_response_body.complete
2025-06-11 11:59:18,366 [DEBUG] response_closed.started
2025-06-11 11:59:18,367 [DEBUG] response_closed.complete
2025-06-11 11:59:18,367 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 06:29:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4037', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4049', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '498', 'x-ratelimit-remaining-tokens': '29600', 'x-ratelimit-reset-requests': '151ms', 'x-ratelimit-reset-tokens': '798ms', 'x-request-id': 'req_9639795ca2ef313a4ec4bcab811c8bc6', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94df0d8f8ce380c2-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 11:59:18,368 [DEBUG] request_id: req_9639795ca2ef313a4ec4bcab811c8bc6
2025-06-11 11:59:18,370 [INFO]  Meal plan generated with 8 dishes
2025-06-11 11:59:18,370 [INFO] 127.0.0.1 - - [11/Jun/2025 11:59:18] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 11:59:18,692 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 06:29:19 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4454'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4463'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29736'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'527ms'), (b'x-request-id', b'req_ad25f2274924100e929ba0bc3336454c'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94df0d8edb104460-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 11:59:18,694 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 11:59:18,695 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 11:59:18,695 [DEBUG] receive_response_body.complete
2025-06-11 11:59:18,696 [DEBUG] response_closed.started
2025-06-11 11:59:18,696 [DEBUG] response_closed.complete
2025-06-11 11:59:18,697 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 06:29:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4454', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4463', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29736', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '527ms', 'x-request-id': 'req_ad25f2274924100e929ba0bc3336454c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94df0d8edb104460-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 11:59:18,698 [DEBUG] request_id: req_ad25f2274924100e929ba0bc3336454c
2025-06-11 11:59:18,699 [INFO]  Meal plan generated with 8 dishes
2025-06-11 11:59:18,700 [INFO] 127.0.0.1 - - [11/Jun/2025 11:59:18] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 11:59:32,828 [INFO] Received Input: meal for 4300 calorie
2025-06-11 11:59:32,831 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e2175e98-5edf-44ee-b365-befd8b2d8a4d', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: meal for 4300 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 11:59:32,833 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 11:59:32,834 [DEBUG] close.started
2025-06-11 11:59:32,835 [DEBUG] close.complete
2025-06-11 11:59:32,836 [DEBUG] close.started
2025-06-11 11:59:32,837 [DEBUG] close.complete
2025-06-11 11:59:32,838 [DEBUG] close.started
2025-06-11 11:59:32,839 [DEBUG] close.complete
2025-06-11 11:59:32,840 [DEBUG] close.started
2025-06-11 11:59:32,842 [DEBUG] close.complete
2025-06-11 11:59:32,843 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 11:59:32,895 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F98ED090>
2025-06-11 11:59:32,895 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F2F8F1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 11:59:32,953 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F9910150>
2025-06-11 11:59:32,954 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 11:59:32,954 [DEBUG] send_request_headers.complete
2025-06-11 11:59:32,955 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 11:59:32,955 [DEBUG] send_request_body.complete
2025-06-11 11:59:32,956 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 11:59:34,800 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 06:29:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1091'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1096'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29923'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'154ms'), (b'x-request-id', b'req_56360b56eb2db45fb429f9b49f92364a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94df0e05fa658b03-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 11:59:34,802 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 11:59:34,803 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 11:59:34,807 [DEBUG] receive_response_body.complete
2025-06-11 11:59:34,808 [DEBUG] response_closed.started
2025-06-11 11:59:34,808 [DEBUG] response_closed.complete
2025-06-11 11:59:34,809 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 06:29:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1091', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1096', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29923', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '154ms', 'x-request-id': 'req_56360b56eb2db45fb429f9b49f92364a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94df0e05fa658b03-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 11:59:34,810 [DEBUG] request_id: req_56360b56eb2db45fb429f9b49f92364a
2025-06-11 11:59:34,811 [INFO] LLM Raw Output:
```json
{
  "calories_target": 4300,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 11:59:34,813 [INFO]  Extracted Params: {'calories_target': 4300, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 11:59:34,834 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-3a27fac6-1451-4d85-8bef-e40e7ba4c2f1', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 4168.0 kcal\nProtein: 215.1 g\nCarbs: 537.5 g\nFat: 143.3 g\nFiber: 92.2 g\nSugar: 21.4 g\nSodium: 1014.3 mg\n\nRecommended Meals:\nChapati/Roti (Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nLotus seed halwa (Kamal gattay ka halwa) (Veg) for Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nBuckwheat pancake (Khura) (Veg) for Breakfast\nMaa chaane ki dal (Veg) for Lunch/Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 11:59:34,836 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 11:59:34,837 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 11:59:34,838 [DEBUG] send_request_headers.complete
2025-06-11 11:59:34,838 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 11:59:34,839 [DEBUG] send_request_body.complete
2025-06-11 11:59:34,839 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 11:59:41,495 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 06:29:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'6314'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'6323'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29775'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'450ms'), (b'x-request-id', b'req_f07a006d82243993c4c63da9a73e7f62'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94df0e11bf9f8b03-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 11:59:41,497 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 11:59:41,498 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 11:59:41,499 [DEBUG] receive_response_body.complete
2025-06-11 11:59:41,500 [DEBUG] response_closed.started
2025-06-11 11:59:41,500 [DEBUG] response_closed.complete
2025-06-11 11:59:41,501 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 06:29:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '6314', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '6323', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29775', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '450ms', 'x-request-id': 'req_f07a006d82243993c4c63da9a73e7f62', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94df0e11bf9f8b03-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 11:59:41,504 [DEBUG] request_id: req_f07a006d82243993c4c63da9a73e7f62
2025-06-11 11:59:41,505 [INFO]  Meal plan generated with 12 dishes
2025-06-11 11:59:41,506 [INFO] 127.0.0.1 - - [11/Jun/2025 11:59:41] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 12:00:42,315 [INFO] Received Input: meal for 4300 calorie
2025-06-11 12:00:42,317 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ac8835ca-1cdf-4292-9e33-824367fe8a07', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: meal for 4300 calorie'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 12:00:42,320 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 12:00:42,321 [DEBUG] close.started
2025-06-11 12:00:42,322 [DEBUG] close.complete
2025-06-11 12:00:42,323 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 12:00:42,455 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F98D1390>
2025-06-11 12:00:42,455 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F2F8F1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 12:00:42,506 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F98D1590>
2025-06-11 12:00:42,507 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 12:00:42,508 [DEBUG] send_request_headers.complete
2025-06-11 12:00:42,508 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 12:00:42,508 [DEBUG] send_request_body.complete
2025-06-11 12:00:42,509 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 12:00:44,140 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 06:30:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1077'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1081'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29923'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'154ms'), (b'x-request-id', b'req_73cdd0bfe27f3acfd9c4f3ac549388b4'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94df0fb8bf6a8b03-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 12:00:44,142 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 12:00:44,142 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 12:00:44,143 [DEBUG] receive_response_body.complete
2025-06-11 12:00:44,143 [DEBUG] response_closed.started
2025-06-11 12:00:44,144 [DEBUG] response_closed.complete
2025-06-11 12:00:44,144 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 06:30:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1077', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1081', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29923', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '154ms', 'x-request-id': 'req_73cdd0bfe27f3acfd9c4f3ac549388b4', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94df0fb8bf6a8b03-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 12:00:44,145 [DEBUG] request_id: req_73cdd0bfe27f3acfd9c4f3ac549388b4
2025-06-11 12:00:44,147 [INFO] LLM Raw Output:
```json
{
  "calories_target": 4300,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 12:00:44,148 [INFO]  Extracted Params: {'calories_target': 4300, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 12:00:44,183 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6d254241-e1c4-478a-80dc-b08f2b218a73', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 4168.0 kcal\nProtein: 215.1 g\nCarbs: 537.5 g\nFat: 143.3 g\nFiber: 92.2 g\nSugar: 21.4 g\nSodium: 1014.3 mg\n\nRecommended Meals:\nChapati/Roti (Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nLotus seed halwa (Kamal gattay ka halwa) (Veg) for Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nBuckwheat pancake (Khura) (Veg) for Breakfast\nMaa chaane ki dal (Veg) for Lunch/Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 12:00:44,187 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 12:00:44,188 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 12:00:44,190 [DEBUG] send_request_headers.complete
2025-06-11 12:00:44,190 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 12:00:44,192 [DEBUG] send_request_body.complete
2025-06-11 12:00:44,193 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 12:00:50,698 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 06:30:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'6098'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'6120'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29775'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'450ms'), (b'x-request-id', b'req_5d7054d1ecfaf440ec602961f78baac2'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94df0fc32cd68b03-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 12:00:50,700 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 12:00:50,700 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 12:00:50,701 [DEBUG] receive_response_body.complete
2025-06-11 12:00:50,701 [DEBUG] response_closed.started
2025-06-11 12:00:50,702 [DEBUG] response_closed.complete
2025-06-11 12:00:50,702 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 06:30:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '6098', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '6120', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29775', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '450ms', 'x-request-id': 'req_5d7054d1ecfaf440ec602961f78baac2', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94df0fc32cd68b03-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 12:00:50,704 [DEBUG] request_id: req_5d7054d1ecfaf440ec602961f78baac2
2025-06-11 12:00:50,705 [INFO]  Meal plan generated with 12 dishes
2025-06-11 12:00:50,706 [INFO] 127.0.0.1 - - [11/Jun/2025 12:00:50] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 15:40:53,823 [INFO] 127.0.0.1 - - [11/Jun/2025 15:40:53] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 15:41:07,710 [INFO] 127.0.0.1 - - [11/Jun/2025 15:41:07] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 15:51:34,920 [INFO] 127.0.0.1 - - [11/Jun/2025 15:51:34] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 15:52:12,170 [INFO] 127.0.0.1 - - [11/Jun/2025 15:52:12] "POST /calorie-calculator HTTP/1.1" 200 -
2025-06-11 15:52:29,816 [INFO] 127.0.0.1 - - [11/Jun/2025 15:52:29] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 15:52:59,528 [INFO] 127.0.0.1 - - [11/Jun/2025 15:52:59] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 15:53:38,506 [INFO] Received Input: i want  to lose weight 
2025-06-11 15:53:38,508 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-34e4a514-897e-466a-b86b-7615ebf87351', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: i want  to lose weight '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-11 15:53:38,510 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 15:53:38,511 [DEBUG] close.started
2025-06-11 15:53:38,512 [DEBUG] close.complete
2025-06-11 15:53:38,512 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-11 15:53:38,635 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F9913DD0>
2025-06-11 15:53:38,635 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001F2F8F1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-11 15:53:38,724 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001F2F9911490>
2025-06-11 15:53:38,725 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 15:53:38,726 [DEBUG] send_request_headers.complete
2025-06-11 15:53:38,726 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 15:53:38,726 [DEBUG] send_request_body.complete
2025-06-11 15:53:38,727 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 15:53:41,582 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 10:23:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1912'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1915'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29923'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'154ms'), (b'x-request-id', b'req_6f29e26c05d6a016cd81ae0cd92dddae'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=hUWcvAuAaSNul4AfnW2mZC8PnfemLDINoikRYf9hlEA-1749637422-1.0.1.1-ypMRybRsYvnnMjiAGsrjHpvFKHD52lTToNu6sPe9E01yvR6Wd.dVd4OJuk0jhrE2SMfpgRZH3hACkBcIZXHyrDtZy2qzbQ7H3uROVdS15NE; path=/; expires=Wed, 11-Jun-25 10:53:42 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94e064f14d8548d1-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 15:53:41,584 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 15:53:41,585 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 15:53:41,585 [DEBUG] receive_response_body.complete
2025-06-11 15:53:41,586 [DEBUG] response_closed.started
2025-06-11 15:53:41,586 [DEBUG] response_closed.complete
2025-06-11 15:53:41,587 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 10:23:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1912', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1915', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29923', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '154ms', 'x-request-id': 'req_6f29e26c05d6a016cd81ae0cd92dddae', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=hUWcvAuAaSNul4AfnW2mZC8PnfemLDINoikRYf9hlEA-1749637422-1.0.1.1-ypMRybRsYvnnMjiAGsrjHpvFKHD52lTToNu6sPe9E01yvR6Wd.dVd4OJuk0jhrE2SMfpgRZH3hACkBcIZXHyrDtZy2qzbQ7H3uROVdS15NE; path=/; expires=Wed, 11-Jun-25 10:53:42 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94e064f14d8548d1-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 15:53:41,589 [DEBUG] request_id: req_6f29e26c05d6a016cd81ae0cd92dddae
2025-06-11 15:53:41,590 [INFO] LLM Raw Output:
```json
{
  "calories_target": 1500,
  "protein_pct": 30,
  "carbs_pct": 40,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-11 15:53:41,592 [INFO]  Extracted Params: {'calories_target': 1500, 'protein_pct': 30, 'carbs_pct': 40, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-11 15:53:41,613 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-7b3ed4f7-3601-4423-966f-0488f9aee7b5', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1413.0 kcal\nProtein: 112.5 g\nCarbs: 150.0 g\nFat: 50.0 g\nFiber: 42.8 g\nSugar: 11.7 g\nSodium: 645.2 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-11 15:53:41,614 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-11 15:53:41,615 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-11 15:53:41,616 [DEBUG] send_request_headers.complete
2025-06-11 15:53:41,616 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-11 15:53:41,617 [DEBUG] send_request_body.complete
2025-06-11 15:53:41,617 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-11 15:53:46,357 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 11 Jun 2025 10:23:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3552'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3556'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29850'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'300ms'), (b'x-request-id', b'req_b8e4347b936ec346ff9d6fe027cf286c'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94e065037cbe48d1-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-11 15:53:46,359 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-11 15:53:46,359 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-11 15:53:46,360 [DEBUG] receive_response_body.complete
2025-06-11 15:53:46,360 [DEBUG] response_closed.started
2025-06-11 15:53:46,361 [DEBUG] response_closed.complete
2025-06-11 15:53:46,361 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 11 Jun 2025 10:23:47 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3552', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3556', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29850', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '300ms', 'x-request-id': 'req_b8e4347b936ec346ff9d6fe027cf286c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94e065037cbe48d1-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-11 15:53:46,362 [DEBUG] request_id: req_b8e4347b936ec346ff9d6fe027cf286c
2025-06-11 15:53:46,364 [INFO]  Meal plan generated with 5 dishes
2025-06-11 15:53:46,364 [INFO] 127.0.0.1 - - [11/Jun/2025 15:53:46] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-11 15:54:13,559 [INFO] 127.0.0.1 - - [11/Jun/2025 15:54:13] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 16:02:35,801 [INFO] 127.0.0.1 - - [11/Jun/2025 16:02:35] "GET / HTTP/1.1" 200 -
2025-06-11 16:02:35,843 [INFO] 127.0.0.1 - - [11/Jun/2025 16:02:35] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:02:37,055 [INFO] 127.0.0.1 - - [11/Jun/2025 16:02:37] "GET / HTTP/1.1" 200 -
2025-06-11 16:02:37,095 [INFO] 127.0.0.1 - - [11/Jun/2025 16:02:37] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:04:49,492 [INFO] 127.0.0.1 - - [11/Jun/2025 16:04:49] "GET / HTTP/1.1" 200 -
2025-06-11 16:04:49,528 [INFO] 127.0.0.1 - - [11/Jun/2025 16:04:49] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:05:41,289 [INFO] 127.0.0.1 - - [11/Jun/2025 16:05:41] "GET / HTTP/1.1" 200 -
2025-06-11 16:05:41,324 [INFO] 127.0.0.1 - - [11/Jun/2025 16:05:41] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:24:29,777 [INFO] 127.0.0.1 - - [11/Jun/2025 16:24:29] "GET / HTTP/1.1" 200 -
2025-06-11 16:24:29,825 [INFO] 127.0.0.1 - - [11/Jun/2025 16:24:29] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:24:30,951 [INFO] 127.0.0.1 - - [11/Jun/2025 16:24:30] "GET / HTTP/1.1" 200 -
2025-06-11 16:24:30,992 [INFO] 127.0.0.1 - - [11/Jun/2025 16:24:30] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:24:31,336 [INFO] 127.0.0.1 - - [11/Jun/2025 16:24:31] "GET / HTTP/1.1" 200 -
2025-06-11 16:24:31,370 [INFO] 127.0.0.1 - - [11/Jun/2025 16:24:31] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:24:38,960 [INFO] 127.0.0.1 - - [11/Jun/2025 16:24:38] "GET / HTTP/1.1" 200 -
2025-06-11 16:24:39,004 [INFO] 127.0.0.1 - - [11/Jun/2025 16:24:39] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:24:39,807 [INFO] 127.0.0.1 - - [11/Jun/2025 16:24:39] "GET / HTTP/1.1" 200 -
2025-06-11 16:24:39,850 [INFO] 127.0.0.1 - - [11/Jun/2025 16:24:39] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:24:40,199 [INFO] 127.0.0.1 - - [11/Jun/2025 16:24:40] "GET / HTTP/1.1" 200 -
2025-06-11 16:24:40,241 [INFO] 127.0.0.1 - - [11/Jun/2025 16:24:40] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:25:13,439 [INFO] 127.0.0.1 - - [11/Jun/2025 16:25:13] "GET / HTTP/1.1" 200 -
2025-06-11 16:25:13,470 [INFO] 127.0.0.1 - - [11/Jun/2025 16:25:13] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:25:13,580 [INFO] 127.0.0.1 - - [11/Jun/2025 16:25:13] "GET / HTTP/1.1" 200 -
2025-06-11 16:25:13,618 [INFO] 127.0.0.1 - - [11/Jun/2025 16:25:13] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:25:13,787 [INFO] 127.0.0.1 - - [11/Jun/2025 16:25:13] "GET / HTTP/1.1" 200 -
2025-06-11 16:25:13,808 [INFO] 127.0.0.1 - - [11/Jun/2025 16:25:13] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:25:13,991 [INFO] 127.0.0.1 - - [11/Jun/2025 16:25:13] "GET / HTTP/1.1" 200 -
2025-06-11 16:25:14,032 [INFO] 127.0.0.1 - - [11/Jun/2025 16:25:14] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:25:14,256 [INFO] 127.0.0.1 - - [11/Jun/2025 16:25:14] "GET / HTTP/1.1" 200 -
2025-06-11 16:25:14,284 [INFO] 127.0.0.1 - - [11/Jun/2025 16:25:14] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:26:10,117 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:10] "GET / HTTP/1.1" 200 -
2025-06-11 16:26:10,139 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:10] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:26:10,808 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:10] "GET / HTTP/1.1" 200 -
2025-06-11 16:26:10,849 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:10] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:26:10,994 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:10] "GET / HTTP/1.1" 200 -
2025-06-11 16:26:11,022 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:11] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:26:11,418 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:11] "GET / HTTP/1.1" 200 -
2025-06-11 16:26:11,460 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:11] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:26:11,979 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:11] "GET / HTTP/1.1" 200 -
2025-06-11 16:26:12,015 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:12] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:26:12,089 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:12] "GET / HTTP/1.1" 200 -
2025-06-11 16:26:12,130 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:12] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:26:12,258 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:12] "GET / HTTP/1.1" 200 -
2025-06-11 16:26:12,295 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:12] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:26:12,532 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:12] "GET / HTTP/1.1" 200 -
2025-06-11 16:26:12,573 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:12] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:26:45,850 [INFO] CSV loaded successfully.
2025-06-11 16:26:45,902 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-06-11 16:26:45,906 [INFO] [33mPress CTRL+C to quit[0m
2025-06-11 16:26:45,908 [INFO]  * Restarting with stat
2025-06-11 16:26:49,089 [INFO] CSV loaded successfully.
2025-06-11 16:26:49,136 [WARNING]  * Debugger is active!
2025-06-11 16:26:49,145 [INFO]  * Debugger PIN: 461-893-414
2025-06-11 16:26:49,469 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:49] "GET / HTTP/1.1" 200 -
2025-06-11 16:26:49,656 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:49] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:26:52,146 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:52] "GET / HTTP/1.1" 200 -
2025-06-11 16:26:52,194 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:52] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:26:52,270 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:52] "GET / HTTP/1.1" 200 -
2025-06-11 16:26:52,309 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:52] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:26:52,530 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:52] "GET / HTTP/1.1" 200 -
2025-06-11 16:26:52,575 [INFO] 127.0.0.1 - - [11/Jun/2025 16:26:52] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:30:30,761 [INFO] 127.0.0.1 - - [11/Jun/2025 16:30:30] "GET / HTTP/1.1" 200 -
2025-06-11 16:30:31,562 [INFO] 127.0.0.1 - - [11/Jun/2025 16:30:31] "GET / HTTP/1.1" 200 -
2025-06-11 16:30:31,937 [INFO] 127.0.0.1 - - [11/Jun/2025 16:30:31] "GET / HTTP/1.1" 200 -
2025-06-11 16:30:32,142 [INFO] 127.0.0.1 - - [11/Jun/2025 16:30:32] "GET / HTTP/1.1" 200 -
2025-06-11 16:30:32,410 [INFO] 127.0.0.1 - - [11/Jun/2025 16:30:32] "GET / HTTP/1.1" 200 -
2025-06-11 16:30:32,617 [INFO] 127.0.0.1 - - [11/Jun/2025 16:30:32] "GET / HTTP/1.1" 200 -
2025-06-11 16:30:32,864 [INFO] 127.0.0.1 - - [11/Jun/2025 16:30:32] "GET / HTTP/1.1" 200 -
2025-06-11 16:30:44,716 [INFO] 127.0.0.1 - - [11/Jun/2025 16:30:44] "GET / HTTP/1.1" 200 -
2025-06-11 16:30:44,849 [INFO] 127.0.0.1 - - [11/Jun/2025 16:30:44] "GET / HTTP/1.1" 200 -
2025-06-11 16:30:45,076 [INFO] 127.0.0.1 - - [11/Jun/2025 16:30:45] "GET / HTTP/1.1" 200 -
2025-06-11 16:30:45,334 [INFO] 127.0.0.1 - - [11/Jun/2025 16:30:45] "GET / HTTP/1.1" 200 -
2025-06-11 16:30:51,076 [INFO] 127.0.0.1 - - [11/Jun/2025 16:30:51] "GET / HTTP/1.1" 200 -
2025-06-11 16:30:51,261 [INFO] 127.0.0.1 - - [11/Jun/2025 16:30:51] "GET / HTTP/1.1" 200 -
2025-06-11 16:31:34,837 [INFO] 127.0.0.1 - - [11/Jun/2025 16:31:34] "GET / HTTP/1.1" 200 -
2025-06-11 16:31:35,548 [INFO] 127.0.0.1 - - [11/Jun/2025 16:31:35] "GET / HTTP/1.1" 200 -
2025-06-11 16:31:35,879 [INFO] 127.0.0.1 - - [11/Jun/2025 16:31:35] "GET / HTTP/1.1" 200 -
2025-06-11 16:31:35,997 [INFO] 127.0.0.1 - - [11/Jun/2025 16:31:35] "GET / HTTP/1.1" 200 -
2025-06-11 16:31:36,276 [INFO] 127.0.0.1 - - [11/Jun/2025 16:31:36] "GET / HTTP/1.1" 200 -
2025-06-11 16:32:25,079 [INFO] 127.0.0.1 - - [11/Jun/2025 16:32:25] "GET / HTTP/1.1" 200 -
2025-06-11 16:32:25,817 [INFO] 127.0.0.1 - - [11/Jun/2025 16:32:25] "GET / HTTP/1.1" 200 -
2025-06-11 16:32:26,141 [INFO] 127.0.0.1 - - [11/Jun/2025 16:32:26] "GET / HTTP/1.1" 200 -
2025-06-11 16:33:41,797 [INFO] 127.0.0.1 - - [11/Jun/2025 16:33:41] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-11 16:33:45,985 [INFO] 127.0.0.1 - - [11/Jun/2025 16:33:45] "GET /meal-planner HTTP/1.1" 200 -
2025-06-11 16:41:18,431 [INFO] 127.0.0.1 - - [11/Jun/2025 16:41:18] "GET / HTTP/1.1" 200 -
2025-06-11 16:44:48,940 [INFO] 127.0.0.1 - - [11/Jun/2025 16:44:48] "GET / HTTP/1.1" 200 -
2025-06-11 16:44:48,988 [INFO] 127.0.0.1 - - [11/Jun/2025 16:44:48] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:49:12,368 [INFO] 127.0.0.1 - - [11/Jun/2025 16:49:12] "GET / HTTP/1.1" 200 -
2025-06-11 16:49:12,396 [INFO] 127.0.0.1 - - [11/Jun/2025 16:49:12] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:49:13,356 [INFO] 127.0.0.1 - - [11/Jun/2025 16:49:13] "GET / HTTP/1.1" 200 -
2025-06-11 16:49:13,402 [INFO] 127.0.0.1 - - [11/Jun/2025 16:49:13] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:49:13,540 [INFO] 127.0.0.1 - - [11/Jun/2025 16:49:13] "GET / HTTP/1.1" 200 -
2025-06-11 16:49:13,571 [INFO] 127.0.0.1 - - [11/Jun/2025 16:49:13] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:50:05,060 [INFO] 127.0.0.1 - - [11/Jun/2025 16:50:05] "GET / HTTP/1.1" 200 -
2025-06-11 16:50:05,096 [INFO] 127.0.0.1 - - [11/Jun/2025 16:50:05] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:50:06,461 [INFO] 127.0.0.1 - - [11/Jun/2025 16:50:06] "GET / HTTP/1.1" 200 -
2025-06-11 16:50:06,497 [INFO] 127.0.0.1 - - [11/Jun/2025 16:50:06] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:52:09,431 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:09] "GET / HTTP/1.1" 200 -
2025-06-11 16:52:09,456 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:09] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:52:10,346 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:10] "GET / HTTP/1.1" 200 -
2025-06-11 16:52:10,382 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:10] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:52:10,486 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:10] "GET / HTTP/1.1" 200 -
2025-06-11 16:52:10,522 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:10] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:52:10,735 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:10] "GET / HTTP/1.1" 200 -
2025-06-11 16:52:10,773 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:10] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:52:12,532 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:12] "GET / HTTP/1.1" 200 -
2025-06-11 16:52:12,561 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:12] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:52:41,620 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:41] "GET / HTTP/1.1" 200 -
2025-06-11 16:52:41,665 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:41] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:52:42,310 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:42] "GET / HTTP/1.1" 200 -
2025-06-11 16:52:42,341 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:42] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:52:42,432 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:42] "GET / HTTP/1.1" 200 -
2025-06-11 16:52:42,479 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:42] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:52:42,676 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:42] "GET / HTTP/1.1" 200 -
2025-06-11 16:52:42,699 [INFO] 127.0.0.1 - - [11/Jun/2025 16:52:42] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-11 16:59:48,124 [INFO] 127.0.0.1 - - [11/Jun/2025 16:59:48] "GET / HTTP/1.1" 200 -
2025-06-11 16:59:48,155 [INFO] 127.0.0.1 - - [11/Jun/2025 16:59:48] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 06:33:07,015 [INFO] 127.0.0.1 - - [12/Jun/2025 06:33:07] "GET / HTTP/1.1" 200 -
2025-06-12 06:33:07,040 [INFO] 127.0.0.1 - - [12/Jun/2025 06:33:07] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 06:35:50,524 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:50] "GET / HTTP/1.1" 200 -
2025-06-12 06:35:50,558 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:50] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 06:35:54,473 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:54] "GET / HTTP/1.1" 200 -
2025-06-12 06:35:54,504 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:54] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 06:35:54,600 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:54] "GET / HTTP/1.1" 200 -
2025-06-12 06:35:54,626 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:54] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 06:35:54,784 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:54] "GET / HTTP/1.1" 200 -
2025-06-12 06:35:54,804 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:54] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 06:35:54,969 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:54] "GET / HTTP/1.1" 200 -
2025-06-12 06:35:55,006 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:55] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 06:35:55,154 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:55] "GET / HTTP/1.1" 200 -
2025-06-12 06:35:55,185 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:55] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 06:35:55,331 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:55] "GET / HTTP/1.1" 200 -
2025-06-12 06:35:55,361 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:55] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 06:35:55,576 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:55] "GET / HTTP/1.1" 200 -
2025-06-12 06:35:55,604 [INFO] 127.0.0.1 - - [12/Jun/2025 06:35:55] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 06:38:31,749 [INFO] 127.0.0.1 - - [12/Jun/2025 06:38:31] "GET / HTTP/1.1" 200 -
2025-06-12 06:38:31,776 [INFO] 127.0.0.1 - - [12/Jun/2025 06:38:31] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 06:38:32,438 [INFO] 127.0.0.1 - - [12/Jun/2025 06:38:32] "GET / HTTP/1.1" 200 -
2025-06-12 06:38:32,477 [INFO] 127.0.0.1 - - [12/Jun/2025 06:38:32] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 06:55:35,293 [INFO] 127.0.0.1 - - [12/Jun/2025 06:55:35] "GET / HTTP/1.1" 200 -
2025-06-12 06:55:35,320 [INFO] 127.0.0.1 - - [12/Jun/2025 06:55:35] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 06:59:34,083 [INFO] 127.0.0.1 - - [12/Jun/2025 06:59:34] "GET / HTTP/1.1" 200 -
2025-06-12 06:59:34,118 [INFO] 127.0.0.1 - - [12/Jun/2025 06:59:34] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 06:59:43,963 [INFO] 127.0.0.1 - - [12/Jun/2025 06:59:43] "GET / HTTP/1.1" 200 -
2025-06-12 06:59:43,986 [INFO] 127.0.0.1 - - [12/Jun/2025 06:59:43] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 06:59:44,139 [INFO] 127.0.0.1 - - [12/Jun/2025 06:59:44] "GET / HTTP/1.1" 200 -
2025-06-12 06:59:44,165 [INFO] 127.0.0.1 - - [12/Jun/2025 06:59:44] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 07:02:06,498 [INFO] 127.0.0.1 - - [12/Jun/2025 07:02:06] "GET / HTTP/1.1" 200 -
2025-06-12 07:02:06,529 [INFO] 127.0.0.1 - - [12/Jun/2025 07:02:06] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 07:03:44,489 [INFO] 127.0.0.1 - - [12/Jun/2025 07:03:44] "GET / HTTP/1.1" 200 -
2025-06-12 07:03:44,514 [INFO] 127.0.0.1 - - [12/Jun/2025 07:03:44] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 07:03:45,485 [INFO] 127.0.0.1 - - [12/Jun/2025 07:03:45] "GET / HTTP/1.1" 200 -
2025-06-12 07:03:45,501 [INFO] 127.0.0.1 - - [12/Jun/2025 07:03:45] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 07:03:45,663 [INFO] 127.0.0.1 - - [12/Jun/2025 07:03:45] "GET / HTTP/1.1" 200 -
2025-06-12 07:03:45,697 [INFO] 127.0.0.1 - - [12/Jun/2025 07:03:45] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 07:04:28,189 [INFO] 127.0.0.1 - - [12/Jun/2025 07:04:28] "GET / HTTP/1.1" 200 -
2025-06-12 07:04:28,210 [INFO] 127.0.0.1 - - [12/Jun/2025 07:04:28] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 07:04:29,236 [INFO] 127.0.0.1 - - [12/Jun/2025 07:04:29] "GET / HTTP/1.1" 200 -
2025-06-12 07:04:29,273 [INFO] 127.0.0.1 - - [12/Jun/2025 07:04:29] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 07:04:44,956 [INFO] 127.0.0.1 - - [12/Jun/2025 07:04:44] "GET / HTTP/1.1" 200 -
2025-06-12 07:04:44,984 [INFO] 127.0.0.1 - - [12/Jun/2025 07:04:44] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 07:04:46,437 [INFO] 127.0.0.1 - - [12/Jun/2025 07:04:46] "GET / HTTP/1.1" 200 -
2025-06-12 07:04:46,471 [INFO] 127.0.0.1 - - [12/Jun/2025 07:04:46] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 07:04:46,615 [INFO] 127.0.0.1 - - [12/Jun/2025 07:04:46] "GET / HTTP/1.1" 200 -
2025-06-12 07:04:46,632 [INFO] 127.0.0.1 - - [12/Jun/2025 07:04:46] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 07:05:44,221 [INFO] 127.0.0.1 - - [12/Jun/2025 07:05:44] "GET / HTTP/1.1" 200 -
2025-06-12 07:05:44,265 [INFO] 127.0.0.1 - - [12/Jun/2025 07:05:44] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 07:05:45,135 [INFO] 127.0.0.1 - - [12/Jun/2025 07:05:45] "GET / HTTP/1.1" 200 -
2025-06-12 07:05:45,169 [INFO] 127.0.0.1 - - [12/Jun/2025 07:05:45] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 07:05:45,319 [INFO] 127.0.0.1 - - [12/Jun/2025 07:05:45] "GET / HTTP/1.1" 200 -
2025-06-12 07:05:45,357 [INFO] 127.0.0.1 - - [12/Jun/2025 07:05:45] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 07:10:04,283 [INFO] 127.0.0.1 - - [12/Jun/2025 07:10:04] "GET / HTTP/1.1" 200 -
2025-06-12 07:10:04,308 [INFO] 127.0.0.1 - - [12/Jun/2025 07:10:04] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 07:10:04,980 [INFO] 127.0.0.1 - - [12/Jun/2025 07:10:04] "GET / HTTP/1.1" 200 -
2025-06-12 07:10:05,015 [INFO] 127.0.0.1 - - [12/Jun/2025 07:10:05] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 07:10:05,158 [INFO] 127.0.0.1 - - [12/Jun/2025 07:10:05] "GET / HTTP/1.1" 200 -
2025-06-12 07:10:05,177 [INFO] 127.0.0.1 - - [12/Jun/2025 07:10:05] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 08:06:20,599 [INFO] 127.0.0.1 - - [12/Jun/2025 08:06:20] "GET /meal-planner HTTP/1.1" 200 -
2025-06-12 21:49:53,375 [INFO] 127.0.0.1 - - [12/Jun/2025 21:49:53] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-12 21:49:57,424 [INFO] 127.0.0.1 - - [12/Jun/2025 21:49:57] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-12 21:49:58,221 [INFO] 127.0.0.1 - - [12/Jun/2025 21:49:58] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-12 21:49:58,385 [INFO] 127.0.0.1 - - [12/Jun/2025 21:49:58] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-12 21:49:58,620 [INFO] 127.0.0.1 - - [12/Jun/2025 21:49:58] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-12 21:49:58,871 [INFO] 127.0.0.1 - - [12/Jun/2025 21:49:58] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-12 21:49:59,113 [INFO] 127.0.0.1 - - [12/Jun/2025 21:49:59] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-12 21:50:07,417 [INFO] 127.0.0.1 - - [12/Jun/2025 21:50:07] "GET /meal-planner HTTP/1.1" 200 -
2025-06-12 21:50:12,713 [INFO] Received Input: 
2025-06-12 21:50:12,713 [ERROR]  Exception: Input cannot be empty
2025-06-12 21:50:12,740 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 385, in generate_meal_plan
    raise ValueError("Input cannot be empty")
ValueError: Input cannot be empty

2025-06-12 21:50:12,741 [INFO] 127.0.0.1 - - [12/Jun/2025 21:50:12] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-12 21:50:52,774 [INFO] Received Input: 
3532 calorie

2025-06-12 21:50:53,438 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d862bf9c-1d13-44a6-8a70-d53d4234d95d', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: \n3532 calorie\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-12 21:50:53,457 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-12 21:50:53,458 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-12 21:50:53,463 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-12 21:50:53,464 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-12 21:50:53,614 [DEBUG] 2 retries left
2025-06-12 21:50:53,615 [INFO] Retrying request to /chat/completions in 0.445492 seconds
2025-06-12 21:50:54,063 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d862bf9c-1d13-44a6-8a70-d53d4234d95d', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: \n3532 calorie\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-12 21:50:54,065 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-12 21:50:54,066 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-12 21:50:54,067 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-12 21:50:54,068 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-12 21:50:54,085 [DEBUG] 1 retry left
2025-06-12 21:50:54,085 [INFO] Retrying request to /chat/completions in 0.896799 seconds
2025-06-12 21:50:54,983 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d862bf9c-1d13-44a6-8a70-d53d4234d95d', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: \n3532 calorie\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-12 21:50:54,984 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-12 21:50:54,985 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-12 21:50:54,986 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-12 21:50:54,986 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-12 21:50:54,994 [DEBUG] Raising connection error
2025-06-12 21:50:54,995 [ERROR] Error extracting preferences: Connection error.
2025-06-12 21:50:55,046 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-12 21:50:55,055 [ERROR]  Exception: Connection error.
2025-06-12 21:50:55,059 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 387, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-12 21:50:55,069 [INFO] 127.0.0.1 - - [12/Jun/2025 21:50:55] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-12 21:50:56,179 [INFO] Received Input: 
3532 calorie

2025-06-12 21:50:56,182 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-29834ed9-23d5-4403-9c1e-6274791a70de', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: \n3532 calorie\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-12 21:50:56,184 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-12 21:50:56,185 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-12 21:50:56,186 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-12 21:50:56,186 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-12 21:50:56,196 [DEBUG] 2 retries left
2025-06-12 21:50:56,196 [INFO] Retrying request to /chat/completions in 0.475618 seconds
2025-06-12 21:50:56,673 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-29834ed9-23d5-4403-9c1e-6274791a70de', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: \n3532 calorie\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-12 21:50:56,674 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-12 21:50:56,675 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-12 21:50:56,676 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-12 21:50:56,676 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-12 21:50:56,685 [DEBUG] 1 retry left
2025-06-12 21:50:56,686 [INFO] Retrying request to /chat/completions in 0.818229 seconds
2025-06-12 21:50:57,505 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-29834ed9-23d5-4403-9c1e-6274791a70de', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: \n3532 calorie\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-12 21:50:57,506 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-12 21:50:57,507 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-12 21:50:57,508 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-12 21:50:57,509 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-12 21:50:57,521 [DEBUG] Raising connection error
2025-06-12 21:50:57,522 [ERROR] Error extracting preferences: Connection error.
2025-06-12 21:50:57,526 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-12 21:50:57,536 [ERROR]  Exception: Connection error.
2025-06-12 21:50:57,539 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 387, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-12 21:50:57,549 [INFO] 127.0.0.1 - - [12/Jun/2025 21:50:57] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-12 21:51:00,664 [INFO] 127.0.0.1 - - [12/Jun/2025 21:51:00] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-12 21:53:25,677 [INFO] 127.0.0.1 - - [12/Jun/2025 21:53:25] "GET / HTTP/1.1" 200 -
2025-06-12 21:53:25,730 [INFO] 127.0.0.1 - - [12/Jun/2025 21:53:25] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 21:55:54,116 [INFO] 127.0.0.1 - - [12/Jun/2025 21:55:54] "GET / HTTP/1.1" 200 -
2025-06-12 21:55:54,146 [INFO] 127.0.0.1 - - [12/Jun/2025 21:55:54] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 21:56:29,226 [INFO] 127.0.0.1 - - [12/Jun/2025 21:56:29] "GET / HTTP/1.1" 200 -
2025-06-12 21:56:29,263 [INFO] 127.0.0.1 - - [12/Jun/2025 21:56:29] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 21:56:30,415 [INFO] 127.0.0.1 - - [12/Jun/2025 21:56:30] "GET / HTTP/1.1" 200 -
2025-06-12 21:56:30,458 [INFO] 127.0.0.1 - - [12/Jun/2025 21:56:30] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 21:56:48,384 [INFO] 127.0.0.1 - - [12/Jun/2025 21:56:48] "GET / HTTP/1.1" 200 -
2025-06-12 21:56:48,417 [INFO] 127.0.0.1 - - [12/Jun/2025 21:56:48] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 21:56:49,117 [INFO] 127.0.0.1 - - [12/Jun/2025 21:56:49] "GET / HTTP/1.1" 200 -
2025-06-12 21:56:49,172 [INFO] 127.0.0.1 - - [12/Jun/2025 21:56:49] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 21:57:16,455 [INFO] 127.0.0.1 - - [12/Jun/2025 21:57:16] "GET / HTTP/1.1" 200 -
2025-06-12 21:57:16,480 [INFO] 127.0.0.1 - - [12/Jun/2025 21:57:16] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 21:57:17,528 [INFO] 127.0.0.1 - - [12/Jun/2025 21:57:17] "GET / HTTP/1.1" 200 -
2025-06-12 21:57:17,568 [INFO] 127.0.0.1 - - [12/Jun/2025 21:57:17] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 21:57:17,712 [INFO] 127.0.0.1 - - [12/Jun/2025 21:57:17] "GET / HTTP/1.1" 200 -
2025-06-12 21:57:17,743 [INFO] 127.0.0.1 - - [12/Jun/2025 21:57:17] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 21:57:35,831 [INFO] 127.0.0.1 - - [12/Jun/2025 21:57:35] "GET / HTTP/1.1" 200 -
2025-06-12 21:57:35,859 [INFO] 127.0.0.1 - - [12/Jun/2025 21:57:35] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 21:57:36,785 [INFO] 127.0.0.1 - - [12/Jun/2025 21:57:36] "GET / HTTP/1.1" 200 -
2025-06-12 21:57:36,814 [INFO] 127.0.0.1 - - [12/Jun/2025 21:57:36] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 21:57:36,968 [INFO] 127.0.0.1 - - [12/Jun/2025 21:57:36] "GET / HTTP/1.1" 200 -
2025-06-12 21:57:37,015 [INFO] 127.0.0.1 - - [12/Jun/2025 21:57:37] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 21:57:51,449 [INFO] 127.0.0.1 - - [12/Jun/2025 21:57:51] "GET / HTTP/1.1" 200 -
2025-06-12 21:57:51,473 [INFO] 127.0.0.1 - - [12/Jun/2025 21:57:51] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 21:59:34,808 [INFO] 127.0.0.1 - - [12/Jun/2025 21:59:34] "GET / HTTP/1.1" 200 -
2025-06-12 21:59:34,839 [INFO] 127.0.0.1 - - [12/Jun/2025 21:59:34] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 21:59:36,232 [INFO] 127.0.0.1 - - [12/Jun/2025 21:59:36] "GET / HTTP/1.1" 200 -
2025-06-12 21:59:36,272 [INFO] 127.0.0.1 - - [12/Jun/2025 21:59:36] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 21:59:37,796 [INFO] 127.0.0.1 - - [12/Jun/2025 21:59:37] "GET / HTTP/1.1" 200 -
2025-06-12 21:59:37,840 [INFO] 127.0.0.1 - - [12/Jun/2025 21:59:37] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:00:17,792 [INFO] 127.0.0.1 - - [12/Jun/2025 22:00:17] "GET / HTTP/1.1" 200 -
2025-06-12 22:00:17,819 [INFO] 127.0.0.1 - - [12/Jun/2025 22:00:17] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:00:18,494 [INFO] 127.0.0.1 - - [12/Jun/2025 22:00:18] "GET / HTTP/1.1" 200 -
2025-06-12 22:00:18,536 [INFO] 127.0.0.1 - - [12/Jun/2025 22:00:18] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:00:18,678 [INFO] 127.0.0.1 - - [12/Jun/2025 22:00:18] "GET / HTTP/1.1" 200 -
2025-06-12 22:00:18,708 [INFO] 127.0.0.1 - - [12/Jun/2025 22:00:18] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:00:32,657 [INFO] 127.0.0.1 - - [12/Jun/2025 22:00:32] "GET / HTTP/1.1" 200 -
2025-06-12 22:00:32,685 [INFO] 127.0.0.1 - - [12/Jun/2025 22:00:32] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:00:33,528 [INFO] 127.0.0.1 - - [12/Jun/2025 22:00:33] "GET / HTTP/1.1" 200 -
2025-06-12 22:00:33,558 [INFO] 127.0.0.1 - - [12/Jun/2025 22:00:33] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:00:33,843 [INFO] 127.0.0.1 - - [12/Jun/2025 22:00:33] "GET / HTTP/1.1" 200 -
2025-06-12 22:00:33,886 [INFO] 127.0.0.1 - - [12/Jun/2025 22:00:33] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:00:34,190 [INFO] 127.0.0.1 - - [12/Jun/2025 22:00:34] "GET / HTTP/1.1" 200 -
2025-06-12 22:00:34,221 [INFO] 127.0.0.1 - - [12/Jun/2025 22:00:34] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:02:38,433 [INFO] 127.0.0.1 - - [12/Jun/2025 22:02:38] "GET / HTTP/1.1" 200 -
2025-06-12 22:02:38,464 [INFO] 127.0.0.1 - - [12/Jun/2025 22:02:38] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:02:39,393 [INFO] 127.0.0.1 - - [12/Jun/2025 22:02:39] "GET / HTTP/1.1" 200 -
2025-06-12 22:02:39,432 [INFO] 127.0.0.1 - - [12/Jun/2025 22:02:39] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:02:39,584 [INFO] 127.0.0.1 - - [12/Jun/2025 22:02:39] "GET / HTTP/1.1" 200 -
2025-06-12 22:02:39,606 [INFO] 127.0.0.1 - - [12/Jun/2025 22:02:39] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:03:10,634 [INFO] 127.0.0.1 - - [12/Jun/2025 22:03:10] "GET / HTTP/1.1" 200 -
2025-06-12 22:03:10,671 [INFO] 127.0.0.1 - - [12/Jun/2025 22:03:10] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:03:41,203 [INFO] 127.0.0.1 - - [12/Jun/2025 22:03:41] "GET / HTTP/1.1" 200 -
2025-06-12 22:03:41,247 [INFO] 127.0.0.1 - - [12/Jun/2025 22:03:41] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:03:41,480 [INFO] 127.0.0.1 - - [12/Jun/2025 22:03:41] "GET / HTTP/1.1" 200 -
2025-06-12 22:03:41,525 [INFO] 127.0.0.1 - - [12/Jun/2025 22:03:41] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:03:41,664 [INFO] 127.0.0.1 - - [12/Jun/2025 22:03:41] "GET / HTTP/1.1" 200 -
2025-06-12 22:03:41,685 [INFO] 127.0.0.1 - - [12/Jun/2025 22:03:41] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:04:54,467 [INFO] 127.0.0.1 - - [12/Jun/2025 22:04:54] "GET / HTTP/1.1" 200 -
2025-06-12 22:04:54,500 [INFO] 127.0.0.1 - - [12/Jun/2025 22:04:54] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:04:55,471 [INFO] 127.0.0.1 - - [12/Jun/2025 22:04:55] "GET / HTTP/1.1" 200 -
2025-06-12 22:04:55,508 [INFO] 127.0.0.1 - - [12/Jun/2025 22:04:55] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-12 22:04:55,649 [INFO] 127.0.0.1 - - [12/Jun/2025 22:04:55] "GET / HTTP/1.1" 200 -
2025-06-12 22:04:55,690 [INFO] 127.0.0.1 - - [12/Jun/2025 22:04:55] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-13 05:30:09,949 [INFO] 127.0.0.1 - - [13/Jun/2025 05:30:09] "GET / HTTP/1.1" 200 -
2025-06-13 05:30:09,987 [INFO] 127.0.0.1 - - [13/Jun/2025 05:30:09] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-13 05:34:02,944 [INFO] 127.0.0.1 - - [13/Jun/2025 05:34:02] "GET / HTTP/1.1" 200 -
2025-06-13 05:34:02,981 [INFO] 127.0.0.1 - - [13/Jun/2025 05:34:02] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-13 05:34:04,268 [INFO] 127.0.0.1 - - [13/Jun/2025 05:34:04] "GET / HTTP/1.1" 200 -
2025-06-13 05:34:04,299 [INFO] 127.0.0.1 - - [13/Jun/2025 05:34:04] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-13 05:34:44,188 [INFO] 127.0.0.1 - - [13/Jun/2025 05:34:44] "GET / HTTP/1.1" 200 -
2025-06-13 05:34:44,216 [INFO] 127.0.0.1 - - [13/Jun/2025 05:34:44] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-13 05:34:45,881 [INFO] 127.0.0.1 - - [13/Jun/2025 05:34:45] "GET / HTTP/1.1" 200 -
2025-06-13 05:34:45,921 [INFO] 127.0.0.1 - - [13/Jun/2025 05:34:45] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-13 05:36:25,838 [INFO] 127.0.0.1 - - [13/Jun/2025 05:36:25] "GET / HTTP/1.1" 200 -
2025-06-13 05:36:25,876 [INFO] 127.0.0.1 - - [13/Jun/2025 05:36:25] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-13 05:36:50,605 [INFO] 127.0.0.1 - - [13/Jun/2025 05:36:50] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-13 05:36:55,409 [INFO] 127.0.0.1 - - [13/Jun/2025 05:36:55] "GET /meal-planner HTTP/1.1" 200 -
2025-06-14 08:28:58,968 [INFO] 127.0.0.1 - - [14/Jun/2025 08:28:58] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-14 08:29:22,552 [INFO] 127.0.0.1 - - [14/Jun/2025 08:29:22] "POST /calorie-calculator HTTP/1.1" 200 -
2025-06-14 10:53:04,153 [INFO] 127.0.0.1 - - [14/Jun/2025 10:53:04] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-14 10:53:11,946 [INFO] 127.0.0.1 - - [14/Jun/2025 10:53:11] "GET /meal-planner HTTP/1.1" 200 -
2025-06-14 10:53:20,069 [INFO] 127.0.0.1 - - [14/Jun/2025 10:53:20] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-14 10:54:25,098 [INFO] 127.0.0.1 - - [14/Jun/2025 10:54:25] "GET /meal-planner HTTP/1.1" 200 -
2025-06-14 10:55:06,074 [INFO] Received Input: give me meal 2345 cal with 40 % protein , 40 % carbs and 20 % fats
2025-06-14 10:55:06,095 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6331fbe3-2212-46b8-aaed-69f5c1d31771', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal 2345 cal with 40 % protein , 40 % carbs and 20 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-14 10:55:06,105 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-14 10:55:06,111 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-14 10:55:06,227 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020F4927CA10>
2025-06-14 10:55:06,229 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000020F48C1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-14 10:55:06,320 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020F496B2690>
2025-06-14 10:55:06,322 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-14 10:55:06,324 [DEBUG] send_request_headers.complete
2025-06-14 10:55:06,325 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-14 10:55:06,325 [DEBUG] send_request_body.complete
2025-06-14 10:55:06,326 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-14 10:55:07,825 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 14 Jun 2025 05:25:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'665'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'671'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29912'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'176ms'), (b'x-request-id', b'req_e96df16e04de3155362875d033fc33c0'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=j43F1GVQzj39Iguu4UUyYWptnZMmA98ZtPpOm6o_ID0-1749878708-1.0.1.1-RNJv8YbpUcI6VDKW1oq85LdA2qO870TEjQK4opS1rOog4tZ.e.PI4dcdq8VFejIUgKApP_SMblnkCYa1E.hNezljhQ4lj99ztIUzn4OZEWE; path=/; expires=Sat, 14-Jun-25 05:55:08 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=67GzHHAIKxwCHMBUqRwqQXGnismPbWHpAW1ofFukgqM-1749878708332-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94f767be193c2e46-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-14 10:55:07,831 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-14 10:55:07,833 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-14 10:55:07,835 [DEBUG] receive_response_body.complete
2025-06-14 10:55:07,835 [DEBUG] response_closed.started
2025-06-14 10:55:07,836 [DEBUG] response_closed.complete
2025-06-14 10:55:07,836 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sat, 14 Jun 2025 05:25:08 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '665'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '671'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29912'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '176ms'), ('x-request-id', 'req_e96df16e04de3155362875d033fc33c0'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=j43F1GVQzj39Iguu4UUyYWptnZMmA98ZtPpOm6o_ID0-1749878708-1.0.1.1-RNJv8YbpUcI6VDKW1oq85LdA2qO870TEjQK4opS1rOog4tZ.e.PI4dcdq8VFejIUgKApP_SMblnkCYa1E.hNezljhQ4lj99ztIUzn4OZEWE; path=/; expires=Sat, 14-Jun-25 05:55:08 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=67GzHHAIKxwCHMBUqRwqQXGnismPbWHpAW1ofFukgqM-1749878708332-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '94f767be193c2e46-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-14 10:55:07,838 [DEBUG] request_id: req_e96df16e04de3155362875d033fc33c0
2025-06-14 10:55:07,855 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 40,
  "carbs_pct": 40,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-14 10:55:07,857 [INFO]  Extracted Params: {'calories_target': 2345, 'protein_pct': 40, 'carbs_pct': 40, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-14 10:55:07,981 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b0c42609-5b9c-4d40-80b7-a61242a6b2e3', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2537.0 kcal\nProtein: 234.5 g\nCarbs: 234.6 g\nFat: 76.5 g\nFiber: 41.1 g\nSugar: 25.0 g\nSodium: 2142.6 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-14 10:55:07,983 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-14 10:55:07,984 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-14 10:55:07,985 [DEBUG] send_request_headers.complete
2025-06-14 10:55:07,985 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-14 10:55:07,986 [DEBUG] send_request_body.complete
2025-06-14 10:55:07,986 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-14 10:55:10,189 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 14 Jun 2025 05:25:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1591'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1600'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29817'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'366ms'), (b'x-request-id', b'req_4b50a80020fbdcd0a37fb43bd68d37fa'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94f767c88e572e46-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-14 10:55:10,191 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-14 10:55:10,191 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-14 10:55:10,193 [DEBUG] receive_response_body.complete
2025-06-14 10:55:10,193 [DEBUG] response_closed.started
2025-06-14 10:55:10,194 [DEBUG] response_closed.complete
2025-06-14 10:55:10,194 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 14 Jun 2025 05:25:10 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1591', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1600', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29817', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '366ms', 'x-request-id': 'req_4b50a80020fbdcd0a37fb43bd68d37fa', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94f767c88e572e46-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-14 10:55:10,196 [DEBUG] request_id: req_4b50a80020fbdcd0a37fb43bd68d37fa
2025-06-14 10:55:10,197 [INFO]  Meal plan generated with 9 dishes
2025-06-14 10:55:10,198 [INFO] 127.0.0.1 - - [14/Jun/2025 10:55:10] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-14 13:15:29,726 [INFO] 127.0.0.1 - - [14/Jun/2025 13:15:29] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-14 13:15:41,398 [INFO] 127.0.0.1 - - [14/Jun/2025 13:15:41] "GET /meal-planner HTTP/1.1" 200 -
2025-06-14 13:49:51,603 [INFO] 127.0.0.1 - - [14/Jun/2025 13:49:51] "GET /meal-planner HTTP/1.1" 200 -
2025-06-14 13:50:36,201 [INFO] Received Input: give me meal for 2345 cal with 50 % fats and 30 % protein 20% carbs
2025-06-14 13:50:36,205 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-80cfcecd-b207-471a-b93e-d2e83dede34b', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2345 cal with 50 % fats and 30 % protein 20% carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-14 13:50:36,208 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-14 13:50:36,209 [DEBUG] close.started
2025-06-14 13:50:36,210 [DEBUG] close.complete
2025-06-14 13:50:36,211 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-14 13:50:36,361 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020F496B96D0>
2025-06-14 13:50:36,361 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000020F48C1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-14 13:50:36,459 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020F496B9710>
2025-06-14 13:50:36,460 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-14 13:50:36,461 [DEBUG] send_request_headers.complete
2025-06-14 13:50:36,461 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-14 13:50:36,461 [DEBUG] send_request_body.complete
2025-06-14 13:50:36,462 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-14 13:50:38,218 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 14 Jun 2025 08:20:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'883'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'889'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29912'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'176ms'), (b'x-request-id', b'req_7a182542312ada459f18dad03f99bdd6'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Dbw7nwwfkpJHCnHWe5QfQIsCrQm9xi6edQJWiFZkzMc-1749889239-1.0.1.1-AfQUW4ygjE9ibeHVbSGXdigwEmNNzkD6bF9xvT8pKxzjdloI6ZwJuDCfJdDGISaSg1r2YFHj6oK5RiCdMT_ET_QgJWf0avzYD6q.1llKNJc; path=/; expires=Sat, 14-Jun-25 08:50:39 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94f868d8ea764910-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-14 13:50:38,220 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-14 13:50:38,221 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-14 13:50:38,221 [DEBUG] receive_response_body.complete
2025-06-14 13:50:38,222 [DEBUG] response_closed.started
2025-06-14 13:50:38,222 [DEBUG] response_closed.complete
2025-06-14 13:50:38,223 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 14 Jun 2025 08:20:39 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '883', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '889', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29912', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '176ms', 'x-request-id': 'req_7a182542312ada459f18dad03f99bdd6', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=Dbw7nwwfkpJHCnHWe5QfQIsCrQm9xi6edQJWiFZkzMc-1749889239-1.0.1.1-AfQUW4ygjE9ibeHVbSGXdigwEmNNzkD6bF9xvT8pKxzjdloI6ZwJuDCfJdDGISaSg1r2YFHj6oK5RiCdMT_ET_QgJWf0avzYD6q.1llKNJc; path=/; expires=Sat, 14-Jun-25 08:50:39 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94f868d8ea764910-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-14 13:50:38,225 [DEBUG] request_id: req_7a182542312ada459f18dad03f99bdd6
2025-06-14 13:50:38,226 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 30,
  "carbs_pct": 20,
  "fat_pct": 50,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-14 13:50:38,227 [INFO]  Extracted Params: {'calories_target': 2345, 'protein_pct': 30, 'carbs_pct': 20, 'fat_pct': 50, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-14 13:50:38,252 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-77fb45fc-0b96-4a56-b5c2-0953b9198e78', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2247.0 kcal\nProtein: 175.9 g\nCarbs: 117.3 g\nFat: 130.3 g\nFiber: 41.7 g\nSugar: 3.9 g\nSodium: 619.2 mg\n\nRecommended Meals:\nMeat stock (Non-Veg) for Any\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-14 13:50:38,255 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-14 13:50:38,255 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-14 13:50:38,256 [DEBUG] send_request_headers.complete
2025-06-14 13:50:38,256 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-14 13:50:38,257 [DEBUG] send_request_body.complete
2025-06-14 13:50:38,257 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-14 13:50:41,525 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 14 Jun 2025 08:20:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'2720'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2723'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29821'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'358ms'), (b'x-request-id', b'req_e17954a84420f78ef792f11264e1884b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94f868e3ff444910-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-14 13:50:41,527 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-14 13:50:41,528 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-14 13:50:41,529 [DEBUG] receive_response_body.complete
2025-06-14 13:50:41,529 [DEBUG] response_closed.started
2025-06-14 13:50:41,529 [DEBUG] response_closed.complete
2025-06-14 13:50:41,530 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 14 Jun 2025 08:20:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '2720', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2723', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29821', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '358ms', 'x-request-id': 'req_e17954a84420f78ef792f11264e1884b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94f868e3ff444910-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-14 13:50:41,533 [DEBUG] request_id: req_e17954a84420f78ef792f11264e1884b
2025-06-14 13:50:41,534 [INFO]  Meal plan generated with 8 dishes
2025-06-14 13:50:41,536 [INFO] 127.0.0.1 - - [14/Jun/2025 13:50:41] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-14 13:51:57,941 [INFO] Received Input: give me meal for 2345 cal with 50 % fats and 30 % protein 20% carbs
2025-06-14 13:51:57,944 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-3f2b4ba2-70e2-4d05-a75d-cad40207aacc', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2345 cal with 50 % fats and 30 % protein 20% carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-14 13:51:57,947 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-14 13:51:57,948 [DEBUG] close.started
2025-06-14 13:51:57,949 [DEBUG] close.complete
2025-06-14 13:51:57,951 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-14 13:51:58,094 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020F496B8910>
2025-06-14 13:51:58,094 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000020F48C1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-14 13:51:58,120 [INFO] Received Input: give me meal for 2345 cal with 50 % fats and 30 % protein 20% carbs
2025-06-14 13:51:58,124 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d9baefde-d13c-4742-ac36-853def92762c', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2345 cal with 50 % fats and 30 % protein 20% carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-14 13:51:58,126 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-14 13:51:58,126 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-14 13:51:58,208 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020F496BCE90>
2025-06-14 13:51:58,208 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000020F48C1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-14 13:51:58,237 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020F496BAC10>
2025-06-14 13:51:58,238 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-14 13:51:58,238 [DEBUG] send_request_headers.complete
2025-06-14 13:51:58,239 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-14 13:51:58,240 [DEBUG] send_request_body.complete
2025-06-14 13:51:58,240 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-14 13:51:58,345 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020F496BCF50>
2025-06-14 13:51:58,345 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-14 13:51:58,348 [DEBUG] send_request_headers.complete
2025-06-14 13:51:58,348 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-14 13:51:58,349 [DEBUG] send_request_body.complete
2025-06-14 13:51:58,350 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-14 13:51:59,657 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 14 Jun 2025 08:22:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'931'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'934'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29912'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'176ms'), (b'x-request-id', b'req_c822e714cfe8629d191eedb8fdcdb78f'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94f86ad88fd342ed-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-14 13:51:59,661 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-14 13:51:59,661 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-14 13:51:59,662 [DEBUG] receive_response_body.complete
2025-06-14 13:51:59,663 [DEBUG] response_closed.started
2025-06-14 13:51:59,663 [DEBUG] response_closed.complete
2025-06-14 13:51:59,664 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 14 Jun 2025 08:22:00 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '931', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '934', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29912', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '176ms', 'x-request-id': 'req_c822e714cfe8629d191eedb8fdcdb78f', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94f86ad88fd342ed-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-14 13:51:59,666 [DEBUG] request_id: req_c822e714cfe8629d191eedb8fdcdb78f
2025-06-14 13:51:59,667 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 30,
  "carbs_pct": 20,
  "fat_pct": 50,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-14 13:51:59,669 [INFO]  Extracted Params: {'calories_target': 2345, 'protein_pct': 30, 'carbs_pct': 20, 'fat_pct': 50, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-14 13:51:59,693 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a595d769-5a1a-4b5b-8dfe-9aceec9e67a7', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2247.0 kcal\nProtein: 175.9 g\nCarbs: 117.3 g\nFat: 130.3 g\nFiber: 41.7 g\nSugar: 3.9 g\nSodium: 619.2 mg\n\nRecommended Meals:\nMeat stock (Non-Veg) for Any\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-14 13:51:59,695 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-14 13:51:59,695 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-14 13:51:59,696 [DEBUG] send_request_headers.complete
2025-06-14 13:51:59,696 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-14 13:51:59,697 [DEBUG] send_request_body.complete
2025-06-14 13:51:59,697 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-14 13:52:00,308 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 14 Jun 2025 08:22:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'592'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'594'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29912'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'176ms'), (b'x-request-id', b'req_62468c72c751f758080dfa6d9ec2f74b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94f86adb9fd884e9-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-14 13:52:00,310 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-14 13:52:00,310 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-14 13:52:00,311 [DEBUG] receive_response_body.complete
2025-06-14 13:52:00,311 [DEBUG] response_closed.started
2025-06-14 13:52:00,312 [DEBUG] response_closed.complete
2025-06-14 13:52:00,312 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 14 Jun 2025 08:22:01 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '592', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '594', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29912', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '176ms', 'x-request-id': 'req_62468c72c751f758080dfa6d9ec2f74b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94f86adb9fd884e9-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-14 13:52:00,314 [DEBUG] request_id: req_62468c72c751f758080dfa6d9ec2f74b
2025-06-14 13:52:00,315 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 30,
  "carbs_pct": 20,
  "fat_pct": 50,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-14 13:52:00,316 [INFO]  Extracted Params: {'calories_target': 2345, 'protein_pct': 30, 'carbs_pct': 20, 'fat_pct': 50, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-14 13:52:00,337 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ae527d48-cdcf-437f-a168-eeb7a04ad7e1', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2247.0 kcal\nProtein: 175.9 g\nCarbs: 117.3 g\nFat: 130.3 g\nFiber: 41.7 g\nSugar: 3.9 g\nSodium: 619.2 mg\n\nRecommended Meals:\nMeat stock (Non-Veg) for Any\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-14 13:52:00,339 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-14 13:52:00,340 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-14 13:52:00,341 [DEBUG] send_request_headers.complete
2025-06-14 13:52:00,342 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-14 13:52:00,342 [DEBUG] send_request_body.complete
2025-06-14 13:52:00,343 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-14 13:52:03,419 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 14 Jun 2025 08:22:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3289'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3292'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29821'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'358ms'), (b'x-request-id', b'req_2aabe57cefdd85aa5f721fec62a3ae2e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94f86ae1298d42ed-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-14 13:52:03,421 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-14 13:52:03,422 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-14 13:52:03,422 [DEBUG] receive_response_body.complete
2025-06-14 13:52:03,423 [DEBUG] response_closed.started
2025-06-14 13:52:03,423 [DEBUG] response_closed.complete
2025-06-14 13:52:03,424 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 14 Jun 2025 08:22:04 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3289', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3292', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29821', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '358ms', 'x-request-id': 'req_2aabe57cefdd85aa5f721fec62a3ae2e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94f86ae1298d42ed-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-14 13:52:03,426 [DEBUG] request_id: req_2aabe57cefdd85aa5f721fec62a3ae2e
2025-06-14 13:52:03,427 [INFO]  Meal plan generated with 8 dishes
2025-06-14 13:52:03,428 [INFO] 127.0.0.1 - - [14/Jun/2025 13:52:03] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-14 13:52:04,448 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 14 Jun 2025 08:22:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3249'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3254'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29821'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'358ms'), (b'x-request-id', b'req_0c6ea0ffc6696c76a9c71ac491596ef5'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94f86ae7e8b484e9-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-14 13:52:04,450 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-14 13:52:04,451 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-14 13:52:04,451 [DEBUG] receive_response_body.complete
2025-06-14 13:52:04,452 [DEBUG] response_closed.started
2025-06-14 13:52:04,452 [DEBUG] response_closed.complete
2025-06-14 13:52:04,453 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 14 Jun 2025 08:22:05 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3249', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3254', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29821', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '358ms', 'x-request-id': 'req_0c6ea0ffc6696c76a9c71ac491596ef5', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94f86ae7e8b484e9-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-14 13:52:04,453 [DEBUG] request_id: req_0c6ea0ffc6696c76a9c71ac491596ef5
2025-06-14 13:52:04,455 [INFO]  Meal plan generated with 8 dishes
2025-06-14 13:52:04,456 [INFO] 127.0.0.1 - - [14/Jun/2025 13:52:04] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-14 13:52:06,862 [INFO] Received Input: give me meal for 2345 cal 
2025-06-14 13:52:06,865 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d41e20b0-bc95-4754-a6e0-02d1f64240e3', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2345 cal '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-14 13:52:06,868 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-14 13:52:06,868 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-14 13:52:06,869 [DEBUG] send_request_headers.complete
2025-06-14 13:52:06,870 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-14 13:52:06,870 [DEBUG] send_request_body.complete
2025-06-14 13:52:06,871 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-14 13:52:08,053 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 14 Jun 2025 08:22:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'714'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'718'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29922'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'156ms'), (b'x-request-id', b'req_2d63a2dc7f4bb6ae33fea88237c57141'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94f86b0df97d42ed-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-14 13:52:08,055 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-14 13:52:08,055 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-14 13:52:08,056 [DEBUG] receive_response_body.complete
2025-06-14 13:52:08,056 [DEBUG] response_closed.started
2025-06-14 13:52:08,057 [DEBUG] response_closed.complete
2025-06-14 13:52:08,057 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 14 Jun 2025 08:22:09 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '714', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '718', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29922', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '156ms', 'x-request-id': 'req_2d63a2dc7f4bb6ae33fea88237c57141', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94f86b0df97d42ed-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-14 13:52:08,059 [DEBUG] request_id: req_2d63a2dc7f4bb6ae33fea88237c57141
2025-06-14 13:52:08,060 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-14 13:52:08,062 [INFO]  Extracted Params: {'calories_target': 2345, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-14 13:52:08,083 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-3d057804-b6cc-426f-bc5e-40a28620a68a', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2198.0 kcal\nProtein: 117.3 g\nCarbs: 293.1 g\nFat: 78.1 g\nFiber: 60.2 g\nSugar: 6.5 g\nSodium: 730.9 mg\n\nRecommended Meals:\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-14 13:52:08,085 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-14 13:52:08,086 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-14 13:52:08,087 [DEBUG] send_request_headers.complete
2025-06-14 13:52:08,087 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-14 13:52:08,088 [DEBUG] send_request_body.complete
2025-06-14 13:52:08,088 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-14 13:52:09,687 [INFO] Received Input: give me meal for 2345 cal 
2025-06-14 13:52:09,691 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e8235b56-1bd3-4fd2-891c-4cd7db30f600', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2345 cal '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-14 13:52:09,694 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-14 13:52:09,695 [DEBUG] close.started
2025-06-14 13:52:09,696 [DEBUG] close.complete
2025-06-14 13:52:09,696 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-14 13:52:09,813 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020F496B3A90>
2025-06-14 13:52:09,813 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000020F48C1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-14 13:52:09,864 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020F496B3B90>
2025-06-14 13:52:09,865 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-14 13:52:09,866 [DEBUG] send_request_headers.complete
2025-06-14 13:52:09,866 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-14 13:52:09,867 [DEBUG] send_request_body.complete
2025-06-14 13:52:09,867 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-14 13:52:11,100 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 14 Jun 2025 08:22:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'2550'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2556'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_46d1b3b9d5615597719ae7d291eb70a9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94f86b15d9ef42ed-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-14 13:52:11,101 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-14 13:52:11,102 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-14 13:52:11,103 [DEBUG] receive_response_body.complete
2025-06-14 13:52:11,103 [DEBUG] response_closed.started
2025-06-14 13:52:11,104 [DEBUG] response_closed.complete
2025-06-14 13:52:11,104 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 14 Jun 2025 08:22:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '2550', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2556', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_46d1b3b9d5615597719ae7d291eb70a9', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94f86b15d9ef42ed-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-14 13:52:11,106 [DEBUG] request_id: req_46d1b3b9d5615597719ae7d291eb70a9
2025-06-14 13:52:11,107 [INFO]  Meal plan generated with 8 dishes
2025-06-14 13:52:11,107 [INFO] 127.0.0.1 - - [14/Jun/2025 13:52:11] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-14 13:52:11,192 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 14 Jun 2025 08:22:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'968'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'971'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29922'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'156ms'), (b'x-request-id', b'req_c08781819908d655fc9e8525c6746111'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94f86b209dc63a29-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-14 13:52:11,193 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-14 13:52:11,193 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-14 13:52:11,212 [DEBUG] receive_response_body.complete
2025-06-14 13:52:11,212 [DEBUG] response_closed.started
2025-06-14 13:52:11,213 [DEBUG] response_closed.complete
2025-06-14 13:52:11,213 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 14 Jun 2025 08:22:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '968', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '971', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29922', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '156ms', 'x-request-id': 'req_c08781819908d655fc9e8525c6746111', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94f86b209dc63a29-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-14 13:52:11,215 [DEBUG] request_id: req_c08781819908d655fc9e8525c6746111
2025-06-14 13:52:11,216 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 20,
  "carbs_pct": 50,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-14 13:52:11,217 [INFO]  Extracted Params: {'calories_target': 2345, 'protein_pct': 20, 'carbs_pct': 50, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-14 13:52:11,238 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-59b9b9a3-b6a3-46b9-96a3-40efeb382388', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2198.0 kcal\nProtein: 117.3 g\nCarbs: 293.1 g\nFat: 78.1 g\nFiber: 60.2 g\nSugar: 6.5 g\nSodium: 730.9 mg\n\nRecommended Meals:\nBoiled rice (Uble chawal) (Veg) for Any\nRoast chicken (nan) for nan\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-14 13:52:11,240 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-14 13:52:11,241 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-14 13:52:11,242 [DEBUG] send_request_headers.complete
2025-06-14 13:52:11,242 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-14 13:52:11,243 [DEBUG] send_request_body.complete
2025-06-14 13:52:11,243 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-14 13:52:14,796 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 14 Jun 2025 08:22:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3026'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3028'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_e9c39ecb6311e47e60c5c310fd5d6756'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94f86b296f0342ed-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-14 13:52:14,797 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-14 13:52:14,797 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-14 13:52:14,798 [DEBUG] receive_response_body.complete
2025-06-14 13:52:14,798 [DEBUG] response_closed.started
2025-06-14 13:52:14,799 [DEBUG] response_closed.complete
2025-06-14 13:52:14,799 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 14 Jun 2025 08:22:16 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3026', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3028', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_e9c39ecb6311e47e60c5c310fd5d6756', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94f86b296f0342ed-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-14 13:52:14,801 [DEBUG] request_id: req_e9c39ecb6311e47e60c5c310fd5d6756
2025-06-14 13:52:14,802 [INFO]  Meal plan generated with 8 dishes
2025-06-14 13:52:14,803 [INFO] 127.0.0.1 - - [14/Jun/2025 13:52:14] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-14 13:52:38,888 [INFO] 127.0.0.1 - - [14/Jun/2025 13:52:38] "GET /meal-planner HTTP/1.1" 200 -
2025-06-14 13:52:40,112 [INFO] 127.0.0.1 - - [14/Jun/2025 13:52:40] "GET /meal-planner HTTP/1.1" 200 -
2025-06-14 17:58:02,765 [INFO] Received Input: 2353 cal 40% protein , 40 % carbs , 20 % fats 
2025-06-14 17:58:02,767 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-cc5922bd-1758-465a-aec2-bf175bd8125a', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: 2353 cal 40% protein , 40 % carbs , 20 % fats '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-14 17:58:02,769 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-14 17:58:02,769 [DEBUG] close.started
2025-06-14 17:58:02,770 [DEBUG] close.complete
2025-06-14 17:58:02,770 [DEBUG] close.started
2025-06-14 17:58:02,770 [DEBUG] close.complete
2025-06-14 17:58:02,771 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-14 17:58:02,948 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020F493440D0>
2025-06-14 17:58:02,948 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000020F48C1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-14 17:58:03,151 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020F49344CD0>
2025-06-14 17:58:03,152 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-14 17:58:03,153 [DEBUG] send_request_headers.complete
2025-06-14 17:58:03,153 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-14 17:58:03,153 [DEBUG] send_request_body.complete
2025-06-14 17:58:03,154 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-14 17:58:04,754 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 14 Jun 2025 12:28:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'718'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'721'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29917'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'166ms'), (b'x-request-id', b'req_1be77a9ee34e1b762ac0154d8b3b96b3'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=ohWcCGK5aq6cVyzX857T2NjI78hLZInLN57x1_N3qeg-1749904086-1.0.1.1-YJjszNbAhXWs.90VM8y.z0q_o9oHghnOkVRS0I.N62z3126PmMBLPkuXmyIT8hr3jIlNPoXCg.5t8hLNj.Sz2oYS1_rFLkwReT7ae8.1LvE; path=/; expires=Sat, 14-Jun-25 12:58:06 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94f9d3511a9531ee-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-14 17:58:04,757 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-14 17:58:04,757 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-14 17:58:04,758 [DEBUG] receive_response_body.complete
2025-06-14 17:58:04,758 [DEBUG] response_closed.started
2025-06-14 17:58:04,759 [DEBUG] response_closed.complete
2025-06-14 17:58:04,759 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 14 Jun 2025 12:28:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '718', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '721', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29917', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '166ms', 'x-request-id': 'req_1be77a9ee34e1b762ac0154d8b3b96b3', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=ohWcCGK5aq6cVyzX857T2NjI78hLZInLN57x1_N3qeg-1749904086-1.0.1.1-YJjszNbAhXWs.90VM8y.z0q_o9oHghnOkVRS0I.N62z3126PmMBLPkuXmyIT8hr3jIlNPoXCg.5t8hLNj.Sz2oYS1_rFLkwReT7ae8.1LvE; path=/; expires=Sat, 14-Jun-25 12:58:06 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94f9d3511a9531ee-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-14 17:58:04,761 [DEBUG] request_id: req_1be77a9ee34e1b762ac0154d8b3b96b3
2025-06-14 17:58:04,762 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2353,
  "protein_pct": 40,
  "carbs_pct": 40,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-14 17:58:04,764 [INFO]  Extracted Params: {'calories_target': 2353, 'protein_pct': 40, 'carbs_pct': 40, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-14 17:58:04,788 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-426c0f03-5fc4-48b9-973e-3e6210b846ec', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2547.0 kcal\nProtein: 235.3 g\nCarbs: 235.3 g\nFat: 76.9 g\nFiber: 41.2 g\nSugar: 25.0 g\nSodium: 2149.5 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-14 17:58:04,790 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-14 17:58:04,790 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-14 17:58:04,791 [DEBUG] send_request_headers.complete
2025-06-14 17:58:04,791 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-14 17:58:04,792 [DEBUG] send_request_body.complete
2025-06-14 17:58:04,793 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-14 17:58:09,555 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 14 Jun 2025 12:28:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4343'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4345'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29817'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'366ms'), (b'x-request-id', b'req_ce45c9e7ddb3a5002cf8cc2bd345e5b0'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'94f9d35b5f9131ee-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-14 17:58:09,557 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-14 17:58:09,557 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-14 17:58:09,558 [DEBUG] receive_response_body.complete
2025-06-14 17:58:09,558 [DEBUG] response_closed.started
2025-06-14 17:58:09,558 [DEBUG] response_closed.complete
2025-06-14 17:58:09,559 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 14 Jun 2025 12:28:10 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4343', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4345', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29817', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '366ms', 'x-request-id': 'req_ce45c9e7ddb3a5002cf8cc2bd345e5b0', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '94f9d35b5f9131ee-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-14 17:58:09,560 [DEBUG] request_id: req_ce45c9e7ddb3a5002cf8cc2bd345e5b0
2025-06-14 17:58:09,561 [INFO]  Meal plan generated with 9 dishes
2025-06-14 17:58:09,562 [INFO] 127.0.0.1 - - [14/Jun/2025 17:58:09] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-19 12:26:14,128 [INFO] CSV loaded successfully.
2025-06-19 12:26:14,217 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-06-19 12:26:14,217 [INFO] [33mPress CTRL+C to quit[0m
2025-06-19 12:26:14,221 [INFO]  * Restarting with stat
2025-06-19 12:26:17,335 [INFO] CSV loaded successfully.
2025-06-19 12:26:17,380 [WARNING]  * Debugger is active!
2025-06-19 12:26:17,388 [INFO]  * Debugger PIN: 461-893-414
2025-06-19 12:26:20,662 [INFO] 127.0.0.1 - - [19/Jun/2025 12:26:20] "GET / HTTP/1.1" 200 -
2025-06-19 12:26:20,900 [INFO] 127.0.0.1 - - [19/Jun/2025 12:26:20] "GET /static/css/main.css HTTP/1.1" 200 -
2025-06-19 12:26:21,321 [INFO] 127.0.0.1 - - [19/Jun/2025 12:26:21] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-06-19 12:27:00,401 [INFO] 127.0.0.1 - - [19/Jun/2025 12:27:00] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-19 12:31:40,112 [INFO] 127.0.0.1 - - [19/Jun/2025 12:31:40] "GET /meal-planner HTTP/1.1" 200 -
2025-06-19 12:34:26,917 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats with less sugar 
2025-06-19 12:34:27,672 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4fc4eade-2670-4a42-8f85-cedd2ff93b39', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats with less sugar '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 12:34:27,690 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 12:34:27,691 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 12:34:27,846 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020CE62F6F10>
2025-06-19 12:34:27,847 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000020CE5CAFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-19 12:34:27,921 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020CE62F6FD0>
2025-06-19 12:34:27,921 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 12:34:27,923 [DEBUG] send_request_headers.complete
2025-06-19 12:34:27,923 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 12:34:27,924 [DEBUG] send_request_body.complete
2025-06-19 12:34:27,925 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 12:34:30,564 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 07:04:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1458'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1460'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29906'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'188ms'), (b'x-request-id', b'req_092f8c58ead684daeb72c31034875fbf'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=yUV2aDxZNs9FOXV6QEbaUmfp96zwp4zeNgjAJiK9sJ0-1750316670-1.0.1.1-FF.P3u9xHz2jLXWX.n7IkKuVggN3TEcvWqXeEaYy81GDH53nW7OexIFkEUZBiPa3n0I2QugD7F0rt4BgwwaKcneb9wDxApNerZp2wgc762g; path=/; expires=Thu, 19-Jun-25 07:34:30 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=1ysRwwQEQJjkoaeF8Rb_sXaO.A6MstA54kWLhDRCPog-1750316670404-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95212c25c95e8a14-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 12:34:30,567 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 12:34:30,568 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 12:34:30,569 [DEBUG] receive_response_body.complete
2025-06-19 12:34:30,569 [DEBUG] response_closed.started
2025-06-19 12:34:30,570 [DEBUG] response_closed.complete
2025-06-19 12:34:30,571 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 19 Jun 2025 07:04:30 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '1458'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1460'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29906'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '188ms'), ('x-request-id', 'req_092f8c58ead684daeb72c31034875fbf'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=yUV2aDxZNs9FOXV6QEbaUmfp96zwp4zeNgjAJiK9sJ0-1750316670-1.0.1.1-FF.P3u9xHz2jLXWX.n7IkKuVggN3TEcvWqXeEaYy81GDH53nW7OexIFkEUZBiPa3n0I2QugD7F0rt4BgwwaKcneb9wDxApNerZp2wgc762g; path=/; expires=Thu, 19-Jun-25 07:34:30 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=1ysRwwQEQJjkoaeF8Rb_sXaO.A6MstA54kWLhDRCPog-1750316670404-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '95212c25c95e8a14-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-19 12:34:30,575 [DEBUG] request_id: req_092f8c58ead684daeb72c31034875fbf
2025-06-19 12:34:30,581 [INFO] LLM Raw Output:
```json
{
    "calories_target": 2354,
    "protein_pct": 50,
    "carbs_pct": 30,
    "fat_pct": 20,
    "fiber_min": 25,
    "sugar_max": 25,
    "sodium_max": 2300
}
```
2025-06-19 12:34:30,582 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-19 12:34:30,616 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-faa597c4-9d57-4365-bf0f-787e0ef6fa28', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-19 12:34:30,619 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 12:34:30,620 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 12:34:30,621 [DEBUG] send_request_headers.complete
2025-06-19 12:34:30,622 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 12:34:30,624 [DEBUG] send_request_body.complete
2025-06-19 12:34:30,624 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 12:34:35,916 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 07:04:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4032'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4036'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_fe2faae903788c4f75d2a294d3c29a08'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95212c36abeb8a14-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 12:34:35,918 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 12:34:35,919 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 12:34:35,920 [DEBUG] receive_response_body.complete
2025-06-19 12:34:35,920 [DEBUG] response_closed.started
2025-06-19 12:34:35,921 [DEBUG] response_closed.complete
2025-06-19 12:34:35,921 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 07:04:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4032', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4036', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_fe2faae903788c4f75d2a294d3c29a08', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95212c36abeb8a14-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 12:34:35,923 [DEBUG] request_id: req_fe2faae903788c4f75d2a294d3c29a08
2025-06-19 12:34:35,924 [INFO]  Meal plan generated with 10 dishes
2025-06-19 12:34:35,924 [INFO] 127.0.0.1 - - [19/Jun/2025 12:34:35] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-19 13:43:17,675 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats with less sugar 
2025-06-19 13:43:17,678 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2d0f0057-23d3-49fc-9e75-afacc385b8a5', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats with less sugar '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 13:43:17,680 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:43:17,681 [DEBUG] close.started
2025-06-19 13:43:17,682 [DEBUG] close.complete
2025-06-19 13:43:17,682 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 13:43:17,683 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-19 13:43:17,683 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-19 13:43:17,895 [DEBUG] 2 retries left
2025-06-19 13:43:17,896 [INFO] Retrying request to /chat/completions in 0.419769 seconds
2025-06-19 13:43:18,316 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2d0f0057-23d3-49fc-9e75-afacc385b8a5', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats with less sugar '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 13:43:18,320 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:43:18,321 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 13:43:18,322 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-19 13:43:18,322 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-19 13:43:18,340 [DEBUG] 1 retry left
2025-06-19 13:43:18,340 [INFO] Retrying request to /chat/completions in 0.772820 seconds
2025-06-19 13:43:19,115 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2d0f0057-23d3-49fc-9e75-afacc385b8a5', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats with less sugar '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 13:43:19,118 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:43:19,120 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 13:43:19,121 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-19 13:43:19,122 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-19 13:43:19,138 [DEBUG] Raising connection error
2025-06-19 13:43:19,138 [ERROR] Error extracting preferences: Connection error.
2025-06-19 13:43:19,197 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-19 13:43:19,210 [ERROR]  Exception: Connection error.
2025-06-19 13:43:19,213 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 387, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-19 13:43:19,226 [INFO] 127.0.0.1 - - [19/Jun/2025 13:43:19] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-19 13:43:19,538 [INFO] 127.0.0.1 - - [19/Jun/2025 13:43:19] "GET /meal-planner HTTP/1.1" 200 -
2025-06-19 13:44:47,763 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats with less sugar
2025-06-19 13:44:47,766 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-06bd14fb-70de-43df-a83e-e88d12bb8db3', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats with less sugar'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 13:44:47,768 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:44:47,768 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 13:44:47,919 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020CE670FA10>
2025-06-19 13:44:47,919 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000020CE5CAFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-19 13:44:48,002 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020CE670E150>
2025-06-19 13:44:48,002 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:44:48,003 [DEBUG] send_request_headers.complete
2025-06-19 13:44:48,003 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:44:48,004 [DEBUG] send_request_body.complete
2025-06-19 13:44:48,005 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:44:50,153 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:14:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1264'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1327'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29906'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'188ms'), (b'x-request-id', b'req_a82fdae06481e0ddd66cf947d6656155'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=ljuC1ihwB97TpEVY1.EZKFnmpeqxAdxCaBySoOUlcx8-1750320889-1.0.1.1-nbP_jsrqww6rhqr9ZFHedJ7HTKFjsgvi3xm5BACtTgAuda_qBW63gMhGbw7MBBE8ARdpcy1yHG5CkMbp57.XPjy.marl6sUW.9V_bqaBf8o; path=/; expires=Thu, 19-Jun-25 08:44:49 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9521932d6e54404f-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:44:50,155 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:44:50,156 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:44:50,156 [DEBUG] receive_response_body.complete
2025-06-19 13:44:50,157 [DEBUG] response_closed.started
2025-06-19 13:44:50,157 [DEBUG] response_closed.complete
2025-06-19 13:44:50,158 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:14:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1264', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1327', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29906', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '188ms', 'x-request-id': 'req_a82fdae06481e0ddd66cf947d6656155', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=ljuC1ihwB97TpEVY1.EZKFnmpeqxAdxCaBySoOUlcx8-1750320889-1.0.1.1-nbP_jsrqww6rhqr9ZFHedJ7HTKFjsgvi3xm5BACtTgAuda_qBW63gMhGbw7MBBE8ARdpcy1yHG5CkMbp57.XPjy.marl6sUW.9V_bqaBf8o; path=/; expires=Thu, 19-Jun-25 08:44:49 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9521932d6e54404f-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:44:50,160 [DEBUG] request_id: req_a82fdae06481e0ddd66cf947d6656155
2025-06-19 13:44:50,161 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-19 13:44:50,162 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-19 13:44:50,191 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6c5a3867-969c-41ef-9341-51372d72ef77', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-19 13:44:50,193 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:44:50,194 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:44:50,195 [DEBUG] send_request_headers.complete
2025-06-19 13:44:50,195 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:44:50,196 [DEBUG] send_request_body.complete
2025-06-19 13:44:50,196 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:44:58,470 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:14:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'7173'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'7177'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_539fc3e970abecdaa888a65cefe5b1fa'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9521933b2e4c404f-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:44:58,472 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:44:58,472 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:44:58,475 [DEBUG] receive_response_body.complete
2025-06-19 13:44:58,475 [DEBUG] response_closed.started
2025-06-19 13:44:58,476 [DEBUG] response_closed.complete
2025-06-19 13:44:58,476 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:14:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '7173', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '7177', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_539fc3e970abecdaa888a65cefe5b1fa', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9521933b2e4c404f-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:44:58,478 [DEBUG] request_id: req_539fc3e970abecdaa888a65cefe5b1fa
2025-06-19 13:44:58,479 [INFO]  Meal plan generated with 10 dishes
2025-06-19 13:44:58,480 [INFO] 127.0.0.1 - - [19/Jun/2025 13:44:58] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-19 13:45:11,109 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats with less sugar
2025-06-19 13:45:11,110 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e68ff2ec-e14b-4d09-b6d9-0bcf62034949', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats with less sugar'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 13:45:11,113 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:45:11,114 [DEBUG] close.started
2025-06-19 13:45:11,115 [DEBUG] close.complete
2025-06-19 13:45:11,116 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 13:45:11,230 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020CE62F6890>
2025-06-19 13:45:11,230 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000020CE5CAFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-19 13:45:11,302 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020CE62F6F90>
2025-06-19 13:45:11,302 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:45:11,303 [DEBUG] send_request_headers.complete
2025-06-19 13:45:11,304 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:45:11,304 [DEBUG] send_request_body.complete
2025-06-19 13:45:11,305 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:45:13,446 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:15:13 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1421'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1426'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29906'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'188ms'), (b'x-request-id', b'req_f55f4d7ae8d009ed70c8eeb630411803'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'952193bf2a508af9-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:45:13,448 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:45:13,449 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:45:13,459 [DEBUG] receive_response_body.complete
2025-06-19 13:45:13,460 [DEBUG] response_closed.started
2025-06-19 13:45:13,460 [DEBUG] response_closed.complete
2025-06-19 13:45:13,461 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:15:13 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1421', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1426', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29906', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '188ms', 'x-request-id': 'req_f55f4d7ae8d009ed70c8eeb630411803', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '952193bf2a508af9-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:45:13,462 [DEBUG] request_id: req_f55f4d7ae8d009ed70c8eeb630411803
2025-06-19 13:45:13,463 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-19 13:45:13,466 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-19 13:45:13,488 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a0de97e3-df2a-41fc-b99d-39fa380d9ebc', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-19 13:45:13,490 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:45:13,491 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:45:13,492 [DEBUG] send_request_headers.complete
2025-06-19 13:45:13,492 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:45:13,493 [DEBUG] send_request_body.complete
2025-06-19 13:45:13,494 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:45:20,960 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:15:20 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'5889'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5893'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_1095969f4f398843f262d50f3e96e3ba'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'952193ccf8d08af9-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:45:20,962 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:45:20,962 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:45:20,963 [DEBUG] receive_response_body.complete
2025-06-19 13:45:20,963 [DEBUG] response_closed.started
2025-06-19 13:45:20,963 [DEBUG] response_closed.complete
2025-06-19 13:45:20,963 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:15:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '5889', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5893', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_1095969f4f398843f262d50f3e96e3ba', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '952193ccf8d08af9-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:45:20,965 [DEBUG] request_id: req_1095969f4f398843f262d50f3e96e3ba
2025-06-19 13:45:20,967 [INFO]  Meal plan generated with 10 dishes
2025-06-19 13:45:20,968 [INFO] 127.0.0.1 - - [19/Jun/2025 13:45:20] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-19 13:47:02,854 [INFO] CSV loaded successfully.
2025-06-19 13:47:02,976 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-06-19 13:47:02,977 [INFO] [33mPress CTRL+C to quit[0m
2025-06-19 13:47:02,979 [INFO]  * Restarting with stat
2025-06-19 13:47:07,951 [INFO] CSV loaded successfully.
2025-06-19 13:47:08,001 [WARNING]  * Debugger is active!
2025-06-19 13:47:08,010 [INFO]  * Debugger PIN: 461-893-414
2025-06-19 13:47:09,447 [INFO] 127.0.0.1 - - [19/Jun/2025 13:47:09] "GET / HTTP/1.1" 200 -
2025-06-19 13:47:09,683 [INFO] 127.0.0.1 - - [19/Jun/2025 13:47:09] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-19 13:47:11,525 [INFO] 127.0.0.1 - - [19/Jun/2025 13:47:11] "GET /meal-planner HTTP/1.1" 200 -
2025-06-19 13:47:29,980 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats 
2025-06-19 13:47:30,436 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-36191825-cfd5-4f20-8c68-c1aaba20af58', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 13:47:30,451 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:47:30,452 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 13:47:30,581 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002C430862610>
2025-06-19 13:47:30,581 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000002C43022FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-19 13:47:30,938 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002C430862690>
2025-06-19 13:47:30,939 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:47:30,940 [DEBUG] send_request_headers.complete
2025-06-19 13:47:30,940 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:47:30,941 [DEBUG] send_request_body.complete
2025-06-19 13:47:30,941 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:47:32,453 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:17:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1166'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1173'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_811eb0d59ace70330df813e086c1c1ca'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=NYGaffGt2P5LZw0QCe6QMGalX2jb.fKl2zlnQBWnoVc-1750321052-1.0.1.1-AwHo_7aMBp77aH2SzQaN_eQqXfwxhatV4s9xrxk6pzcjv_4TptjQEXJ8jzHv_J8fuIi7hqp_yoIvadX99Z_kvq0d15Tds76.vsh6Uz_djkQ; path=/; expires=Thu, 19-Jun-25 08:47:32 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=YvonUi_WckU2JWdRz8kld3ObRWQPb0lgBWAmRP2lRN4-1750321052306-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95219727eef22edc-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:47:32,457 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:47:32,457 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:47:32,458 [DEBUG] receive_response_body.complete
2025-06-19 13:47:32,459 [DEBUG] response_closed.started
2025-06-19 13:47:32,459 [DEBUG] response_closed.complete
2025-06-19 13:47:32,460 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 19 Jun 2025 08:17:32 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '1166'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1173'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29910'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '180ms'), ('x-request-id', 'req_811eb0d59ace70330df813e086c1c1ca'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=NYGaffGt2P5LZw0QCe6QMGalX2jb.fKl2zlnQBWnoVc-1750321052-1.0.1.1-AwHo_7aMBp77aH2SzQaN_eQqXfwxhatV4s9xrxk6pzcjv_4TptjQEXJ8jzHv_J8fuIi7hqp_yoIvadX99Z_kvq0d15Tds76.vsh6Uz_djkQ; path=/; expires=Thu, 19-Jun-25 08:47:32 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=YvonUi_WckU2JWdRz8kld3ObRWQPb0lgBWAmRP2lRN4-1750321052306-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '95219727eef22edc-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-19 13:47:32,463 [DEBUG] request_id: req_811eb0d59ace70330df813e086c1c1ca
2025-06-19 13:47:32,467 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-19 13:47:32,473 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-19 13:47:32,504 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-06bfd54a-de67-48d0-85fd-9b333fd2da95', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-19 13:47:32,507 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:47:32,508 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:47:32,509 [DEBUG] send_request_headers.complete
2025-06-19 13:47:32,509 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:47:32,510 [DEBUG] send_request_body.complete
2025-06-19 13:47:32,510 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:47:43,595 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:17:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'10797'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'10799'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_02a0ef34633b197d368eeda7e37adaa4'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95219731aaaf2edc-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:47:43,597 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:47:43,597 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:47:43,598 [DEBUG] receive_response_body.complete
2025-06-19 13:47:43,599 [DEBUG] response_closed.started
2025-06-19 13:47:43,599 [DEBUG] response_closed.complete
2025-06-19 13:47:43,600 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:17:43 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '10797', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '10799', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_02a0ef34633b197d368eeda7e37adaa4', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95219731aaaf2edc-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:47:43,601 [DEBUG] request_id: req_02a0ef34633b197d368eeda7e37adaa4
2025-06-19 13:47:43,602 [INFO]  Meal plan generated with 10 dishes
2025-06-19 13:47:43,604 [INFO] 127.0.0.1 - - [19/Jun/2025 13:47:43] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-19 13:48:44,089 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats 
2025-06-19 13:48:44,094 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d154065f-26e8-49fe-b87e-2eadbd68f2b9', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 13:48:44,101 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:48:44,105 [DEBUG] close.started
2025-06-19 13:48:44,107 [DEBUG] close.complete
2025-06-19 13:48:44,108 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 13:48:44,266 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002C430BD1910>
2025-06-19 13:48:44,267 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000002C43022FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-19 13:48:44,336 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002C430BD8390>
2025-06-19 13:48:44,337 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:48:44,339 [DEBUG] send_request_headers.complete
2025-06-19 13:48:44,339 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:48:44,340 [DEBUG] send_request_body.complete
2025-06-19 13:48:44,340 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:48:46,166 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:18:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'748'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'751'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_86e9e134bd7c59258b025b4c5f484842'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'952198f2cae989e2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:48:46,168 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:48:46,168 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:48:46,169 [DEBUG] receive_response_body.complete
2025-06-19 13:48:46,170 [DEBUG] response_closed.started
2025-06-19 13:48:46,170 [DEBUG] response_closed.complete
2025-06-19 13:48:46,171 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:18:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '748', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '751', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_86e9e134bd7c59258b025b4c5f484842', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '952198f2cae989e2-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:48:46,174 [DEBUG] request_id: req_86e9e134bd7c59258b025b4c5f484842
2025-06-19 13:48:46,175 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-19 13:48:46,179 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-19 13:48:46,215 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e7951bdd-bb3f-401e-88e1-772b02d104ff', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-19 13:48:46,218 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:48:46,219 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:48:46,222 [DEBUG] send_request_headers.complete
2025-06-19 13:48:46,222 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:48:46,223 [DEBUG] send_request_body.complete
2025-06-19 13:48:46,224 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:48:48,933 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats 
2025-06-19 13:48:48,935 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-9edceff5-6a55-47f8-809b-5f0a58c4da30', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 13:48:48,938 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:48:48,939 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 13:48:48,987 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002C430BF9910>
2025-06-19 13:48:48,988 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000002C43022FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-19 13:48:49,045 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002C430BF9E50>
2025-06-19 13:48:49,045 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:48:49,047 [DEBUG] send_request_headers.complete
2025-06-19 13:48:49,047 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:48:49,048 [DEBUG] send_request_body.complete
2025-06-19 13:48:49,048 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:48:50,852 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:18:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1296'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1299'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_3dc1adfb191877eceb6390f0a9ccf13b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9521990fe9e03f79-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:48:50,854 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:48:50,854 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:48:50,855 [DEBUG] receive_response_body.complete
2025-06-19 13:48:50,855 [DEBUG] response_closed.started
2025-06-19 13:48:50,856 [DEBUG] response_closed.complete
2025-06-19 13:48:50,856 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:18:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1296', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1299', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_3dc1adfb191877eceb6390f0a9ccf13b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9521990fe9e03f79-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:48:50,859 [DEBUG] request_id: req_3dc1adfb191877eceb6390f0a9ccf13b
2025-06-19 13:48:50,860 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-19 13:48:50,864 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-19 13:48:50,896 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-06fe6682-4278-447d-843a-e76d26194f03', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-19 13:48:50,898 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:48:50,898 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:48:50,899 [DEBUG] send_request_headers.complete
2025-06-19 13:48:50,899 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:48:50,900 [DEBUG] send_request_body.complete
2025-06-19 13:48:50,901 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:48:52,737 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:18:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'5510'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5513'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_b0668333aa15ff280e01691c68b63195'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'952198fe689b89e2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:48:52,739 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:48:52,740 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:48:52,740 [DEBUG] receive_response_body.complete
2025-06-19 13:48:52,741 [DEBUG] response_closed.started
2025-06-19 13:48:52,741 [DEBUG] response_closed.complete
2025-06-19 13:48:52,742 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:18:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '5510', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5513', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_b0668333aa15ff280e01691c68b63195', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '952198fe689b89e2-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:48:52,743 [DEBUG] request_id: req_b0668333aa15ff280e01691c68b63195
2025-06-19 13:48:52,744 [INFO]  Meal plan generated with 10 dishes
2025-06-19 13:48:52,746 [INFO] 127.0.0.1 - - [19/Jun/2025 13:48:52] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-19 13:48:56,692 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:18:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'5478'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5494'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_27a614ff40ef02cdfc4d35b1c5b61674'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9521991baf383f79-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:48:56,694 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:48:56,694 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:48:56,697 [DEBUG] receive_response_body.complete
2025-06-19 13:48:56,697 [DEBUG] response_closed.started
2025-06-19 13:48:56,698 [DEBUG] response_closed.complete
2025-06-19 13:48:56,698 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:18:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '5478', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5494', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_27a614ff40ef02cdfc4d35b1c5b61674', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9521991baf383f79-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:48:56,701 [DEBUG] request_id: req_27a614ff40ef02cdfc4d35b1c5b61674
2025-06-19 13:48:56,702 [INFO]  Meal plan generated with 10 dishes
2025-06-19 13:48:56,703 [INFO] 127.0.0.1 - - [19/Jun/2025 13:48:56] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-19 13:48:59,786 [INFO] 127.0.0.1 - - [19/Jun/2025 13:48:59] "GET /meal-planner HTTP/1.1" 200 -
2025-06-19 13:49:39,572 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats 
2025-06-19 13:49:39,575 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-27615414-e53d-4e52-a49b-91ab7cad4811', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 13:49:39,578 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:49:39,579 [DEBUG] close.started
2025-06-19 13:49:39,580 [DEBUG] close.complete
2025-06-19 13:49:39,581 [DEBUG] close.started
2025-06-19 13:49:39,581 [DEBUG] close.complete
2025-06-19 13:49:39,582 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 13:49:39,724 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002C430BD1A50>
2025-06-19 13:49:39,724 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000002C43022FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-19 13:49:39,836 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000002C430BD8350>
2025-06-19 13:49:39,836 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:49:39,837 [DEBUG] send_request_headers.complete
2025-06-19 13:49:39,837 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:49:39,838 [DEBUG] send_request_body.complete
2025-06-19 13:49:39,838 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:49:41,403 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:19:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1105'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1107'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_a7db5c221811b767e3272870a65dec7d'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95219a4d8e5c837d-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:49:41,405 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:49:41,406 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:49:41,407 [DEBUG] receive_response_body.complete
2025-06-19 13:49:41,407 [DEBUG] response_closed.started
2025-06-19 13:49:41,407 [DEBUG] response_closed.complete
2025-06-19 13:49:41,408 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:19:41 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1105', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1107', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_a7db5c221811b767e3272870a65dec7d', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95219a4d8e5c837d-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:49:41,408 [DEBUG] request_id: req_a7db5c221811b767e3272870a65dec7d
2025-06-19 13:49:41,410 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-19 13:49:41,411 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-19 13:49:41,439 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a12caf5b-95bf-46b3-b7a4-e87c524654f8', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-19 13:49:41,442 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:49:41,443 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:49:41,444 [DEBUG] send_request_headers.complete
2025-06-19 13:49:41,445 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:49:41,446 [DEBUG] send_request_body.complete
2025-06-19 13:49:41,446 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:49:46,884 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:19:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'5071'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5073'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_6be1f2b468262c0be04fc552cee285f3'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95219a5779c0837d-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:49:46,886 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:49:46,887 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:49:46,887 [DEBUG] receive_response_body.complete
2025-06-19 13:49:46,888 [DEBUG] response_closed.started
2025-06-19 13:49:46,888 [DEBUG] response_closed.complete
2025-06-19 13:49:46,889 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:19:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '5071', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5073', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_6be1f2b468262c0be04fc552cee285f3', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95219a5779c0837d-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:49:46,890 [DEBUG] request_id: req_6be1f2b468262c0be04fc552cee285f3
2025-06-19 13:49:46,892 [INFO]  Meal plan generated with 10 dishes
2025-06-19 13:49:46,893 [INFO] 127.0.0.1 - - [19/Jun/2025 13:49:46] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-19 13:51:06,108 [INFO] CSV loaded successfully.
2025-06-19 13:51:06,169 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-06-19 13:51:06,170 [INFO] [33mPress CTRL+C to quit[0m
2025-06-19 13:51:06,173 [INFO]  * Restarting with stat
2025-06-19 13:51:09,631 [INFO] CSV loaded successfully.
2025-06-19 13:51:09,674 [WARNING]  * Debugger is active!
2025-06-19 13:51:09,680 [INFO]  * Debugger PIN: 461-893-414
2025-06-19 13:51:14,884 [INFO] 127.0.0.1 - - [19/Jun/2025 13:51:14] "GET / HTTP/1.1" 200 -
2025-06-19 13:51:15,078 [INFO] 127.0.0.1 - - [19/Jun/2025 13:51:15] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-19 13:51:17,058 [INFO] 127.0.0.1 - - [19/Jun/2025 13:51:17] "GET /meal-planner HTTP/1.1" 200 -
2025-06-19 13:51:36,528 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats
2025-06-19 13:51:36,946 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d1df417b-46da-43e0-9284-63e501440cc6', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein , 30 % carbs and 20 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 13:51:36,959 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:51:36,960 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 13:51:37,061 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02702850>
2025-06-19 13:51:37,062 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000024E020CFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-19 13:51:37,130 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02702910>
2025-06-19 13:51:37,131 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:51:37,132 [DEBUG] send_request_headers.complete
2025-06-19 13:51:37,132 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:51:37,133 [DEBUG] send_request_body.complete
2025-06-19 13:51:37,133 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:51:38,501 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:21:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'702'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'889'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_73e8e1ae40e116ee176110b8bb86215f'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=izpJF3OlGsjpckh7huH645Aw.otwyMcIVijjvbXw05w-1750321298-1.0.1.1-8YP8VFYuufhOXGlyaXzRDJ9j7hofnq3CaQSeaSzhj.v5lpx4XuYFm.POA7cr6RfZHicKHpxRRkgR1KxtTJGElXkQjPJ3nIUCfviYW0OOVkQ; path=/; expires=Thu, 19-Jun-25 08:51:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=IUssUwsaHrGjZFzDiAL32GN7cf5JMZl6cBU9CtsKHcw-1750321298291-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95219d2abd198b06-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:51:38,505 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:51:38,505 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:51:38,506 [DEBUG] receive_response_body.complete
2025-06-19 13:51:38,507 [DEBUG] response_closed.started
2025-06-19 13:51:38,507 [DEBUG] response_closed.complete
2025-06-19 13:51:38,508 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 19 Jun 2025 08:21:38 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'cs-soft-solutions-india-pvt-ltd'), ('openai-processing-ms', '702'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '889'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29910'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '180ms'), ('x-request-id', 'req_73e8e1ae40e116ee176110b8bb86215f'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=izpJF3OlGsjpckh7huH645Aw.otwyMcIVijjvbXw05w-1750321298-1.0.1.1-8YP8VFYuufhOXGlyaXzRDJ9j7hofnq3CaQSeaSzhj.v5lpx4XuYFm.POA7cr6RfZHicKHpxRRkgR1KxtTJGElXkQjPJ3nIUCfviYW0OOVkQ; path=/; expires=Thu, 19-Jun-25 08:51:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=IUssUwsaHrGjZFzDiAL32GN7cf5JMZl6cBU9CtsKHcw-1750321298291-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '95219d2abd198b06-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-19 13:51:38,511 [DEBUG] request_id: req_73e8e1ae40e116ee176110b8bb86215f
2025-06-19 13:51:38,515 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-19 13:51:38,518 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-19 13:51:38,547 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e5bcce44-b431-47e8-9d8d-8b0f296dc53e', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-19 13:51:38,551 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:51:38,552 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:51:38,552 [DEBUG] send_request_headers.complete
2025-06-19 13:51:38,553 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:51:38,553 [DEBUG] send_request_body.complete
2025-06-19 13:51:38,554 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:51:43,458 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:21:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4575'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4579'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_644373a26d27f341dfce3d1a29bbe090'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95219d339fdc8b06-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:51:43,460 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:51:43,461 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:51:43,462 [DEBUG] receive_response_body.complete
2025-06-19 13:51:43,462 [DEBUG] response_closed.started
2025-06-19 13:51:43,462 [DEBUG] response_closed.complete
2025-06-19 13:51:43,463 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:21:43 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4575', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4579', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_644373a26d27f341dfce3d1a29bbe090', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95219d339fdc8b06-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:51:43,463 [DEBUG] request_id: req_644373a26d27f341dfce3d1a29bbe090
2025-06-19 13:51:43,465 [INFO]  Meal plan generated with 10 dishes
2025-06-19 13:51:43,466 [INFO] 127.0.0.1 - - [19/Jun/2025 13:51:43] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-19 13:51:54,875 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats
2025-06-19 13:51:54,878 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f76e7af4-38ed-46b1-9d3e-e9e64835fe94', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 13:51:54,881 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:51:54,881 [DEBUG] close.started
2025-06-19 13:51:54,882 [DEBUG] close.complete
2025-06-19 13:51:54,883 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 13:51:55,120 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02A79410>
2025-06-19 13:51:55,120 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000024E020CFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-19 13:51:55,182 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02A78B10>
2025-06-19 13:51:55,183 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:51:55,184 [DEBUG] send_request_headers.complete
2025-06-19 13:51:55,184 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:51:55,184 [DEBUG] send_request_body.complete
2025-06-19 13:51:55,185 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:51:56,113 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:21:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'564'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'570'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_9d0cbdf0ac9b3594c2b42d3a3567eca7'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95219d9b4e6085f6-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:51:56,115 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:51:56,116 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:51:56,117 [DEBUG] receive_response_body.complete
2025-06-19 13:51:56,117 [DEBUG] response_closed.started
2025-06-19 13:51:56,117 [DEBUG] response_closed.complete
2025-06-19 13:51:56,118 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:21:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '564', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '570', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_9d0cbdf0ac9b3594c2b42d3a3567eca7', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95219d9b4e6085f6-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:51:56,119 [DEBUG] request_id: req_9d0cbdf0ac9b3594c2b42d3a3567eca7
2025-06-19 13:51:56,120 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-19 13:51:56,123 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-19 13:51:56,153 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-eda3efcc-4b3a-4ab8-a9f0-2686d3bfec4f', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-19 13:51:56,156 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:51:56,156 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:51:56,157 [DEBUG] send_request_headers.complete
2025-06-19 13:51:56,157 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:51:56,158 [DEBUG] send_request_body.complete
2025-06-19 13:51:56,159 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:51:56,732 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats
2025-06-19 13:51:56,735 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-28b752ea-e518-489c-a31e-e40119e9ae2a', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 13:51:56,738 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:51:56,739 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 13:51:56,808 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02A67890>
2025-06-19 13:51:56,809 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000024E020CFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-19 13:51:56,882 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02A82790>
2025-06-19 13:51:56,883 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:51:56,884 [DEBUG] send_request_headers.complete
2025-06-19 13:51:56,884 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:51:56,885 [DEBUG] send_request_body.complete
2025-06-19 13:51:56,885 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:51:56,951 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats
2025-06-19 13:51:56,954 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-68f09a4e-fd69-4e33-a30a-94198e6cc130', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 13:51:56,956 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:51:56,957 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 13:51:57,061 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02A7AF90>
2025-06-19 13:51:57,062 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000024E020CFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-19 13:51:57,129 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02A79A90>
2025-06-19 13:51:57,130 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:51:57,131 [DEBUG] send_request_headers.complete
2025-06-19 13:51:57,132 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:51:57,133 [DEBUG] send_request_body.complete
2025-06-19 13:51:57,133 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:51:57,137 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats
2025-06-19 13:51:57,141 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b214af87-cada-4b06-949e-4ae862fbda35', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 13:51:57,143 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:51:57,145 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 13:51:57,195 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02A9E990>
2025-06-19 13:51:57,195 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000024E020CFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-19 13:51:57,257 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02A9EAD0>
2025-06-19 13:51:57,257 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:51:57,258 [DEBUG] send_request_headers.complete
2025-06-19 13:51:57,258 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:51:57,259 [DEBUG] send_request_body.complete
2025-06-19 13:51:57,260 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:51:58,281 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:21:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1034'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1037'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_049981cc9db322907da42e358852409c'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95219da6091189f0-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:51:58,283 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:51:58,284 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:51:58,285 [DEBUG] receive_response_body.complete
2025-06-19 13:51:58,285 [DEBUG] response_closed.started
2025-06-19 13:51:58,285 [DEBUG] response_closed.complete
2025-06-19 13:51:58,285 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:21:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1034', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1037', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_049981cc9db322907da42e358852409c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95219da6091189f0-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:51:58,287 [DEBUG] request_id: req_049981cc9db322907da42e358852409c
2025-06-19 13:51:58,288 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-19 13:51:58,290 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-19 13:51:58,320 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-bf16e1b4-c069-4904-bb07-9fa1f70ee6ad', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-19 13:51:58,322 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:51:58,323 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:51:58,324 [DEBUG] send_request_headers.complete
2025-06-19 13:51:58,324 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:51:58,325 [DEBUG] send_request_body.complete
2025-06-19 13:51:58,325 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:51:58,982 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:21:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1419'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1455'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_faf8f22888eac89891a241618448a469'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95219da78a0dff60-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:51:58,985 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:51:58,986 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:51:58,988 [DEBUG] receive_response_body.complete
2025-06-19 13:51:58,989 [DEBUG] response_closed.started
2025-06-19 13:51:58,989 [DEBUG] response_closed.complete
2025-06-19 13:51:58,990 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:21:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1419', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1455', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_faf8f22888eac89891a241618448a469', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95219da78a0dff60-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:51:58,991 [DEBUG] request_id: req_faf8f22888eac89891a241618448a469
2025-06-19 13:51:58,992 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-19 13:51:58,995 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-19 13:51:59,035 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c336d671-428d-409b-92ac-7c7c36c2e77b', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-19 13:51:59,039 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:51:59,040 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:51:59,041 [DEBUG] send_request_headers.complete
2025-06-19 13:51:59,041 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:51:59,042 [DEBUG] send_request_body.complete
2025-06-19 13:51:59,042 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:52:02,870 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:22:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'6418'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'6420'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_681c37b9346dce564a51576961021b96'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95219da16db985f6-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:52:02,872 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:52:02,873 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:52:02,874 [DEBUG] receive_response_body.complete
2025-06-19 13:52:02,874 [DEBUG] response_closed.started
2025-06-19 13:52:02,875 [DEBUG] response_closed.complete
2025-06-19 13:52:02,875 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:22:02 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '6418', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '6420', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_681c37b9346dce564a51576961021b96', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95219da16db985f6-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:52:02,879 [DEBUG] request_id: req_681c37b9346dce564a51576961021b96
2025-06-19 13:52:02,880 [INFO]  Meal plan generated with 10 dishes
2025-06-19 13:52:02,882 [INFO] 127.0.0.1 - - [19/Jun/2025 13:52:02] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-19 13:52:04,203 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:22:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'5414'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5416'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_611607a68dd4d4f67a522c9ddeffce54'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95219daf1bc789f0-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:52:04,204 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:52:04,205 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:52:04,206 [DEBUG] receive_response_body.complete
2025-06-19 13:52:04,206 [DEBUG] response_closed.started
2025-06-19 13:52:04,206 [DEBUG] response_closed.complete
2025-06-19 13:52:04,207 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:22:04 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '5414', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5416', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_611607a68dd4d4f67a522c9ddeffce54', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95219daf1bc789f0-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:52:04,208 [DEBUG] request_id: req_611607a68dd4d4f67a522c9ddeffce54
2025-06-19 13:52:04,210 [INFO]  Meal plan generated with 10 dishes
2025-06-19 13:52:04,212 [INFO] 127.0.0.1 - - [19/Jun/2025 13:52:04] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-19 13:52:05,427 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:22:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'5836'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5838'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_caed20fefeb4d8dcbc0989a70d0229f5'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95219db37ad8ff60-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:52:05,430 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:52:05,431 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:52:05,432 [DEBUG] receive_response_body.complete
2025-06-19 13:52:05,433 [DEBUG] response_closed.started
2025-06-19 13:52:05,433 [DEBUG] response_closed.complete
2025-06-19 13:52:05,434 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:22:05 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '5836', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5838', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_caed20fefeb4d8dcbc0989a70d0229f5', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95219db37ad8ff60-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:52:05,438 [DEBUG] request_id: req_caed20fefeb4d8dcbc0989a70d0229f5
2025-06-19 13:52:05,440 [INFO]  Meal plan generated with 10 dishes
2025-06-19 13:52:05,442 [INFO] 127.0.0.1 - - [19/Jun/2025 13:52:05] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-19 13:52:06,040 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:22:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'7987'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'7992'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_088173604805787a7c05dc58ff3beaa7'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95219da87a0889e2-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:52:06,045 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:52:06,046 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:52:06,048 [DEBUG] receive_response_body.complete
2025-06-19 13:52:06,049 [DEBUG] response_closed.started
2025-06-19 13:52:06,049 [DEBUG] response_closed.complete
2025-06-19 13:52:06,050 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:22:05 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '7987', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '7992', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_088173604805787a7c05dc58ff3beaa7', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95219da87a0889e2-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:52:06,052 [DEBUG] request_id: req_088173604805787a7c05dc58ff3beaa7
2025-06-19 13:52:06,053 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-19 13:52:06,057 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-19 13:52:06,101 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e30dadbe-8a04-4cf2-863c-cdc48d6dc5ca', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-19 13:52:06,103 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 13:52:06,104 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 13:52:06,105 [DEBUG] send_request_headers.complete
2025-06-19 13:52:06,106 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 13:52:06,107 [DEBUG] send_request_body.complete
2025-06-19 13:52:06,108 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 13:52:14,321 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 08:22:14 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'7820'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'7823'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_ecf9e1b3dacc7b6b85a4b671349e62a8'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95219ddfaae685f6-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 13:52:14,323 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 13:52:14,324 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 13:52:14,324 [DEBUG] receive_response_body.complete
2025-06-19 13:52:14,325 [DEBUG] response_closed.started
2025-06-19 13:52:14,325 [DEBUG] response_closed.complete
2025-06-19 13:52:14,326 [DEBUG] close.started
2025-06-19 13:52:14,326 [DEBUG] close.complete
2025-06-19 13:52:14,327 [DEBUG] close.started
2025-06-19 13:52:14,327 [DEBUG] close.complete
2025-06-19 13:52:14,328 [DEBUG] close.started
2025-06-19 13:52:14,330 [DEBUG] close.complete
2025-06-19 13:52:14,332 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 08:22:14 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '7820', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '7823', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_ecf9e1b3dacc7b6b85a4b671349e62a8', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95219ddfaae685f6-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 13:52:14,336 [DEBUG] request_id: req_ecf9e1b3dacc7b6b85a4b671349e62a8
2025-06-19 13:52:14,337 [INFO]  Meal plan generated with 10 dishes
2025-06-19 13:52:14,338 [INFO] 127.0.0.1 - - [19/Jun/2025 13:52:14] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-19 14:52:20,463 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats
2025-06-19 14:52:20,466 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4d7817d3-0218-4beb-afb9-efef21113d9f', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 14:52:20,469 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 14:52:20,470 [DEBUG] close.started
2025-06-19 14:52:20,471 [DEBUG] close.complete
2025-06-19 14:52:20,472 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 14:52:20,596 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02A9D310>
2025-06-19 14:52:20,596 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000024E020CFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-19 14:52:20,672 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02A9D510>
2025-06-19 14:52:20,673 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 14:52:20,673 [DEBUG] send_request_headers.complete
2025-06-19 14:52:20,674 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 14:52:20,674 [DEBUG] send_request_body.complete
2025-06-19 14:52:20,675 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 14:52:21,953 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 09:22:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'629'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'631'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_f0bc792a807ec4dfd30fc9a53f9d3dc9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=3C_a.1Xmvb8OtjODoI1v8oy4tP6exyKboxlPCyU0Fg0-1750324941-1.0.1.1-AwrhjWD35ZqDyBOgAL14chlif8D.WZmUgvmRVpz.19VIzrjy7iQym6iSGuh7Ah67uAP2ltR_2ANLGP27na3yw2hxINBpmihY69FvAW9.EWQ; path=/; expires=Thu, 19-Jun-25 09:52:21 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9521f61d5bfc3fe6-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 14:52:21,955 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 14:52:21,956 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 14:52:21,957 [DEBUG] receive_response_body.complete
2025-06-19 14:52:21,957 [DEBUG] response_closed.started
2025-06-19 14:52:21,958 [DEBUG] response_closed.complete
2025-06-19 14:52:21,958 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 09:22:21 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '629', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '631', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_f0bc792a807ec4dfd30fc9a53f9d3dc9', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=3C_a.1Xmvb8OtjODoI1v8oy4tP6exyKboxlPCyU0Fg0-1750324941-1.0.1.1-AwrhjWD35ZqDyBOgAL14chlif8D.WZmUgvmRVpz.19VIzrjy7iQym6iSGuh7Ah67uAP2ltR_2ANLGP27na3yw2hxINBpmihY69FvAW9.EWQ; path=/; expires=Thu, 19-Jun-25 09:52:21 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9521f61d5bfc3fe6-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 14:52:21,962 [DEBUG] request_id: req_f0bc792a807ec4dfd30fc9a53f9d3dc9
2025-06-19 14:52:21,963 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-19 14:52:21,966 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-19 14:52:22,008 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-019169f9-7763-4105-8084-a2ffed39c268', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-19 14:52:22,010 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 14:52:22,012 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 14:52:22,013 [DEBUG] send_request_headers.complete
2025-06-19 14:52:22,014 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 14:52:22,015 [DEBUG] send_request_body.complete
2025-06-19 14:52:22,015 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 14:52:26,989 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 09:22:26 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4302'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4312'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_126355e24723d3ad0618caf0be4c4156'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9521f625be503fe6-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 14:52:26,991 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 14:52:26,991 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 14:52:27,004 [DEBUG] receive_response_body.complete
2025-06-19 14:52:27,005 [DEBUG] response_closed.started
2025-06-19 14:52:27,006 [DEBUG] response_closed.complete
2025-06-19 14:52:27,006 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 09:22:26 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4302', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4312', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_126355e24723d3ad0618caf0be4c4156', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9521f625be503fe6-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 14:52:27,008 [DEBUG] request_id: req_126355e24723d3ad0618caf0be4c4156
2025-06-19 14:52:27,009 [INFO]  Meal plan generated with 10 dishes
2025-06-19 14:52:27,012 [INFO] 127.0.0.1 - - [19/Jun/2025 14:52:27] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-19 15:40:19,468 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats
2025-06-19 15:40:19,471 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ac570445-4e62-45e6-b1d8-e01a0311eb27', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-19 15:40:19,474 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 15:40:19,475 [DEBUG] close.started
2025-06-19 15:40:19,476 [DEBUG] close.complete
2025-06-19 15:40:19,477 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-19 15:40:19,643 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02AC4C90>
2025-06-19 15:40:19,644 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000024E020CFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-19 15:40:19,710 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02AC5BD0>
2025-06-19 15:40:19,710 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 15:40:19,711 [DEBUG] send_request_headers.complete
2025-06-19 15:40:19,712 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 15:40:19,712 [DEBUG] send_request_body.complete
2025-06-19 15:40:19,712 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 15:40:21,545 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 10:10:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1075'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1079'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_c91b4d660e5adda6c763ade09f1398ad'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=QHjgs5HvYhGi.cQGqma23GN43JntEmAju2wKmNwTYmM-1750327821-1.0.1.1-1ywrJHY2eh6LIc589YRBH0wANON0l8XycoMLGrZt8lVw7HA.Y3epa57dZGbgro0ytZDD26WTF8G6hpdvUqDbKDCRYFs8qYlOjFGYL8dSMCQ; path=/; expires=Thu, 19-Jun-25 10:40:21 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95223c67c88289f6-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 15:40:21,550 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:40:21,550 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 15:40:21,551 [DEBUG] receive_response_body.complete
2025-06-19 15:40:21,552 [DEBUG] response_closed.started
2025-06-19 15:40:21,552 [DEBUG] response_closed.complete
2025-06-19 15:40:21,553 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 10:10:21 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1075', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1079', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_c91b4d660e5adda6c763ade09f1398ad', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=QHjgs5HvYhGi.cQGqma23GN43JntEmAju2wKmNwTYmM-1750327821-1.0.1.1-1ywrJHY2eh6LIc589YRBH0wANON0l8XycoMLGrZt8lVw7HA.Y3epa57dZGbgro0ytZDD26WTF8G6hpdvUqDbKDCRYFs8qYlOjFGYL8dSMCQ; path=/; expires=Thu, 19-Jun-25 10:40:21 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95223c67c88289f6-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 15:40:21,555 [DEBUG] request_id: req_c91b4d660e5adda6c763ade09f1398ad
2025-06-19 15:40:21,557 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-19 15:40:21,559 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-19 15:40:21,586 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b32688df-e09c-40c4-ac82-c6a7f4c5dddf', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-19 15:40:21,588 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-19 15:40:21,589 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-19 15:40:21,590 [DEBUG] send_request_headers.complete
2025-06-19 15:40:21,590 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-19 15:40:21,591 [DEBUG] send_request_body.complete
2025-06-19 15:40:21,592 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-19 15:40:26,025 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 19 Jun 2025 10:10:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3721'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3724'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_17a8d9be41d89492e651d824c6d097d7'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95223c738d4e89f6-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-19 15:40:26,027 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-19 15:40:26,027 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-19 15:40:26,027 [DEBUG] receive_response_body.complete
2025-06-19 15:40:26,028 [DEBUG] response_closed.started
2025-06-19 15:40:26,028 [DEBUG] response_closed.complete
2025-06-19 15:40:26,029 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 19 Jun 2025 10:10:25 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3721', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3724', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_17a8d9be41d89492e651d824c6d097d7', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95223c738d4e89f6-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-19 15:40:26,030 [DEBUG] request_id: req_17a8d9be41d89492e651d824c6d097d7
2025-06-19 15:40:26,032 [INFO]  Meal plan generated with 10 dishes
2025-06-19 15:40:26,033 [INFO] 127.0.0.1 - - [19/Jun/2025 15:40:26] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-19 15:40:48,124 [INFO] 127.0.0.1 - - [19/Jun/2025 15:40:48] "GET / HTTP/1.1" 200 -
2025-06-19 15:40:48,159 [INFO] 127.0.0.1 - - [19/Jun/2025 15:40:48] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-19 15:40:50,549 [INFO] 127.0.0.1 - - [19/Jun/2025 15:40:50] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-19 15:41:02,549 [INFO] 127.0.0.1 - - [19/Jun/2025 15:41:02] "POST /calorie-calculator HTTP/1.1" 200 -
2025-06-20 12:50:06,035 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats
2025-06-20 12:50:06,039 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f362cbe9-5421-49e1-8481-7a29420d137b', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-20 12:50:06,041 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-20 12:50:06,042 [DEBUG] close.started
2025-06-20 12:50:06,043 [DEBUG] close.complete
2025-06-20 12:50:06,044 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-20 12:50:12,539 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02ACDB50>
2025-06-20 12:50:12,539 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000024E020CFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-20 12:50:12,868 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02ACD710>
2025-06-20 12:50:12,869 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-20 12:50:12,870 [DEBUG] send_request_headers.complete
2025-06-20 12:50:12,870 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-20 12:50:12,871 [DEBUG] send_request_body.complete
2025-06-20 12:50:12,871 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-20 12:50:15,058 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 20 Jun 2025 07:20:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1265'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1267'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_ac4dc418587a0f83c79ec34759517192'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=SxKlo9vJqW29gTT1VHMz5iJ2DmZlt_1fFyoXdTekUno-1750404015-1.0.1.1-K.IW9xRr8IIGKM71woNYGlLF49XyJ.7juIOcdTpjoh_QBCwYnKe5mOAMONUvIUlwuUKKzbVycDRivs2JbnDn6K_Sue.ZI8BKWdBqh2kY2ac; path=/; expires=Fri, 20-Jun-25 07:50:15 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9529809c8e0a4917-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-20 12:50:15,060 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-20 12:50:15,061 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-20 12:50:17,349 [DEBUG] receive_response_body.complete
2025-06-20 12:50:17,349 [DEBUG] response_closed.started
2025-06-20 12:50:17,350 [DEBUG] response_closed.complete
2025-06-20 12:50:17,350 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 20 Jun 2025 07:20:15 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1265', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1267', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_ac4dc418587a0f83c79ec34759517192', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=SxKlo9vJqW29gTT1VHMz5iJ2DmZlt_1fFyoXdTekUno-1750404015-1.0.1.1-K.IW9xRr8IIGKM71woNYGlLF49XyJ.7juIOcdTpjoh_QBCwYnKe5mOAMONUvIUlwuUKKzbVycDRivs2JbnDn6K_Sue.ZI8BKWdBqh2kY2ac; path=/; expires=Fri, 20-Jun-25 07:50:15 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9529809c8e0a4917-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-20 12:50:17,352 [DEBUG] request_id: req_ac4dc418587a0f83c79ec34759517192
2025-06-20 12:50:17,353 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-20 12:50:17,354 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-20 12:50:17,382 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ec8c7364-4c27-4be0-bffc-9214b2aa2a43', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-20 12:50:17,383 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-20 12:50:17,384 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-20 12:50:17,385 [DEBUG] send_request_headers.complete
2025-06-20 12:50:17,385 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-20 12:50:17,386 [DEBUG] send_request_body.complete
2025-06-20 12:50:17,386 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-20 12:50:23,774 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 20 Jun 2025 07:20:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'5460'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5473'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_6ff4535de78c8d91a1e22b1d12de4d5d'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'952980b8ef124917-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-20 12:50:23,776 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-20 12:50:23,776 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-20 12:50:23,777 [DEBUG] receive_response_body.complete
2025-06-20 12:50:23,778 [DEBUG] response_closed.started
2025-06-20 12:50:23,778 [DEBUG] response_closed.complete
2025-06-20 12:50:23,779 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 20 Jun 2025 07:20:24 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '5460', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5473', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_6ff4535de78c8d91a1e22b1d12de4d5d', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '952980b8ef124917-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-20 12:50:23,782 [DEBUG] request_id: req_6ff4535de78c8d91a1e22b1d12de4d5d
2025-06-20 12:50:23,783 [INFO]  Meal plan generated with 10 dishes
2025-06-20 12:50:23,784 [INFO] 127.0.0.1 - - [20/Jun/2025 12:50:23] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-21 09:11:57,512 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats
2025-06-21 09:11:57,515 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-58f2ce0a-925b-43a9-9364-217cfbe5a33c', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-21 09:11:57,520 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-21 09:11:57,522 [DEBUG] close.started
2025-06-21 09:11:57,523 [DEBUG] close.complete
2025-06-21 09:11:57,524 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-21 09:11:57,741 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02A9D7D0>
2025-06-21 09:11:57,745 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000024E020CFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-21 09:11:57,896 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02A9F7D0>
2025-06-21 09:11:57,897 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-21 09:11:57,898 [DEBUG] send_request_headers.complete
2025-06-21 09:11:57,899 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-21 09:11:57,900 [DEBUG] send_request_body.complete
2025-06-21 09:11:57,900 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-21 09:11:59,661 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 21 Jun 2025 03:41:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'1031'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1034'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_25e8f25d00d39a634fff5c1682114cbd'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=FtZq0m2p5nXY2m_0KmQN0iUNhJjmn4BbBqVOgzjIFSc-1750477319-1.0.1.1-ZbSUPT9tzKwFlhsXZzoElLh0LpU9uIT3eyBipINBZJ2pWleKZscrJEGX_Bf3nvWxNgfV1rF9Lbr00sEnMQ3NVVBZYssBPkcLFemdWgcgGmE; path=/; expires=Sat, 21-Jun-25 04:11:59 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95307e44ed154910-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-21 09:11:59,664 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 09:11:59,665 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-21 09:11:59,666 [DEBUG] receive_response_body.complete
2025-06-21 09:11:59,667 [DEBUG] response_closed.started
2025-06-21 09:11:59,667 [DEBUG] response_closed.complete
2025-06-21 09:11:59,668 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 21 Jun 2025 03:41:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '1031', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1034', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_25e8f25d00d39a634fff5c1682114cbd', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=FtZq0m2p5nXY2m_0KmQN0iUNhJjmn4BbBqVOgzjIFSc-1750477319-1.0.1.1-ZbSUPT9tzKwFlhsXZzoElLh0LpU9uIT3eyBipINBZJ2pWleKZscrJEGX_Bf3nvWxNgfV1rF9Lbr00sEnMQ3NVVBZYssBPkcLFemdWgcgGmE; path=/; expires=Sat, 21-Jun-25 04:11:59 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95307e44ed154910-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-21 09:11:59,670 [DEBUG] request_id: req_25e8f25d00d39a634fff5c1682114cbd
2025-06-21 09:11:59,672 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-21 09:11:59,674 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-21 09:11:59,720 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1eef5aec-83d8-4de4-b1fb-3a6b1d2da895', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-21 09:11:59,723 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-21 09:11:59,724 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-21 09:11:59,725 [DEBUG] send_request_headers.complete
2025-06-21 09:11:59,726 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-21 09:11:59,727 [DEBUG] send_request_body.complete
2025-06-21 09:11:59,727 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-21 09:12:04,336 [INFO] 127.0.0.1 - - [21/Jun/2025 09:12:04] "GET /meal-planner HTTP/1.1" 200 -
2025-06-21 09:12:04,388 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 21 Jun 2025 03:42:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'3704'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3707'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_f5b94ff0cad9d12aca06cb55fcedf284'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95307e506df04910-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-21 09:12:04,399 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 09:12:04,400 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-21 09:12:04,401 [DEBUG] receive_response_body.complete
2025-06-21 09:12:04,402 [DEBUG] response_closed.started
2025-06-21 09:12:04,403 [DEBUG] response_closed.complete
2025-06-21 09:12:04,403 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 21 Jun 2025 03:42:04 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '3704', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3707', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_f5b94ff0cad9d12aca06cb55fcedf284', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95307e506df04910-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-21 09:12:04,406 [DEBUG] request_id: req_f5b94ff0cad9d12aca06cb55fcedf284
2025-06-21 09:12:04,407 [INFO]  Meal plan generated with 10 dishes
2025-06-21 09:12:04,409 [INFO] 127.0.0.1 - - [21/Jun/2025 09:12:04] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-21 09:12:10,437 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats

2025-06-21 09:12:10,439 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-980bcf87-cf53-4de0-bc62-38d839d12f10', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-21 09:12:10,442 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-21 09:12:10,444 [DEBUG] close.started
2025-06-21 09:12:10,445 [DEBUG] close.complete
2025-06-21 09:12:10,445 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-21 09:12:10,522 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02AC5590>
2025-06-21 09:12:10,523 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000024E020CFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-21 09:12:10,602 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02A800D0>
2025-06-21 09:12:10,602 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-21 09:12:10,603 [DEBUG] send_request_headers.complete
2025-06-21 09:12:10,603 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-21 09:12:10,604 [DEBUG] send_request_body.complete
2025-06-21 09:12:10,604 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-21 09:12:11,619 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 21 Jun 2025 03:42:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'679'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'682'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29910'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'180ms'), (b'x-request-id', b'req_a4cb33745f3209e402ea6405954b5d7a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95307e947b1e89e1-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-21 09:12:11,621 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 09:12:11,622 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-21 09:12:11,623 [DEBUG] receive_response_body.complete
2025-06-21 09:12:11,623 [DEBUG] response_closed.started
2025-06-21 09:12:11,623 [DEBUG] response_closed.complete
2025-06-21 09:12:11,624 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 21 Jun 2025 03:42:11 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '679', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '682', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29910', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_a4cb33745f3209e402ea6405954b5d7a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95307e947b1e89e1-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-21 09:12:11,625 [DEBUG] request_id: req_a4cb33745f3209e402ea6405954b5d7a
2025-06-21 09:12:11,627 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2354,
  "protein_pct": 50,
  "carbs_pct": 30,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-21 09:12:11,629 [INFO]  Extracted Params: {'calories_target': 2354, 'protein_pct': 50, 'carbs_pct': 30, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-21 09:12:11,654 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c722c7c5-3bc1-4174-a073-bcb64f458df0', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2916.0 kcal\nProtein: 294.2 g\nCarbs: 176.6 g\nFat: 114.8 g\nFiber: 35.3 g\nSugar: 25.0 g\nSodium: 2300.1 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nBoiled rice (Uble chawal) (Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nMaa chaane ki dal (Veg) for Lunch/Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-21 09:12:11,657 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-21 09:12:11,657 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-21 09:12:11,658 [DEBUG] send_request_headers.complete
2025-06-21 09:12:11,659 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-21 09:12:11,659 [DEBUG] send_request_body.complete
2025-06-21 09:12:11,660 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-21 09:12:17,142 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sat, 21 Jun 2025 03:42:16 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'cs-soft-solutions-india-pvt-ltd'), (b'openai-processing-ms', b'4183'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4185'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29812'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'376ms'), (b'x-request-id', b'req_36a4cb7fe0cb2e2594ec48772c8d9e17'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95307e9b0b9f89e1-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-21 09:12:17,144 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-21 09:12:17,145 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-21 09:12:17,146 [DEBUG] receive_response_body.complete
2025-06-21 09:12:17,146 [DEBUG] response_closed.started
2025-06-21 09:12:17,147 [DEBUG] response_closed.complete
2025-06-21 09:12:17,147 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sat, 21 Jun 2025 03:42:16 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'cs-soft-solutions-india-pvt-ltd', 'openai-processing-ms': '4183', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4185', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29812', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '376ms', 'x-request-id': 'req_36a4cb7fe0cb2e2594ec48772c8d9e17', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95307e9b0b9f89e1-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-21 09:12:17,149 [DEBUG] request_id: req_36a4cb7fe0cb2e2594ec48772c8d9e17
2025-06-21 09:12:17,150 [INFO]  Meal plan generated with 10 dishes
2025-06-21 09:12:17,151 [INFO] 127.0.0.1 - - [21/Jun/2025 09:12:17] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-24 07:46:06,860 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats

2025-06-24 07:46:06,865 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-60988406-bac6-48d9-80b8-457e8af1c982', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 07:46:06,869 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 07:46:06,872 [DEBUG] close.started
2025-06-24 07:46:06,872 [DEBUG] close.complete
2025-06-24 07:46:06,879 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 07:46:06,889 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-24 07:46:06,900 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-24 07:46:07,735 [DEBUG] 2 retries left
2025-06-24 07:46:07,737 [INFO] Retrying request to /chat/completions in 0.448286 seconds
2025-06-24 07:46:08,188 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-60988406-bac6-48d9-80b8-457e8af1c982', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 07:46:08,192 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 07:46:08,192 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 07:46:08,194 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-24 07:46:08,194 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-24 07:46:08,214 [DEBUG] 1 retry left
2025-06-24 07:46:08,216 [INFO] Retrying request to /chat/completions in 0.856051 seconds
2025-06-24 07:46:09,073 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-60988406-bac6-48d9-80b8-457e8af1c982', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 07:46:09,075 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 07:46:09,076 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 07:46:09,077 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-24 07:46:09,078 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-24 07:46:09,094 [DEBUG] Raising connection error
2025-06-24 07:46:09,095 [ERROR] Error extracting preferences: Connection error.
2025-06-24 07:46:09,397 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-24 07:46:09,462 [ERROR]  Exception: Connection error.
2025-06-24 07:46:09,473 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 387, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-24 07:46:09,519 [INFO] 127.0.0.1 - - [24/Jun/2025 07:46:09] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-24 07:46:48,350 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats

2025-06-24 07:46:48,358 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-fb87f534-b1dc-4e3c-b92e-f233de286724', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 07:46:48,366 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 07:46:48,368 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 07:46:48,514 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02BA0050>
2025-06-24 07:46:48,515 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000024E020CFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 07:46:48,606 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02BA0D90>
2025-06-24 07:46:48,607 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 07:46:48,608 [DEBUG] send_request_headers.complete
2025-06-24 07:46:48,608 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 07:46:48,609 [DEBUG] send_request_body.complete
2025-06-24 07:46:48,609 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 07:46:48,908 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Tue, 24 Jun 2025 02:16:50 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'414'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_07820f293207e3205eee78a5738da6d5'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=V0CaY53fzx1ECM5pJfQHCSrZiLqJem9zffI6LnS4_l8-1750731410-1.0.1.1-CUN80IIE8gDe5dsxJY6sucyJKKv9wOiKzgjGzd7eRE96ifNLUyuVPXpVZJdFIrYkzrBMxNfPgYWIwWpHAkdcgoDJ5UyyfMjTYLMFOH0hLuo; path=/; expires=Tue, 24-Jun-25 02:46:50 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548b9b4fde24455-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 07:46:48,910 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-06-24 07:46:48,911 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 07:46:48,912 [DEBUG] receive_response_body.complete
2025-06-24 07:46:48,912 [DEBUG] response_closed.started
2025-06-24 07:46:48,913 [DEBUG] response_closed.complete
2025-06-24 07:46:48,914 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Tue, 24 Jun 2025 02:16:50 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '414', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_07820f293207e3205eee78a5738da6d5', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=V0CaY53fzx1ECM5pJfQHCSrZiLqJem9zffI6LnS4_l8-1750731410-1.0.1.1-CUN80IIE8gDe5dsxJY6sucyJKKv9wOiKzgjGzd7eRE96ifNLUyuVPXpVZJdFIrYkzrBMxNfPgYWIwWpHAkdcgoDJ5UyyfMjTYLMFOH0hLuo; path=/; expires=Tue, 24-Jun-25 02:46:50 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9548b9b4fde24455-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 07:46:48,916 [DEBUG] request_id: req_07820f293207e3205eee78a5738da6d5
2025-06-24 07:46:48,916 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-06-24 07:46:48,951 [DEBUG] Not retrying
2025-06-24 07:46:48,952 [DEBUG] Re-raising status error
2025-06-24 07:46:48,954 [ERROR] Error extracting preferences: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-06-24 07:46:48,958 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

2025-06-24 07:46:48,964 [ERROR]  Exception: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-06-24 07:46:48,967 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 387, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

2025-06-24 07:46:48,973 [INFO] 127.0.0.1 - - [24/Jun/2025 07:46:48] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-24 07:49:48,620 [INFO] Received Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats

2025-06-24 07:49:48,622 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-96b9f898-2b93-4e82-8ea7-d1fc78ed4fe0', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2354 calorie with 50 % protein 30 % carbs and 20 % fats\n'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 07:49:48,624 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 07:49:48,625 [DEBUG] close.started
2025-06-24 07:49:48,626 [DEBUG] close.complete
2025-06-24 07:49:48,626 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 07:49:49,323 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02BBD690>
2025-06-24 07:49:49,324 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000024E020CFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 07:49:49,601 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000024E02BBC410>
2025-06-24 07:49:49,602 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 07:49:49,603 [DEBUG] send_request_headers.complete
2025-06-24 07:49:49,603 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 07:49:49,604 [DEBUG] send_request_body.complete
2025-06-24 07:49:49,605 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 07:49:50,067 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Tue, 24 Jun 2025 02:19:52 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'414'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_e4ac3b477b966a4e1c13c6b092df5a88'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548be207f923ae6-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 07:49:50,069 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-06-24 07:49:50,069 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 07:49:50,070 [DEBUG] receive_response_body.complete
2025-06-24 07:49:50,070 [DEBUG] response_closed.started
2025-06-24 07:49:50,071 [DEBUG] response_closed.complete
2025-06-24 07:49:50,071 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Tue, 24 Jun 2025 02:19:52 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '414', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_e4ac3b477b966a4e1c13c6b092df5a88', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9548be207f923ae6-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 07:49:50,073 [DEBUG] request_id: req_e4ac3b477b966a4e1c13c6b092df5a88
2025-06-24 07:49:50,073 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-06-24 07:49:50,076 [DEBUG] Not retrying
2025-06-24 07:49:50,076 [DEBUG] Re-raising status error
2025-06-24 07:49:50,077 [ERROR] Error extracting preferences: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-06-24 07:49:50,079 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

2025-06-24 07:49:50,084 [ERROR]  Exception: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-06-24 07:49:50,087 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 387, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

2025-06-24 07:49:50,091 [INFO] 127.0.0.1 - - [24/Jun/2025 07:49:50] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-24 08:00:21,802 [INFO] CSV loaded successfully.
2025-06-24 08:00:21,930 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-06-24 08:00:21,931 [INFO] [33mPress CTRL+C to quit[0m
2025-06-24 08:00:21,936 [INFO]  * Restarting with stat
2025-06-24 08:00:26,498 [INFO] CSV loaded successfully.
2025-06-24 08:00:26,548 [WARNING]  * Debugger is active!
2025-06-24 08:00:26,558 [INFO]  * Debugger PIN: 461-893-414
2025-06-24 08:00:27,151 [INFO] 127.0.0.1 - - [24/Jun/2025 08:00:27] "GET / HTTP/1.1" 200 -
2025-06-24 08:00:27,395 [INFO] 127.0.0.1 - - [24/Jun/2025 08:00:27] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-24 08:00:29,174 [INFO] 127.0.0.1 - - [24/Jun/2025 08:00:29] "GET /meal-planner HTTP/1.1" 200 -
2025-06-24 08:01:16,524 [INFO] Received Input: give me meal for 1234 cal with 40 % fats , 10 % carbs , 50 % protein
2025-06-24 08:01:17,293 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-29999a86-6e2a-4d75-ad10-0b0109b01098', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1234 cal with 40 % fats , 10 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 08:01:17,327 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 08:01:17,328 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 08:01:17,483 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021FB16926D0>
2025-06-24 08:01:17,483 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021FB105FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 08:01:17,732 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021FB1692710>
2025-06-24 08:01:17,733 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 08:01:17,734 [DEBUG] send_request_headers.complete
2025-06-24 08:01:17,734 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 08:01:17,735 [DEBUG] send_request_body.complete
2025-06-24 08:01:17,735 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 08:01:18,052 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Tue, 24 Jun 2025 02:31:20 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'414'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_a8a354ad51027a45ce25f9ae333dd845'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=7WoF9Y8qzLmooiqnZ8e83DLz9CG3H0Z2Zxgeob_2Ng4-1750732280-1.0.1.1-y7bRUzjYtYzX1T5uXkXN3PVBVA7uCO26xL8by15bYc.R1blTedd8z7GuUVlSnONxayh7l5zpK5Es949PYaGXofGs299BCjGInikU7NKtbWs; path=/; expires=Tue, 24-Jun-25 03:01:20 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=CNhIf66yKjFLnTtROT5rvjJGTYNjpahTmpEDGpYiia4-1750732280132-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548ceed2d3c446e-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 08:01:18,054 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-06-24 08:01:18,055 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 08:01:18,056 [DEBUG] receive_response_body.complete
2025-06-24 08:01:18,056 [DEBUG] response_closed.started
2025-06-24 08:01:18,056 [DEBUG] response_closed.complete
2025-06-24 08:01:18,057 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers([('date', 'Tue, 24 Jun 2025 02:31:20 GMT'), ('content-type', 'application/json; charset=utf-8'), ('content-length', '414'), ('connection', 'keep-alive'), ('vary', 'Origin'), ('x-request-id', 'req_a8a354ad51027a45ce25f9ae333dd845'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=7WoF9Y8qzLmooiqnZ8e83DLz9CG3H0Z2Zxgeob_2Ng4-1750732280-1.0.1.1-y7bRUzjYtYzX1T5uXkXN3PVBVA7uCO26xL8by15bYc.R1blTedd8z7GuUVlSnONxayh7l5zpK5Es949PYaGXofGs299BCjGInikU7NKtbWs; path=/; expires=Tue, 24-Jun-25 03:01:20 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=CNhIf66yKjFLnTtROT5rvjJGTYNjpahTmpEDGpYiia4-1750732280132-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '9548ceed2d3c446e-BOM'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-24 08:01:18,059 [DEBUG] request_id: req_a8a354ad51027a45ce25f9ae333dd845
2025-06-24 08:01:18,060 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-06-24 08:01:18,094 [DEBUG] Not retrying
2025-06-24 08:01:18,095 [DEBUG] Re-raising status error
2025-06-24 08:01:18,096 [ERROR] Error extracting preferences: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-06-24 08:01:18,163 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

2025-06-24 08:01:18,167 [ERROR]  Exception: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-06-24 08:01:18,169 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 387, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

2025-06-24 08:01:18,174 [INFO] 127.0.0.1 - - [24/Jun/2025 08:01:18] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-24 08:05:34,208 [INFO] Received Input: give me meal for 1234 cal with 40 % fats , 10 % carbs , 50 % protein
2025-06-24 08:05:34,211 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c9ec4b22-911b-4943-8b35-620373609b5b', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 1234 cal with 40 % fats , 10 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 08:05:34,214 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 08:05:34,215 [DEBUG] close.started
2025-06-24 08:05:34,267 [DEBUG] close.complete
2025-06-24 08:05:34,268 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 08:05:34,378 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021FB1A83110>
2025-06-24 08:05:34,379 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021FB105FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 08:05:34,434 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021FB16935D0>
2025-06-24 08:05:34,435 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 08:05:34,436 [DEBUG] send_request_headers.complete
2025-06-24 08:05:34,436 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 08:05:34,437 [DEBUG] send_request_body.complete
2025-06-24 08:05:34,438 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 08:05:35,574 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 401, b'Unauthorized', [(b'Date', b'Tue, 24 Jun 2025 02:35:37 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'414'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_c732b1dfa8fe7f04cffc9f57885787d1'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548d531b8718a26-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 08:05:35,576 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2025-06-24 08:05:35,576 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 08:05:35,577 [DEBUG] receive_response_body.complete
2025-06-24 08:05:35,577 [DEBUG] response_closed.started
2025-06-24 08:05:35,578 [DEBUG] response_closed.complete
2025-06-24 08:05:35,578 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "401 Unauthorized" Headers({'date': 'Tue, 24 Jun 2025 02:35:37 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '414', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_c732b1dfa8fe7f04cffc9f57885787d1', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9548d531b8718a26-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 08:05:35,580 [DEBUG] request_id: req_c732b1dfa8fe7f04cffc9f57885787d1
2025-06-24 08:05:35,580 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '401 Unauthorized' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401
2025-06-24 08:05:35,583 [DEBUG] Not retrying
2025-06-24 08:05:35,583 [DEBUG] Re-raising status error
2025-06-24 08:05:35,584 [ERROR] Error extracting preferences: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-06-24 08:05:35,586 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

2025-06-24 08:05:35,590 [ERROR]  Exception: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2025-06-24 08:05:35,592 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 387, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************************************************************************************************************************4gwA. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

2025-06-24 08:05:35,597 [INFO] 127.0.0.1 - - [24/Jun/2025 08:05:35] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-24 08:15:28,606 [INFO] CSV loaded successfully.
2025-06-24 08:15:28,709 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-06-24 08:15:28,709 [INFO] [33mPress CTRL+C to quit[0m
2025-06-24 08:15:28,713 [INFO]  * Restarting with stat
2025-06-24 08:15:31,453 [INFO] CSV loaded successfully.
2025-06-24 08:15:31,496 [WARNING]  * Debugger is active!
2025-06-24 08:15:31,503 [INFO]  * Debugger PIN: 461-893-414
2025-06-24 08:15:52,888 [INFO] 127.0.0.1 - - [24/Jun/2025 08:15:52] "GET / HTTP/1.1" 200 -
2025-06-24 08:15:53,216 [INFO] 127.0.0.1 - - [24/Jun/2025 08:15:53] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-24 08:15:53,396 [INFO] 127.0.0.1 - - [24/Jun/2025 08:15:53] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-06-24 08:15:58,402 [INFO] 127.0.0.1 - - [24/Jun/2025 08:15:58] "GET /meal-planner HTTP/1.1" 200 -
2025-06-24 08:17:12,909 [INFO] Received Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein
2025-06-24 08:17:13,422 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-428ab174-0525-4bff-a8fe-2ffa55d2e0f6', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 08:17:13,433 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 08:17:13,433 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 08:17:13,563 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001BDE44629D0>
2025-06-24 08:17:13,563 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001BDE3E1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 08:17:13,637 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001BDE3F84450>
2025-06-24 08:17:13,638 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 08:17:13,638 [DEBUG] send_request_headers.complete
2025-06-24 08:17:13,639 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 08:17:13,639 [DEBUG] send_request_body.complete
2025-06-24 08:17:13,640 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 08:17:14,296 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 02:47:16 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_8a06e1aa8ce56c503aa335234b4fe309'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=GmVJYiSRFONRNJFFrc3a89aEdN2xMztEEPgp86lcq3I-1750733236-1.0.1.1-GyHmzP7zHOljmcN3waKvrshB5yxUSit3ryAh6wHO9OMbMQFxIENQ3SSuh9NzVzCpbn5pJ7aJ_tzAsJysgOE_BiFHt69p0gLWDGO3SCXslfM; path=/; expires=Tue, 24-Jun-25 03:17:16 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=R59yRN2dmD8Fh3DINYDETVC6dxPC.Mek5Thq.em8ILI-1750733236249-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548e642da243bb0-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 08:17:14,298 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 08:17:14,300 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 08:17:14,300 [DEBUG] receive_response_body.complete
2025-06-24 08:17:14,300 [DEBUG] response_closed.started
2025-06-24 08:17:14,300 [DEBUG] response_closed.complete
2025-06-24 08:17:14,300 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers([('date', 'Tue, 24 Jun 2025 02:47:16 GMT'), ('content-type', 'application/json; charset=utf-8'), ('content-length', '337'), ('connection', 'keep-alive'), ('vary', 'Origin'), ('x-request-id', 'req_8a06e1aa8ce56c503aa335234b4fe309'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=GmVJYiSRFONRNJFFrc3a89aEdN2xMztEEPgp86lcq3I-1750733236-1.0.1.1-GyHmzP7zHOljmcN3waKvrshB5yxUSit3ryAh6wHO9OMbMQFxIENQ3SSuh9NzVzCpbn5pJ7aJ_tzAsJysgOE_BiFHt69p0gLWDGO3SCXslfM; path=/; expires=Tue, 24-Jun-25 03:17:16 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=R59yRN2dmD8Fh3DINYDETVC6dxPC.Mek5Thq.em8ILI-1750733236249-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '9548e642da243bb0-BOM'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-24 08:17:14,301 [DEBUG] request_id: req_8a06e1aa8ce56c503aa335234b4fe309
2025-06-24 08:17:14,302 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 08:17:14,307 [DEBUG] Retrying due to status code 429
2025-06-24 08:17:14,308 [DEBUG] 2 retries left
2025-06-24 08:17:14,309 [INFO] Retrying request to /chat/completions in 0.423555 seconds
2025-06-24 08:17:14,733 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-428ab174-0525-4bff-a8fe-2ffa55d2e0f6', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 08:17:14,734 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 08:17:14,735 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 08:17:14,736 [DEBUG] send_request_headers.complete
2025-06-24 08:17:14,737 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 08:17:14,737 [DEBUG] send_request_body.complete
2025-06-24 08:17:14,737 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 08:17:15,573 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 02:47:17 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_7f4c8252742e71f7a3319983d5c9f31a'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548e649af3d3bb0-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 08:17:15,576 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 08:17:15,576 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 08:17:15,577 [DEBUG] receive_response_body.complete
2025-06-24 08:17:15,577 [DEBUG] response_closed.started
2025-06-24 08:17:15,578 [DEBUG] response_closed.complete
2025-06-24 08:17:15,578 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 02:47:17 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_7f4c8252742e71f7a3319983d5c9f31a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9548e649af3d3bb0-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 08:17:15,579 [DEBUG] request_id: req_7f4c8252742e71f7a3319983d5c9f31a
2025-06-24 08:17:15,580 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 08:17:15,582 [DEBUG] Retrying due to status code 429
2025-06-24 08:17:15,583 [DEBUG] 1 retry left
2025-06-24 08:17:15,583 [INFO] Retrying request to /chat/completions in 0.801326 seconds
2025-06-24 08:17:16,385 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-428ab174-0525-4bff-a8fe-2ffa55d2e0f6', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 08:17:16,387 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 08:17:16,388 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 08:17:16,388 [DEBUG] send_request_headers.complete
2025-06-24 08:17:16,389 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 08:17:16,389 [DEBUG] send_request_body.complete
2025-06-24 08:17:16,390 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 08:17:17,174 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 02:47:19 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_3374b37657cdff34df324b8cc97fc829'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548e6542eb13bb0-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 08:17:17,175 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 08:17:17,176 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 08:17:17,177 [DEBUG] receive_response_body.complete
2025-06-24 08:17:17,177 [DEBUG] response_closed.started
2025-06-24 08:17:17,177 [DEBUG] response_closed.complete
2025-06-24 08:17:17,178 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 02:47:19 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_3374b37657cdff34df324b8cc97fc829', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9548e6542eb13bb0-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 08:17:17,178 [DEBUG] request_id: req_3374b37657cdff34df324b8cc97fc829
2025-06-24 08:17:17,179 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 08:17:17,180 [DEBUG] Re-raising status error
2025-06-24 08:17:17,182 [ERROR] Error extracting preferences: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-06-24 08:17:17,185 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

2025-06-24 08:17:17,190 [ERROR]  Exception: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-06-24 08:17:17,192 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 387, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

2025-06-24 08:17:17,198 [INFO] 127.0.0.1 - - [24/Jun/2025 08:17:17] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-24 08:20:38,967 [INFO] Received Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein
2025-06-24 08:20:38,970 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-fc7e3cf7-d753-457a-89bd-c18435bd11a0', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 08:20:38,973 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 08:20:38,973 [DEBUG] close.started
2025-06-24 08:20:38,974 [DEBUG] close.complete
2025-06-24 08:20:38,974 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 08:20:39,158 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001BDE480B8D0>
2025-06-24 08:20:39,158 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001BDE3E1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 08:20:39,243 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001BDE480BCD0>
2025-06-24 08:20:39,243 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 08:20:39,244 [DEBUG] send_request_headers.complete
2025-06-24 08:20:39,244 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 08:20:39,245 [DEBUG] send_request_body.complete
2025-06-24 08:20:39,245 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 08:20:39,528 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 02:50:41 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_bd91cec685f5d147f7a7de6aea11fae2'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548eb47eb41ff73-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 08:20:39,529 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 08:20:39,529 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 08:20:39,530 [DEBUG] receive_response_body.complete
2025-06-24 08:20:39,530 [DEBUG] response_closed.started
2025-06-24 08:20:39,531 [DEBUG] response_closed.complete
2025-06-24 08:20:39,531 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 02:50:41 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_bd91cec685f5d147f7a7de6aea11fae2', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9548eb47eb41ff73-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 08:20:39,532 [DEBUG] request_id: req_bd91cec685f5d147f7a7de6aea11fae2
2025-06-24 08:20:39,532 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 08:20:39,534 [DEBUG] Retrying due to status code 429
2025-06-24 08:20:39,534 [DEBUG] 2 retries left
2025-06-24 08:20:39,535 [INFO] Retrying request to /chat/completions in 0.394749 seconds
2025-06-24 08:20:39,931 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-fc7e3cf7-d753-457a-89bd-c18435bd11a0', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 08:20:39,932 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 08:20:39,933 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 08:20:39,934 [DEBUG] send_request_headers.complete
2025-06-24 08:20:39,934 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 08:20:39,934 [DEBUG] send_request_body.complete
2025-06-24 08:20:39,934 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 08:20:40,239 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 02:50:42 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_c43da9d573c41a33b08dca2fbceb199e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548eb4c68ccff73-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 08:20:40,240 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 08:20:40,241 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 08:20:40,241 [DEBUG] receive_response_body.complete
2025-06-24 08:20:40,242 [DEBUG] response_closed.started
2025-06-24 08:20:40,242 [DEBUG] response_closed.complete
2025-06-24 08:20:40,242 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 02:50:42 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_c43da9d573c41a33b08dca2fbceb199e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9548eb4c68ccff73-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 08:20:40,243 [DEBUG] request_id: req_c43da9d573c41a33b08dca2fbceb199e
2025-06-24 08:20:40,243 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 08:20:40,244 [DEBUG] Retrying due to status code 429
2025-06-24 08:20:40,245 [DEBUG] 1 retry left
2025-06-24 08:20:40,245 [INFO] Retrying request to /chat/completions in 0.968547 seconds
2025-06-24 08:20:41,215 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-fc7e3cf7-d753-457a-89bd-c18435bd11a0', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 08:20:41,216 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 08:20:41,217 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 08:20:41,217 [DEBUG] send_request_headers.complete
2025-06-24 08:20:41,219 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 08:20:41,219 [DEBUG] send_request_body.complete
2025-06-24 08:20:41,219 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 08:20:42,049 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 02:50:43 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_1ab598b30df08d5920f7b7c08afa3505'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548eb542a3dff73-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 08:20:42,050 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 08:20:42,050 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 08:20:42,051 [DEBUG] receive_response_body.complete
2025-06-24 08:20:42,051 [DEBUG] response_closed.started
2025-06-24 08:20:42,051 [DEBUG] response_closed.complete
2025-06-24 08:20:42,052 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 02:50:43 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_1ab598b30df08d5920f7b7c08afa3505', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9548eb542a3dff73-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 08:20:42,053 [DEBUG] request_id: req_1ab598b30df08d5920f7b7c08afa3505
2025-06-24 08:20:42,053 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 08:20:42,055 [DEBUG] Re-raising status error
2025-06-24 08:20:42,056 [ERROR] Error extracting preferences: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-06-24 08:20:42,058 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

2025-06-24 08:20:42,060 [ERROR]  Exception: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-06-24 08:20:42,061 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 387, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

2025-06-24 08:20:42,064 [INFO] 127.0.0.1 - - [24/Jun/2025 08:20:42] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-24 08:22:40,371 [INFO] Received Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein
2025-06-24 08:22:40,373 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-64a7e89b-63e0-4dfc-8872-0cb8ce26fb36', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 08:22:40,379 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 08:22:40,380 [DEBUG] close.started
2025-06-24 08:22:40,381 [DEBUG] close.complete
2025-06-24 08:22:40,381 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 08:22:40,595 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001BDE4851190>
2025-06-24 08:22:40,595 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001BDE3E1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 08:22:40,678 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001BDE4851F90>
2025-06-24 08:22:40,678 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 08:22:40,679 [DEBUG] send_request_headers.complete
2025-06-24 08:22:40,679 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 08:22:40,680 [DEBUG] send_request_body.complete
2025-06-24 08:22:40,680 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 08:22:40,965 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 02:52:42 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_0d51b46bbd3a98897d3f8206061e7e9b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548ee3effb03f42-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 08:22:40,966 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 08:22:40,967 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 08:22:40,967 [DEBUG] receive_response_body.complete
2025-06-24 08:22:40,967 [DEBUG] response_closed.started
2025-06-24 08:22:40,968 [DEBUG] response_closed.complete
2025-06-24 08:22:40,968 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 02:52:42 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_0d51b46bbd3a98897d3f8206061e7e9b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9548ee3effb03f42-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 08:22:40,969 [DEBUG] request_id: req_0d51b46bbd3a98897d3f8206061e7e9b
2025-06-24 08:22:40,970 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 08:22:40,971 [DEBUG] Retrying due to status code 429
2025-06-24 08:22:40,972 [DEBUG] 2 retries left
2025-06-24 08:22:40,972 [INFO] Retrying request to /chat/completions in 0.396678 seconds
2025-06-24 08:22:41,370 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-64a7e89b-63e0-4dfc-8872-0cb8ce26fb36', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 08:22:41,371 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 08:22:41,372 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 08:22:41,372 [DEBUG] send_request_headers.complete
2025-06-24 08:22:41,373 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 08:22:41,374 [DEBUG] send_request_body.complete
2025-06-24 08:22:41,374 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 08:22:41,966 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 02:52:43 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_3b8a6a8ed922369d367f2f7dc45d0106'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548ee438a613f42-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 08:22:41,967 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 08:22:41,967 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 08:22:41,968 [DEBUG] receive_response_body.complete
2025-06-24 08:22:41,968 [DEBUG] response_closed.started
2025-06-24 08:22:41,968 [DEBUG] response_closed.complete
2025-06-24 08:22:41,969 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 02:52:43 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_3b8a6a8ed922369d367f2f7dc45d0106', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9548ee438a613f42-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 08:22:41,969 [DEBUG] request_id: req_3b8a6a8ed922369d367f2f7dc45d0106
2025-06-24 08:22:41,970 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 08:22:41,971 [DEBUG] Retrying due to status code 429
2025-06-24 08:22:41,972 [DEBUG] 1 retry left
2025-06-24 08:22:41,972 [INFO] Retrying request to /chat/completions in 0.857572 seconds
2025-06-24 08:22:42,831 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-64a7e89b-63e0-4dfc-8872-0cb8ce26fb36', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 08:22:42,832 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 08:22:42,833 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 08:22:42,834 [DEBUG] send_request_headers.complete
2025-06-24 08:22:42,834 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 08:22:42,834 [DEBUG] send_request_body.complete
2025-06-24 08:22:42,835 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 08:22:43,115 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 02:52:45 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_3b0d9f9bcea096f0c5cf5732926c176e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548ee4c5fd13f42-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 08:22:43,116 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 08:22:43,117 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 08:22:43,117 [DEBUG] receive_response_body.complete
2025-06-24 08:22:43,117 [DEBUG] response_closed.started
2025-06-24 08:22:43,118 [DEBUG] response_closed.complete
2025-06-24 08:22:43,119 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 02:52:45 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_3b0d9f9bcea096f0c5cf5732926c176e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9548ee4c5fd13f42-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 08:22:43,120 [DEBUG] request_id: req_3b0d9f9bcea096f0c5cf5732926c176e
2025-06-24 08:22:43,121 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 08:22:43,123 [DEBUG] Re-raising status error
2025-06-24 08:22:43,124 [ERROR] Error extracting preferences: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-06-24 08:22:43,125 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

2025-06-24 08:22:43,128 [ERROR]  Exception: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-06-24 08:22:43,129 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 387, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

2025-06-24 08:22:43,133 [INFO] 127.0.0.1 - - [24/Jun/2025 08:22:43] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-24 08:22:48,361 [INFO] Received Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein
2025-06-24 08:22:48,363 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b7075d42-ebd1-455d-8d45-82dbac9154db', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 08:22:48,366 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 08:22:48,367 [DEBUG] close.started
2025-06-24 08:22:48,368 [DEBUG] close.complete
2025-06-24 08:22:48,368 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 08:22:48,415 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001BDE4850A50>
2025-06-24 08:22:48,415 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001BDE3E1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 08:22:48,503 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001BDE4851750>
2025-06-24 08:22:48,504 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 08:22:48,505 [DEBUG] send_request_headers.complete
2025-06-24 08:22:48,505 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 08:22:48,506 [DEBUG] send_request_body.complete
2025-06-24 08:22:48,506 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 08:22:48,894 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 02:52:50 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_f3ee0003de8ab0eab2ac51eb4e03af32'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548ee6ff8e28b05-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 08:22:48,894 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 08:22:48,895 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 08:22:48,896 [DEBUG] receive_response_body.complete
2025-06-24 08:22:48,896 [DEBUG] response_closed.started
2025-06-24 08:22:48,896 [DEBUG] response_closed.complete
2025-06-24 08:22:48,896 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 02:52:50 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_f3ee0003de8ab0eab2ac51eb4e03af32', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9548ee6ff8e28b05-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 08:22:48,897 [DEBUG] request_id: req_f3ee0003de8ab0eab2ac51eb4e03af32
2025-06-24 08:22:48,898 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 08:22:48,899 [DEBUG] Retrying due to status code 429
2025-06-24 08:22:48,900 [DEBUG] 2 retries left
2025-06-24 08:22:48,900 [INFO] Retrying request to /chat/completions in 0.395280 seconds
2025-06-24 08:22:49,296 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b7075d42-ebd1-455d-8d45-82dbac9154db', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 08:22:49,298 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 08:22:49,298 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 08:22:49,299 [DEBUG] send_request_headers.complete
2025-06-24 08:22:49,299 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 08:22:49,300 [DEBUG] send_request_body.complete
2025-06-24 08:22:49,300 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 08:22:49,978 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 02:52:51 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_7203c1dc024c632c0be7c29701f6caad'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548ee751f0b8b05-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 08:22:49,980 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 08:22:49,980 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 08:22:49,980 [DEBUG] receive_response_body.complete
2025-06-24 08:22:49,981 [DEBUG] response_closed.started
2025-06-24 08:22:49,981 [DEBUG] response_closed.complete
2025-06-24 08:22:49,981 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 02:52:51 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_7203c1dc024c632c0be7c29701f6caad', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9548ee751f0b8b05-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 08:22:49,982 [DEBUG] request_id: req_7203c1dc024c632c0be7c29701f6caad
2025-06-24 08:22:49,983 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 08:22:49,984 [DEBUG] Retrying due to status code 429
2025-06-24 08:22:49,985 [DEBUG] 1 retry left
2025-06-24 08:22:49,985 [INFO] Retrying request to /chat/completions in 0.858254 seconds
2025-06-24 08:22:50,845 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b7075d42-ebd1-455d-8d45-82dbac9154db', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 08:22:50,846 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 08:22:50,847 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 08:22:50,847 [DEBUG] send_request_headers.complete
2025-06-24 08:22:50,848 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 08:22:50,848 [DEBUG] send_request_body.complete
2025-06-24 08:22:50,848 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 08:22:51,907 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 02:52:53 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_1b74093948cae8805906864f7751380b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9548ee7ebabc8b05-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 08:22:51,908 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 08:22:51,909 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 08:22:51,909 [DEBUG] receive_response_body.complete
2025-06-24 08:22:51,910 [DEBUG] response_closed.started
2025-06-24 08:22:51,910 [DEBUG] response_closed.complete
2025-06-24 08:22:51,910 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 02:52:53 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_1b74093948cae8805906864f7751380b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9548ee7ebabc8b05-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 08:22:51,910 [DEBUG] request_id: req_1b74093948cae8805906864f7751380b
2025-06-24 08:22:51,911 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 08:22:51,912 [DEBUG] Re-raising status error
2025-06-24 08:22:51,913 [ERROR] Error extracting preferences: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-06-24 08:22:51,914 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

2025-06-24 08:22:51,916 [ERROR]  Exception: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-06-24 08:22:51,918 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 387, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

2025-06-24 08:22:51,921 [INFO] 127.0.0.1 - - [24/Jun/2025 08:22:51] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-24 09:49:12,368 [INFO] Received Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein
2025-06-24 09:49:12,370 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-70b2b8ba-6e76-49a8-a37e-65b713285a1d', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 09:49:12,374 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 09:49:12,375 [DEBUG] close.started
2025-06-24 09:49:12,376 [DEBUG] close.complete
2025-06-24 09:49:12,377 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 09:49:12,559 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001BDE484E9D0>
2025-06-24 09:49:12,559 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001BDE3E1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 09:49:12,648 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001BDE480A650>
2025-06-24 09:49:12,649 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 09:49:12,650 [DEBUG] send_request_headers.complete
2025-06-24 09:49:12,651 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 09:49:12,651 [DEBUG] send_request_body.complete
2025-06-24 09:49:12,652 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 09:49:13,557 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 04:19:13 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_87ce6ce1281811cbbdb2a20cb632bfd4'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=LMJSP97SAIVVUMMr1hMCLBeDxiEm2ISFH2kd91Up8mU-1750738753-1.0.1.1-anAmYFrZDxpwZf3EvW5GXGR6CZ1Wa6Ws5VUfo2TE.Liviwx0HdTJVfASWmmdXMbkqcE7ndzMriE0eYsmdZsyQwxNXwhvZHLSfO8Opj3_KdU; path=/; expires=Tue, 24-Jun-25 04:49:13 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95496cf5db413e10-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 09:49:13,559 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 09:49:13,559 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 09:49:13,559 [DEBUG] receive_response_body.complete
2025-06-24 09:49:13,560 [DEBUG] response_closed.started
2025-06-24 09:49:13,560 [DEBUG] response_closed.complete
2025-06-24 09:49:13,561 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 04:19:13 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_87ce6ce1281811cbbdb2a20cb632bfd4', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=LMJSP97SAIVVUMMr1hMCLBeDxiEm2ISFH2kd91Up8mU-1750738753-1.0.1.1-anAmYFrZDxpwZf3EvW5GXGR6CZ1Wa6Ws5VUfo2TE.Liviwx0HdTJVfASWmmdXMbkqcE7ndzMriE0eYsmdZsyQwxNXwhvZHLSfO8Opj3_KdU; path=/; expires=Tue, 24-Jun-25 04:49:13 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95496cf5db413e10-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 09:49:13,562 [DEBUG] request_id: req_87ce6ce1281811cbbdb2a20cb632bfd4
2025-06-24 09:49:13,563 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 09:49:13,565 [DEBUG] Retrying due to status code 429
2025-06-24 09:49:13,565 [DEBUG] 2 retries left
2025-06-24 09:49:13,565 [INFO] Retrying request to /chat/completions in 0.490663 seconds
2025-06-24 09:49:14,057 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-70b2b8ba-6e76-49a8-a37e-65b713285a1d', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 09:49:14,059 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 09:49:14,059 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 09:49:14,060 [DEBUG] send_request_headers.complete
2025-06-24 09:49:14,061 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 09:49:14,061 [DEBUG] send_request_body.complete
2025-06-24 09:49:14,062 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 09:49:14,837 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 04:19:14 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_3169741a89a01ed9eb1cbb0b039294ac'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95496cfebc023e10-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 09:49:14,838 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 09:49:14,839 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 09:49:14,839 [DEBUG] receive_response_body.complete
2025-06-24 09:49:14,840 [DEBUG] response_closed.started
2025-06-24 09:49:14,840 [DEBUG] response_closed.complete
2025-06-24 09:49:14,840 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 04:19:14 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_3169741a89a01ed9eb1cbb0b039294ac', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95496cfebc023e10-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 09:49:14,841 [DEBUG] request_id: req_3169741a89a01ed9eb1cbb0b039294ac
2025-06-24 09:49:14,841 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 09:49:14,843 [DEBUG] Retrying due to status code 429
2025-06-24 09:49:14,844 [DEBUG] 1 retry left
2025-06-24 09:49:14,844 [INFO] Retrying request to /chat/completions in 0.932537 seconds
2025-06-24 09:49:15,778 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-70b2b8ba-6e76-49a8-a37e-65b713285a1d', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 09:49:15,780 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 09:49:15,781 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 09:49:15,781 [DEBUG] send_request_headers.complete
2025-06-24 09:49:15,781 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 09:49:15,782 [DEBUG] send_request_body.complete
2025-06-24 09:49:15,783 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 09:49:16,757 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 04:19:16 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_f3f346c800a062b1531c2d260f6ab1c2'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'95496d097f813e10-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 09:49:16,758 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 09:49:16,760 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 09:49:16,760 [DEBUG] receive_response_body.complete
2025-06-24 09:49:16,761 [DEBUG] response_closed.started
2025-06-24 09:49:16,761 [DEBUG] response_closed.complete
2025-06-24 09:49:16,761 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 04:19:16 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_f3f346c800a062b1531c2d260f6ab1c2', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '95496d097f813e10-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 09:49:16,762 [DEBUG] request_id: req_f3f346c800a062b1531c2d260f6ab1c2
2025-06-24 09:49:16,763 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 09:49:16,764 [DEBUG] Re-raising status error
2025-06-24 09:49:16,765 [ERROR] Error extracting preferences: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-06-24 09:49:16,766 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

2025-06-24 09:49:16,769 [ERROR]  Exception: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-06-24 09:49:16,771 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 387, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

2025-06-24 09:49:16,774 [INFO] 127.0.0.1 - - [24/Jun/2025 09:49:16] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-24 21:36:39,032 [INFO] Received Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein
2025-06-24 21:36:39,034 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-39517d5d-196a-495f-a4af-44df6ba809b1', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 21:36:39,037 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 21:36:39,038 [DEBUG] close.started
2025-06-24 21:36:39,039 [DEBUG] close.complete
2025-06-24 21:36:39,040 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 21:36:39,168 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001BDE4868250>
2025-06-24 21:36:39,168 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001BDE3E1FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 21:36:39,247 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001BDE480B350>
2025-06-24 21:36:39,248 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 21:36:39,248 [DEBUG] send_request_headers.complete
2025-06-24 21:36:39,249 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 21:36:39,249 [DEBUG] send_request_body.complete
2025-06-24 21:36:39,249 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 21:36:39,964 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 16:06:40 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_2ff95192385b4c75d173b9f4a51c9b7e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=n6Au4dzPHNECAq5Osa.amIP6yWkqXcDenLGp_v_65xQ-1750781200-1.0.1.1-DwhyDPtpuSDLQpLBmn_NwGmlMKrkwfjMjqHmJCEfax3hVqFlpeN.rTcX3z6l.mvUaob2oc5KvooLfG8vBlu2cE_QT_AeEI0Zo.aWNWoY1ug; path=/; expires=Tue, 24-Jun-25 16:36:40 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954d79456f4e8aff-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 21:36:39,966 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 21:36:39,966 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 21:36:39,967 [DEBUG] receive_response_body.complete
2025-06-24 21:36:39,967 [DEBUG] response_closed.started
2025-06-24 21:36:39,967 [DEBUG] response_closed.complete
2025-06-24 21:36:39,968 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 16:06:40 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_2ff95192385b4c75d173b9f4a51c9b7e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=n6Au4dzPHNECAq5Osa.amIP6yWkqXcDenLGp_v_65xQ-1750781200-1.0.1.1-DwhyDPtpuSDLQpLBmn_NwGmlMKrkwfjMjqHmJCEfax3hVqFlpeN.rTcX3z6l.mvUaob2oc5KvooLfG8vBlu2cE_QT_AeEI0Zo.aWNWoY1ug; path=/; expires=Tue, 24-Jun-25 16:36:40 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '954d79456f4e8aff-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 21:36:39,970 [DEBUG] request_id: req_2ff95192385b4c75d173b9f4a51c9b7e
2025-06-24 21:36:39,970 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 21:36:39,972 [DEBUG] Retrying due to status code 429
2025-06-24 21:36:39,973 [DEBUG] 2 retries left
2025-06-24 21:36:39,973 [INFO] Retrying request to /chat/completions in 0.392918 seconds
2025-06-24 21:36:40,367 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-39517d5d-196a-495f-a4af-44df6ba809b1', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 21:36:40,368 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 21:36:40,369 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 21:36:40,370 [DEBUG] send_request_headers.complete
2025-06-24 21:36:40,370 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 21:36:40,371 [DEBUG] send_request_body.complete
2025-06-24 21:36:40,371 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 21:36:41,348 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 16:06:42 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_8b037622a3c9f459e5d9b4df4a25c41c'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954d794c5e098aff-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 21:36:41,350 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 21:36:41,350 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 21:36:41,350 [DEBUG] receive_response_body.complete
2025-06-24 21:36:41,351 [DEBUG] response_closed.started
2025-06-24 21:36:41,351 [DEBUG] response_closed.complete
2025-06-24 21:36:41,351 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 16:06:42 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_8b037622a3c9f459e5d9b4df4a25c41c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '954d794c5e098aff-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 21:36:41,352 [DEBUG] request_id: req_8b037622a3c9f459e5d9b4df4a25c41c
2025-06-24 21:36:41,352 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 21:36:41,355 [DEBUG] Retrying due to status code 429
2025-06-24 21:36:41,356 [DEBUG] 1 retry left
2025-06-24 21:36:41,356 [INFO] Retrying request to /chat/completions in 0.865910 seconds
2025-06-24 21:36:42,223 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-39517d5d-196a-495f-a4af-44df6ba809b1', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 2345 cal meal with 30 % fats , 20 % carbs , 50 % protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 21:36:42,224 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 21:36:42,225 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 21:36:42,226 [DEBUG] send_request_headers.complete
2025-06-24 21:36:42,226 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 21:36:42,227 [DEBUG] send_request_body.complete
2025-06-24 21:36:42,227 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 21:36:42,923 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 429, b'Too Many Requests', [(b'Date', b'Tue, 24 Jun 2025 16:06:43 GMT'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Content-Length', b'337'), (b'Connection', b'keep-alive'), (b'vary', b'Origin'), (b'x-request-id', b'req_e8590fefb82c43f8f2ce23154c1df284'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954d7957f9b28aff-BOM'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 21:36:42,924 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 429 Too Many Requests"
2025-06-24 21:36:42,925 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 21:36:42,926 [DEBUG] receive_response_body.complete
2025-06-24 21:36:42,926 [DEBUG] response_closed.started
2025-06-24 21:36:42,927 [DEBUG] response_closed.complete
2025-06-24 21:36:42,927 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "429 Too Many Requests" Headers({'date': 'Tue, 24 Jun 2025 16:06:43 GMT', 'content-type': 'application/json; charset=utf-8', 'content-length': '337', 'connection': 'keep-alive', 'vary': 'Origin', 'x-request-id': 'req_e8590fefb82c43f8f2ce23154c1df284', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '954d7957f9b28aff-BOM', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 21:36:42,928 [DEBUG] request_id: req_e8590fefb82c43f8f2ce23154c1df284
2025-06-24 21:36:42,928 [DEBUG] Encountered httpx.HTTPStatusError
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1014, in request
    response.raise_for_status()
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_models.py", line 829, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)
httpx.HTTPStatusError: Client error '429 Too Many Requests' for url 'https://api.openai.com/v1/chat/completions'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429
2025-06-24 21:36:42,930 [DEBUG] Re-raising status error
2025-06-24 21:36:42,931 [ERROR] Error extracting preferences: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-06-24 21:36:42,932 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

2025-06-24 21:36:42,935 [ERROR]  Exception: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}
2025-06-24 21:36:42,937 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 387, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1034, in request
    raise self._make_status_error_from_response(err.response) from None
openai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}

2025-06-24 21:36:42,940 [INFO] 127.0.0.1 - - [24/Jun/2025 21:36:42] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-06-24 21:39:28,179 [INFO] CSV loaded successfully.
2025-06-24 21:39:28,232 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-06-24 21:39:28,233 [INFO] [33mPress CTRL+C to quit[0m
2025-06-24 21:39:28,236 [INFO]  * Restarting with stat
2025-06-24 21:39:31,432 [INFO] CSV loaded successfully.
2025-06-24 21:39:31,474 [WARNING]  * Debugger is active!
2025-06-24 21:39:31,480 [INFO]  * Debugger PIN: 461-893-414
2025-06-24 21:39:34,423 [INFO] 127.0.0.1 - - [24/Jun/2025 21:39:34] "GET / HTTP/1.1" 200 -
2025-06-24 21:39:34,617 [INFO] 127.0.0.1 - - [24/Jun/2025 21:39:34] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-24 21:39:36,685 [INFO] 127.0.0.1 - - [24/Jun/2025 21:39:36] "GET /meal-planner HTTP/1.1" 200 -
2025-06-24 21:40:28,994 [INFO] Received Input: give me meal for 2345 cal with 30% fats , 20 % carbs , 50% protein
2025-06-24 21:40:29,429 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-bdfdfda9-a396-4930-9f4e-e01cecd9ee6c', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2345 cal with 30% fats , 20 % carbs , 50% protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 21:40:29,442 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 21:40:29,443 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 21:40:29,555 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B1FFD1FE50>
2025-06-24 21:40:29,555 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001B1FFC3FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 21:40:29,613 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B180542BD0>
2025-06-24 21:40:29,614 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 21:40:29,615 [DEBUG] send_request_headers.complete
2025-06-24 21:40:29,615 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 21:40:29,616 [DEBUG] send_request_body.complete
2025-06-24 21:40:29,616 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 21:40:31,945 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 24 Jun 2025 16:10:32 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'1279'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1284'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29912'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'176ms'), (b'x-request-id', b'req_4bcdcf38eaea963e87e0027a8f329a4d'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=9EqddoomojrhNY_2rQfb1L9z2EZPvo9OUHpR3EIbPTQ-1750781432-1.0.1.1-TP6Jsr_dI4rHYJWxSxMS_aN7CgkTAQ2IvTS7hGH4y0rbFUfbUEwiQDAFAEHuJxMuINMQjihUr3Y2G5x6uvG_Yaf4QZtuZ8TZYh_UxJPf0JU; path=/; expires=Tue, 24-Jun-25 16:40:32 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=cVvoriUr1FIIi4g2g.E_jLz1Y62wn5.xIQGnD6jhTNU-1750781432771-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954d7ee4ffe14728-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 21:40:31,948 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 21:40:31,949 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 21:40:31,951 [DEBUG] receive_response_body.complete
2025-06-24 21:40:31,952 [DEBUG] response_closed.started
2025-06-24 21:40:31,952 [DEBUG] response_closed.complete
2025-06-24 21:40:31,953 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Tue, 24 Jun 2025 16:10:32 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-uj9yjhz9wzpcuji1que76zpa'), ('openai-processing-ms', '1279'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1284'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29912'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '176ms'), ('x-request-id', 'req_4bcdcf38eaea963e87e0027a8f329a4d'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=9EqddoomojrhNY_2rQfb1L9z2EZPvo9OUHpR3EIbPTQ-1750781432-1.0.1.1-TP6Jsr_dI4rHYJWxSxMS_aN7CgkTAQ2IvTS7hGH4y0rbFUfbUEwiQDAFAEHuJxMuINMQjihUr3Y2G5x6uvG_Yaf4QZtuZ8TZYh_UxJPf0JU; path=/; expires=Tue, 24-Jun-25 16:40:32 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=cVvoriUr1FIIi4g2g.E_jLz1Y62wn5.xIQGnD6jhTNU-1750781432771-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '954d7ee4ffe14728-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-24 21:40:31,956 [DEBUG] request_id: req_4bcdcf38eaea963e87e0027a8f329a4d
2025-06-24 21:40:31,964 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 50,
  "carbs_pct": 20,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-24 21:40:31,966 [INFO]  Extracted Params: {'calories_target': 2345, 'protein_pct': 50, 'carbs_pct': 20, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-24 21:40:32,001 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-18909b7e-cb43-4fa9-a47e-3572f8207730', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2700.0 kcal\nProtein: 293.1 g\nCarbs: 117.2 g\nFat: 118.2 g\nFiber: 29.4 g\nSugar: 25.0 g\nSodium: 2300.4 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nAfghani chicken (Non-Veg) for Lunch, Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-24 21:40:32,004 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 21:40:32,004 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 21:40:32,004 [DEBUG] send_request_headers.complete
2025-06-24 21:40:32,004 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 21:40:32,005 [DEBUG] send_request_body.complete
2025-06-24 21:40:32,006 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 21:40:41,239 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 24 Jun 2025 16:10:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'8545'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'8547'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29822'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'356ms'), (b'x-request-id', b'req_dce09de732c324aeb40de41bf4411d24'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954d7ef3f9cb4728-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 21:40:41,241 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 21:40:41,242 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 21:40:41,528 [DEBUG] receive_response_body.complete
2025-06-24 21:40:41,529 [DEBUG] response_closed.started
2025-06-24 21:40:41,529 [DEBUG] response_closed.complete
2025-06-24 21:40:41,529 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 24 Jun 2025 16:10:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-uj9yjhz9wzpcuji1que76zpa', 'openai-processing-ms': '8545', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '8547', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29822', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '356ms', 'x-request-id': 'req_dce09de732c324aeb40de41bf4411d24', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '954d7ef3f9cb4728-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 21:40:41,531 [DEBUG] request_id: req_dce09de732c324aeb40de41bf4411d24
2025-06-24 21:40:41,532 [INFO]  Meal plan generated with 9 dishes
2025-06-24 21:40:41,533 [INFO] 127.0.0.1 - - [24/Jun/2025 21:40:41] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-24 21:45:13,824 [INFO] 127.0.0.1 - - [24/Jun/2025 21:45:13] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-06-24 21:46:47,152 [INFO] Received Input: give me meal for 2345 cal with 30% fats , 20 % carbs , 50% protein
2025-06-24 21:46:47,156 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-cb424d45-c5cb-453a-94d5-30c05314e300', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2345 cal with 30% fats , 20 % carbs , 50% protein'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 21:46:47,159 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 21:46:47,160 [DEBUG] close.started
2025-06-24 21:46:47,161 [DEBUG] close.complete
2025-06-24 21:46:47,162 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 21:46:47,256 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B1808C2410>
2025-06-24 21:46:47,256 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x000001B1FFC3FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 21:46:47,312 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x000001B180543490>
2025-06-24 21:46:47,312 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 21:46:47,312 [DEBUG] send_request_headers.complete
2025-06-24 21:46:47,314 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 21:46:47,314 [DEBUG] send_request_body.complete
2025-06-24 21:46:47,314 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 21:46:48,463 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 24 Jun 2025 16:16:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'787'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'793'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29912'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'176ms'), (b'x-request-id', b'req_f54f2db2762fa8ff5c42a94be597542b'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954d881dca3a8a26-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 21:46:48,465 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 21:46:48,466 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 21:46:48,466 [DEBUG] receive_response_body.complete
2025-06-24 21:46:48,467 [DEBUG] response_closed.started
2025-06-24 21:46:48,467 [DEBUG] response_closed.complete
2025-06-24 21:46:48,468 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 24 Jun 2025 16:16:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-uj9yjhz9wzpcuji1que76zpa', 'openai-processing-ms': '787', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '793', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29912', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '176ms', 'x-request-id': 'req_f54f2db2762fa8ff5c42a94be597542b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '954d881dca3a8a26-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 21:46:48,469 [DEBUG] request_id: req_f54f2db2762fa8ff5c42a94be597542b
2025-06-24 21:46:48,471 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 50,
  "carbs_pct": 20,
  "fat_pct": 30,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-24 21:46:48,472 [INFO]  Extracted Params: {'calories_target': 2345, 'protein_pct': 50, 'carbs_pct': 20, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-24 21:46:48,495 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-be8b2fe4-935f-4e14-a79f-bf7bcdf74c94', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2700.0 kcal\nProtein: 293.1 g\nCarbs: 117.2 g\nFat: 118.2 g\nFiber: 29.4 g\nSugar: 25.0 g\nSodium: 2300.4 mg\n\nRecommended Meals:\nChicken stock (Non-Veg) for Any\nChicken yakhni (Non-Veg) for Lunch/Dinner\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nAfghani chicken (Non-Veg) for Lunch, Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-24 21:46:48,497 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 21:46:48,498 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 21:46:48,499 [DEBUG] send_request_headers.complete
2025-06-24 21:46:48,499 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 21:46:48,500 [DEBUG] send_request_body.complete
2025-06-24 21:46:48,501 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 21:46:54,421 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 24 Jun 2025 16:16:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'5076'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5090'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29822'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'356ms'), (b'x-request-id', b'req_0db69df8513c59a25a9fb391d970a97c'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954d88253a568a26-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 21:46:54,425 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 21:46:54,426 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 21:46:54,427 [DEBUG] receive_response_body.complete
2025-06-24 21:46:54,427 [DEBUG] response_closed.started
2025-06-24 21:46:54,428 [DEBUG] response_closed.complete
2025-06-24 21:46:54,429 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 24 Jun 2025 16:16:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-uj9yjhz9wzpcuji1que76zpa', 'openai-processing-ms': '5076', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5090', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29822', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '356ms', 'x-request-id': 'req_0db69df8513c59a25a9fb391d970a97c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '954d88253a568a26-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 21:46:54,431 [DEBUG] request_id: req_0db69df8513c59a25a9fb391d970a97c
2025-06-24 21:46:54,432 [INFO]  Meal plan generated with 9 dishes
2025-06-24 21:46:54,433 [INFO] 127.0.0.1 - - [24/Jun/2025 21:46:54] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-24 22:09:01,908 [INFO] 127.0.0.1 - - [24/Jun/2025 22:09:01] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-06-24 22:11:33,419 [INFO]  * Detected change in 'C:\\Users\\sanke\\OneDrive\\Desktop\\Meal_planner changes for bots\\app.py', reloading
2025-06-24 22:11:33,837 [INFO]  * Restarting with stat
2025-06-24 22:13:07,388 [INFO] CSV loaded successfully.
2025-06-24 22:13:07,455 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-06-24 22:13:07,456 [INFO] [33mPress CTRL+C to quit[0m
2025-06-24 22:13:07,460 [INFO]  * Restarting with stat
2025-06-24 22:13:10,775 [INFO] CSV loaded successfully.
2025-06-24 22:13:10,811 [WARNING]  * Debugger is active!
2025-06-24 22:13:10,816 [INFO]  * Debugger PIN: 461-893-414
2025-06-24 22:13:29,472 [INFO] 127.0.0.1 - - [24/Jun/2025 22:13:29] "GET / HTTP/1.1" 200 -
2025-06-24 22:13:29,663 [INFO] 127.0.0.1 - - [24/Jun/2025 22:13:29] "[36mGET /static/css/main.css HTTP/1.1[0m" 304 -
2025-06-24 22:13:31,227 [INFO] 127.0.0.1 - - [24/Jun/2025 22:13:31] "GET /meal-planner HTTP/1.1" 200 -
2025-06-24 22:14:01,720 [INFO] Received Input: give me meal for 2345 cal with 50 % fats , 30% protein , 20 % carbs
2025-06-24 22:14:02,147 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-fc1b453b-4981-4e5c-aacc-5a89e3a7affe', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2345 cal with 50 % fats , 30% protein , 20 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 22:14:02,161 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 22:14:02,162 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 22:14:02,335 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020A50026A90>
2025-06-24 22:14:02,335 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000020A4F9EFD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 22:14:02,459 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000020A50026B50>
2025-06-24 22:14:02,460 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 22:14:02,461 [DEBUG] send_request_headers.complete
2025-06-24 22:14:02,461 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 22:14:02,462 [DEBUG] send_request_body.complete
2025-06-24 22:14:02,462 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 22:14:04,617 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 24 Jun 2025 16:44:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'1004'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1061'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29912'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'176ms'), (b'x-request-id', b'req_1efbca4b503893d02ffd0a4a7bee306c'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=m8viojKrUsVfiA0agd0l9t0riMa5J2myT1H2nlsc_gM-1750783445-1.0.1.1-w6uppIX7fubdMf4s2MyjjFK0KTKLZy2EzbNCbW6LEyWim0nmiXcGFeEHiXb8nomsMLwOL4BCuNLJXqpNYhineqvKARIzGrM3Ngiwsgn3PhI; path=/; expires=Tue, 24-Jun-25 17:14:05 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=fKikzjhKiEKBSjuyHw9UxVDoSpeB6w6TFZFWGAy9u4U-1750783445331-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954db0099a7c3e0a-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 22:14:04,620 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 22:14:04,621 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 22:14:04,622 [DEBUG] receive_response_body.complete
2025-06-24 22:14:04,622 [DEBUG] response_closed.started
2025-06-24 22:14:04,623 [DEBUG] response_closed.complete
2025-06-24 22:14:04,623 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Tue, 24 Jun 2025 16:44:05 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-uj9yjhz9wzpcuji1que76zpa'), ('openai-processing-ms', '1004'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1061'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29912'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '176ms'), ('x-request-id', 'req_1efbca4b503893d02ffd0a4a7bee306c'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=m8viojKrUsVfiA0agd0l9t0riMa5J2myT1H2nlsc_gM-1750783445-1.0.1.1-w6uppIX7fubdMf4s2MyjjFK0KTKLZy2EzbNCbW6LEyWim0nmiXcGFeEHiXb8nomsMLwOL4BCuNLJXqpNYhineqvKARIzGrM3Ngiwsgn3PhI; path=/; expires=Tue, 24-Jun-25 17:14:05 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=fKikzjhKiEKBSjuyHw9UxVDoSpeB6w6TFZFWGAy9u4U-1750783445331-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '954db0099a7c3e0a-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-24 22:14:04,626 [DEBUG] request_id: req_1efbca4b503893d02ffd0a4a7bee306c
2025-06-24 22:14:04,630 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 30,
  "carbs_pct": 20,
  "fat_pct": 50,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-24 22:14:04,632 [INFO]  Extracted Params: {'calories_target': 2345, 'protein_pct': 30, 'carbs_pct': 20, 'fat_pct': 50, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-24 22:14:04,670 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-fdd3849e-2dff-49cd-9851-b320cd4a0330', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2247.0 kcal\nProtein: 175.9 g\nCarbs: 117.3 g\nFat: 130.3 g\nFiber: 41.7 g\nSugar: 3.9 g\nSodium: 619.2 mg\n\nRecommended Meals:\nMeat stock (Non-Veg) for Any\nRoast chicken (nan) for nan\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-24 22:14:04,672 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 22:14:04,673 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 22:14:04,674 [DEBUG] send_request_headers.complete
2025-06-24 22:14:04,674 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 22:14:04,675 [DEBUG] send_request_body.complete
2025-06-24 22:14:04,675 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 22:14:10,056 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 24 Jun 2025 16:44:10 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'4491'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4496'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29821'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'358ms'), (b'x-request-id', b'req_f003f4d8ad67c440cbd61a51c1b5d153'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954db0176cb33e0a-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 22:14:10,058 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 22:14:10,059 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 22:14:10,060 [DEBUG] receive_response_body.complete
2025-06-24 22:14:10,060 [DEBUG] response_closed.started
2025-06-24 22:14:10,060 [DEBUG] response_closed.complete
2025-06-24 22:14:10,061 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 24 Jun 2025 16:44:10 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-uj9yjhz9wzpcuji1que76zpa', 'openai-processing-ms': '4491', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4496', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29821', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '358ms', 'x-request-id': 'req_f003f4d8ad67c440cbd61a51c1b5d153', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '954db0176cb33e0a-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 22:14:10,062 [DEBUG] request_id: req_f003f4d8ad67c440cbd61a51c1b5d153
2025-06-24 22:14:10,064 [INFO]  Meal plan generated with 8 dishes
2025-06-24 22:14:10,066 [INFO] 127.0.0.1 - - [24/Jun/2025 22:14:10] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-24 22:14:18,646 [INFO] 127.0.0.1 - - [24/Jun/2025 22:14:18] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-06-24 22:18:31,356 [INFO]  * Detected change in 'C:\\Users\\sanke\\OneDrive\\Desktop\\Meal_planner changes for bots\\app.py', reloading
2025-06-24 22:18:31,683 [INFO]  * Restarting with stat
2025-06-24 22:18:35,656 [INFO] CSV loaded successfully.
2025-06-24 22:18:35,698 [WARNING]  * Debugger is active!
2025-06-24 22:18:35,707 [INFO]  * Debugger PIN: 461-893-414
2025-06-24 22:18:47,304 [INFO] Received Input: give me meal for 2345 cal with 50 % fats , 30% protein , 20 % carbs
2025-06-24 22:18:47,794 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-44ccf72e-4b02-462f-9793-e2b0383c6f07', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2345 cal with 50 % fats , 30% protein , 20 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 22:18:47,811 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 22:18:47,812 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 22:18:47,953 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021A22097350>
2025-06-24 22:18:47,954 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021A21A7FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 22:18:48,033 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021A22097410>
2025-06-24 22:18:48,034 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 22:18:48,035 [DEBUG] send_request_headers.complete
2025-06-24 22:18:48,036 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 22:18:48,036 [DEBUG] send_request_body.complete
2025-06-24 22:18:48,037 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 22:18:50,468 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 24 Jun 2025 16:48:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'1455'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1461'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29912'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'176ms'), (b'x-request-id', b'req_b9d72422b2c683a523e55d211f9572c4'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=c0BCVsIspbJUPC1dD7zz8b_qnduHvbvDg2qP8zptCYU-1750783731-1.0.1.1-MZMv6i6hDR6zZfpBEa57QF0QNxU8HY89WwKsOgiAT1NaKA5BxtnyVuvpKu3P8DVoU9dGdBo2rdDDTUcCACKGJWJYIWHhswc6cpv.C3Rw2yA; path=/; expires=Tue, 24-Jun-25 17:18:51 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=kCBEHkkMAKp54z_VCMNWptdMKHNjtkZTqsZIOeKIHio-1750783731420-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954db702cf1089f6-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 22:18:50,471 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 22:18:50,471 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 22:18:50,489 [DEBUG] receive_response_body.complete
2025-06-24 22:18:50,489 [DEBUG] response_closed.started
2025-06-24 22:18:50,490 [DEBUG] response_closed.complete
2025-06-24 22:18:50,490 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Tue, 24 Jun 2025 16:48:51 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-uj9yjhz9wzpcuji1que76zpa'), ('openai-processing-ms', '1455'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1461'), ('x-ratelimit-limit-requests', '500'), ('x-ratelimit-limit-tokens', '30000'), ('x-ratelimit-remaining-requests', '499'), ('x-ratelimit-remaining-tokens', '29912'), ('x-ratelimit-reset-requests', '120ms'), ('x-ratelimit-reset-tokens', '176ms'), ('x-request-id', 'req_b9d72422b2c683a523e55d211f9572c4'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=c0BCVsIspbJUPC1dD7zz8b_qnduHvbvDg2qP8zptCYU-1750783731-1.0.1.1-MZMv6i6hDR6zZfpBEa57QF0QNxU8HY89WwKsOgiAT1NaKA5BxtnyVuvpKu3P8DVoU9dGdBo2rdDDTUcCACKGJWJYIWHhswc6cpv.C3Rw2yA; path=/; expires=Tue, 24-Jun-25 17:18:51 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=kCBEHkkMAKp54z_VCMNWptdMKHNjtkZTqsZIOeKIHio-1750783731420-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '954db702cf1089f6-BOM'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-06-24 22:18:50,492 [DEBUG] request_id: req_b9d72422b2c683a523e55d211f9572c4
2025-06-24 22:18:50,497 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 30,
  "carbs_pct": 20,
  "fat_pct": 50,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-24 22:18:50,500 [INFO] Extracted Params: {'calories_target': 2345, 'protein_pct': 30, 'carbs_pct': 20, 'fat_pct': 50, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-24 22:18:50,552 [INFO] Received Input: give me meal for 2345 cal with 50 % fats , 30% protein , 20 % carbs
2025-06-24 22:18:50,555 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a9883d23-0de5-400b-b1d9-58386999b56c', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2345 cal with 50 % fats , 30% protein , 20 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 22:18:50,558 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ab38094f-c8ba-4adc-a25d-921d42feb33c', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2247.0 kcal\nProtein: 175.9 g\nCarbs: 117.3 g\nFat: 130.3 g\nFiber: 41.7 g\nSugar: 3.9 g\nSodium: 619.2 mg\n\nRecommended Meals:\nMeat stock (Non-Veg) for Any\nRoast chicken (Unknown) for Anytime\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-24 22:18:50,559 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 22:18:50,563 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 22:18:50,564 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 22:18:50,564 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 22:18:50,565 [DEBUG] send_request_headers.complete
2025-06-24 22:18:50,568 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 22:18:50,569 [DEBUG] send_request_body.complete
2025-06-24 22:18:50,571 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 22:18:50,658 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021A220B3A50>
2025-06-24 22:18:50,659 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021A21A7FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 22:18:50,785 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021A220B2590>
2025-06-24 22:18:50,786 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 22:18:50,787 [DEBUG] send_request_headers.complete
2025-06-24 22:18:50,787 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 22:18:50,788 [DEBUG] send_request_body.complete
2025-06-24 22:18:50,788 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 22:18:52,020 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 24 Jun 2025 16:48:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'1077'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1084'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29912'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'176ms'), (b'x-request-id', b'req_a19856b98c9dfdbd076162de962807d6'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954db712997189f6-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 22:18:52,033 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 22:18:52,061 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 22:18:52,063 [DEBUG] receive_response_body.complete
2025-06-24 22:18:52,071 [DEBUG] response_closed.started
2025-06-24 22:18:52,072 [DEBUG] response_closed.complete
2025-06-24 22:18:52,073 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 24 Jun 2025 16:48:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-uj9yjhz9wzpcuji1que76zpa', 'openai-processing-ms': '1077', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1084', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29912', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '176ms', 'x-request-id': 'req_a19856b98c9dfdbd076162de962807d6', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '954db712997189f6-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 22:18:52,075 [DEBUG] request_id: req_a19856b98c9dfdbd076162de962807d6
2025-06-24 22:18:52,077 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 30,
  "carbs_pct": 20,
  "fat_pct": 50,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-24 22:18:52,080 [INFO] Extracted Params: {'calories_target': 2345, 'protein_pct': 30, 'carbs_pct': 20, 'fat_pct': 50, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-24 22:18:52,123 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-443464bc-77f1-4306-907e-5ebbbbe2e831', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2247.0 kcal\nProtein: 175.9 g\nCarbs: 117.3 g\nFat: 130.3 g\nFiber: 41.7 g\nSugar: 3.9 g\nSodium: 619.2 mg\n\nRecommended Meals:\nMeat stock (Non-Veg) for Any\nRoast chicken (Unknown) for Anytime\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-24 22:18:52,127 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 22:18:52,128 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 22:18:52,131 [DEBUG] send_request_headers.complete
2025-06-24 22:18:52,132 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 22:18:52,136 [DEBUG] send_request_body.complete
2025-06-24 22:18:52,137 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 22:18:54,850 [INFO] Received Input: give me meal for 2345 cal with 50 % fats , 30% protein , 20 % carbs
2025-06-24 22:18:54,853 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-57418a48-7a6c-4fa6-b3fe-86e73cd04c4b', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2345 cal with 50 % fats , 30% protein , 20 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 22:18:54,856 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 22:18:54,857 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 22:18:55,008 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021A22428950>
2025-06-24 22:18:55,009 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021A21A7FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 22:18:55,073 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021A22428B50>
2025-06-24 22:18:55,073 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 22:18:55,074 [DEBUG] send_request_headers.complete
2025-06-24 22:18:55,074 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 22:18:55,075 [DEBUG] send_request_body.complete
2025-06-24 22:18:55,075 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 22:18:55,338 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 24 Jun 2025 16:48:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'3985'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3989'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29819'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'362ms'), (b'x-request-id', b'req_1dd34f1d4fb4d3bda9a2fe6e704a20bd'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954db713de993afe-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 22:18:55,341 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 22:18:55,342 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 22:18:55,342 [DEBUG] receive_response_body.complete
2025-06-24 22:18:55,343 [DEBUG] response_closed.started
2025-06-24 22:18:55,343 [DEBUG] response_closed.complete
2025-06-24 22:18:55,344 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 24 Jun 2025 16:48:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-uj9yjhz9wzpcuji1que76zpa', 'openai-processing-ms': '3985', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '3989', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29819', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '362ms', 'x-request-id': 'req_1dd34f1d4fb4d3bda9a2fe6e704a20bd', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '954db713de993afe-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 22:18:55,347 [DEBUG] request_id: req_1dd34f1d4fb4d3bda9a2fe6e704a20bd
2025-06-24 22:18:55,348 [INFO] Meal plan generated with 8 dishes
2025-06-24 22:18:55,352 [INFO] 127.0.0.1 - - [24/Jun/2025 22:18:55] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-24 22:18:56,134 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 24 Jun 2025 16:48:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'627'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'633'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29912'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'176ms'), (b'x-request-id', b'req_8d06fd8838407e20b0f42d7eb1c414b9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954db72ebf678afd-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 22:18:56,137 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 22:18:56,138 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 22:18:56,139 [DEBUG] receive_response_body.complete
2025-06-24 22:18:56,139 [DEBUG] response_closed.started
2025-06-24 22:18:56,140 [DEBUG] response_closed.complete
2025-06-24 22:18:56,141 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 24 Jun 2025 16:48:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-uj9yjhz9wzpcuji1que76zpa', 'openai-processing-ms': '627', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '633', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29912', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '176ms', 'x-request-id': 'req_8d06fd8838407e20b0f42d7eb1c414b9', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '954db72ebf678afd-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 22:18:56,143 [DEBUG] request_id: req_8d06fd8838407e20b0f42d7eb1c414b9
2025-06-24 22:18:56,145 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 30,
  "carbs_pct": 20,
  "fat_pct": 50,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-24 22:18:56,147 [INFO] Extracted Params: {'calories_target': 2345, 'protein_pct': 30, 'carbs_pct': 20, 'fat_pct': 50, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-24 22:18:56,208 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-879c9fb5-8ecb-410d-80da-79784ab1b7b8', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2247.0 kcal\nProtein: 175.9 g\nCarbs: 117.3 g\nFat: 130.3 g\nFiber: 41.7 g\nSugar: 3.9 g\nSodium: 619.2 mg\n\nRecommended Meals:\nMeat stock (Non-Veg) for Any\nRoast chicken (Unknown) for Anytime\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-24 22:18:56,211 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 22:18:56,212 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 22:18:56,213 [DEBUG] send_request_headers.complete
2025-06-24 22:18:56,213 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 22:18:56,214 [DEBUG] send_request_body.complete
2025-06-24 22:18:56,214 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 22:18:56,706 [INFO] 127.0.0.1 - - [24/Jun/2025 22:18:56] "GET /meal-planner HTTP/1.1" 200 -
2025-06-24 22:19:00,609 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 24 Jun 2025 16:49:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'6481'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'7230'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29819'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'362ms'), (b'x-request-id', b'req_ac830b7c57951f09a57133f4eaead77e'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954db71c395e89f6-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 22:19:00,611 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 22:19:00,611 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 22:19:00,612 [DEBUG] receive_response_body.complete
2025-06-24 22:19:00,613 [DEBUG] response_closed.started
2025-06-24 22:19:00,613 [DEBUG] response_closed.complete
2025-06-24 22:19:00,614 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 24 Jun 2025 16:49:01 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-uj9yjhz9wzpcuji1que76zpa', 'openai-processing-ms': '6481', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '7230', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29819', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '362ms', 'x-request-id': 'req_ac830b7c57951f09a57133f4eaead77e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '954db71c395e89f6-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 22:19:00,615 [DEBUG] request_id: req_ac830b7c57951f09a57133f4eaead77e
2025-06-24 22:19:00,617 [INFO] Meal plan generated with 8 dishes
2025-06-24 22:19:00,618 [INFO] 127.0.0.1 - - [24/Jun/2025 22:19:00] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-24 22:19:03,032 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 24 Jun 2025 16:49:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'5862'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'5869'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29819'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'362ms'), (b'x-request-id', b'req_47499dc84e5eda43456ab6db0ef206b9'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954db7359edb3afe-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 22:19:03,034 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 22:19:03,035 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 22:19:03,048 [DEBUG] receive_response_body.complete
2025-06-24 22:19:03,048 [DEBUG] response_closed.started
2025-06-24 22:19:03,049 [DEBUG] response_closed.complete
2025-06-24 22:19:03,051 [DEBUG] close.started
2025-06-24 22:19:03,052 [DEBUG] close.complete
2025-06-24 22:19:03,053 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 24 Jun 2025 16:49:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-uj9yjhz9wzpcuji1que76zpa', 'openai-processing-ms': '5862', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '5869', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29819', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '362ms', 'x-request-id': 'req_47499dc84e5eda43456ab6db0ef206b9', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '954db7359edb3afe-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 22:19:03,055 [DEBUG] request_id: req_47499dc84e5eda43456ab6db0ef206b9
2025-06-24 22:19:03,056 [INFO] Meal plan generated with 8 dishes
2025-06-24 22:19:03,057 [INFO] 127.0.0.1 - - [24/Jun/2025 22:19:03] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-24 22:19:39,992 [INFO] Received Input: give me meal for 2345 cal with 30 % protein , 20 % fats , 50 % carbs
2025-06-24 22:19:39,995 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a055e85c-38f1-4c96-a1ae-de6e8397b535', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me meal for 2345 cal with 30 % protein , 20 % fats , 50 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-24 22:19:39,997 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 22:19:39,998 [DEBUG] close.started
2025-06-24 22:19:40,000 [DEBUG] close.complete
2025-06-24 22:19:40,001 [DEBUG] close.started
2025-06-24 22:19:40,006 [DEBUG] close.complete
2025-06-24 22:19:40,008 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-24 22:19:40,090 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021A220BCE90>
2025-06-24 22:19:40,091 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021A21A7FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-24 22:19:40,170 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021A220BD5D0>
2025-06-24 22:19:40,171 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 22:19:40,171 [DEBUG] send_request_headers.complete
2025-06-24 22:19:40,172 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 22:19:40,172 [DEBUG] send_request_body.complete
2025-06-24 22:19:40,173 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 22:19:42,209 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 24 Jun 2025 16:49:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'1633'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1639'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29911'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'178ms'), (b'x-request-id', b'req_e18bd3e57d5d79c306df8e672b575530'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954db8485a340028-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 22:19:42,211 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 22:19:42,212 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 22:19:42,213 [DEBUG] receive_response_body.complete
2025-06-24 22:19:42,213 [DEBUG] response_closed.started
2025-06-24 22:19:42,213 [DEBUG] response_closed.complete
2025-06-24 22:19:42,214 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 24 Jun 2025 16:49:43 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-uj9yjhz9wzpcuji1que76zpa', 'openai-processing-ms': '1633', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1639', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29911', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '178ms', 'x-request-id': 'req_e18bd3e57d5d79c306df8e672b575530', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '954db8485a340028-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 22:19:42,215 [DEBUG] request_id: req_e18bd3e57d5d79c306df8e672b575530
2025-06-24 22:19:42,216 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 30,
  "carbs_pct": 50,
  "fat_pct": 20,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-24 22:19:42,218 [INFO] Extracted Params: {'calories_target': 2345, 'protein_pct': 30, 'carbs_pct': 50, 'fat_pct': 20, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-24 22:19:42,257 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b2a44e6f-8b4c-4ca6-b5a1-0fc47dc4f113', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2278.0 kcal\nProtein: 175.9 g\nCarbs: 293.2 g\nFat: 52.1 g\nFiber: 51.9 g\nSugar: 25.0 g\nSodium: 1489.5 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nGun powder chutney (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nChanna murmura premix (Veg) for Breakfast\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-24 22:19:42,259 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-24 22:19:42,260 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-24 22:19:42,260 [DEBUG] send_request_headers.complete
2025-06-24 22:19:42,260 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-24 22:19:42,261 [DEBUG] send_request_body.complete
2025-06-24 22:19:42,261 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-24 22:19:47,770 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 24 Jun 2025 16:49:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'4560'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4568'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29820'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'360ms'), (b'x-request-id', b'req_8ac98d339c501ccb18a5ad9049ea7295'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'954db8559cf50028-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-24 22:19:47,772 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-24 22:19:47,773 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-24 22:19:47,778 [DEBUG] receive_response_body.complete
2025-06-24 22:19:47,778 [DEBUG] response_closed.started
2025-06-24 22:19:47,779 [DEBUG] response_closed.complete
2025-06-24 22:19:47,779 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 24 Jun 2025 16:49:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-uj9yjhz9wzpcuji1que76zpa', 'openai-processing-ms': '4560', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4568', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29820', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '360ms', 'x-request-id': 'req_8ac98d339c501ccb18a5ad9049ea7295', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '954db8559cf50028-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-24 22:19:47,782 [DEBUG] request_id: req_8ac98d339c501ccb18a5ad9049ea7295
2025-06-24 22:19:47,783 [INFO] Meal plan generated with 8 dishes
2025-06-24 22:19:47,785 [INFO] 127.0.0.1 - - [24/Jun/2025 22:19:47] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-25 11:03:22,831 [INFO] 127.0.0.1 - - [25/Jun/2025 11:03:22] "GET /meal-planner HTTP/1.1" 200 -
2025-06-25 11:04:16,384 [INFO] Received Input: give me 1500 cal with 40 % protein, 30% fats , 30 % carbs 
2025-06-25 11:04:16,387 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f4b32298-8a6b-41d0-bd6b-2f60f126a11f', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give me 1500 cal with 40 % protein, 30% fats , 30 % carbs '}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-25 11:04:16,390 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-25 11:04:16,392 [DEBUG] close.started
2025-06-25 11:04:16,393 [DEBUG] close.complete
2025-06-25 11:04:16,393 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-25 11:04:21,337 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021A220B1050>
2025-06-25 11:04:21,337 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021A21A7FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-25 11:04:21,426 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021A220B02D0>
2025-06-25 11:04:21,426 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-25 11:04:21,427 [DEBUG] send_request_headers.complete
2025-06-25 11:04:21,428 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-25 11:04:21,428 [DEBUG] send_request_body.complete
2025-06-25 11:04:21,429 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-25 11:04:23,737 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 25 Jun 2025 05:34:24 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'1281'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1286'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29914'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'172ms'), (b'x-request-id', b'req_14f20513a2d141c7b4c6ac2d56ecd7c3'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=2GF9H9qxb.hXjIX8SGULMJ..oEMN5xg85tWDMhe2NGA-1750829664-1.0.1.1-XLOb_n1h8QQZCDTbe1.8RIGtWnjfJPVpT2UXlQyBagIHSgUkPGJ0jAp8UgDyfb9VdtT8jQcJeqP9gH7uj5GUDwRMZ1xlvMeZLdaJYtVCXvM; path=/; expires=Wed, 25-Jun-25 06:04:24 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9552186fe9be8a08-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-25 11:04:23,740 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-25 11:04:23,740 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-25 11:04:23,741 [DEBUG] receive_response_body.complete
2025-06-25 11:04:23,741 [DEBUG] response_closed.started
2025-06-25 11:04:23,742 [DEBUG] response_closed.complete
2025-06-25 11:04:23,742 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 25 Jun 2025 05:34:24 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-uj9yjhz9wzpcuji1que76zpa', 'openai-processing-ms': '1281', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1286', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29914', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '172ms', 'x-request-id': 'req_14f20513a2d141c7b4c6ac2d56ecd7c3', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=2GF9H9qxb.hXjIX8SGULMJ..oEMN5xg85tWDMhe2NGA-1750829664-1.0.1.1-XLOb_n1h8QQZCDTbe1.8RIGtWnjfJPVpT2UXlQyBagIHSgUkPGJ0jAp8UgDyfb9VdtT8jQcJeqP9gH7uj5GUDwRMZ1xlvMeZLdaJYtVCXvM; path=/; expires=Wed, 25-Jun-25 06:04:24 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9552186fe9be8a08-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-25 11:04:23,744 [DEBUG] request_id: req_14f20513a2d141c7b4c6ac2d56ecd7c3
2025-06-25 11:04:23,745 [INFO] LLM Raw Output:
```json
{
    "calories_target": 1500,
    "protein_pct": 40,
    "carbs_pct": 30,
    "fat_pct": 30,
    "fiber_min": 25,
    "sugar_max": 25,
    "sodium_max": 2300
}
```
2025-06-25 11:04:23,747 [INFO] Extracted Params: {'calories_target': 1500, 'protein_pct': 40, 'carbs_pct': 30, 'fat_pct': 30, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-25 11:04:23,770 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1e62aa57-3dbb-4419-98df-cefa7f6b79b4', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 1457.0 kcal\nProtein: 150.0 g\nCarbs: 112.6 g\nFat: 50.1 g\nFiber: 34.8 g\nSugar: 25.0 g\nSodium: 1052.3 mg\n\nRecommended Meals:\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nTomato aspic (Veg) for Any\nLemon chicken (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-25 11:04:23,772 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-25 11:04:23,772 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-25 11:04:23,773 [DEBUG] send_request_headers.complete
2025-06-25 11:04:23,773 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-25 11:04:23,774 [DEBUG] send_request_body.complete
2025-06-25 11:04:23,774 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-25 11:04:29,154 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 25 Jun 2025 05:34:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'4597'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'4602'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29852'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'296ms'), (b'x-request-id', b'req_58cce7b5a636147478a3a1f37111ef73'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9552187fccc78a08-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-25 11:04:29,156 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-25 11:04:29,156 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-25 11:04:29,159 [DEBUG] receive_response_body.complete
2025-06-25 11:04:29,159 [DEBUG] response_closed.started
2025-06-25 11:04:29,160 [DEBUG] response_closed.complete
2025-06-25 11:04:29,160 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 25 Jun 2025 05:34:30 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-uj9yjhz9wzpcuji1que76zpa', 'openai-processing-ms': '4597', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '4602', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29852', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '296ms', 'x-request-id': 'req_58cce7b5a636147478a3a1f37111ef73', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9552187fccc78a08-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-25 11:04:29,162 [DEBUG] request_id: req_58cce7b5a636147478a3a1f37111ef73
2025-06-25 11:04:29,163 [INFO] Meal plan generated with 5 dishes
2025-06-25 11:04:29,164 [INFO] 127.0.0.1 - - [25/Jun/2025 11:04:29] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-25 14:15:37,975 [INFO] 127.0.0.1 - - [25/Jun/2025 14:15:37] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-25 14:15:48,533 [INFO] 127.0.0.1 - - [25/Jun/2025 14:15:48] "POST /calorie-calculator HTTP/1.1" 200 -
2025-06-25 14:15:54,659 [INFO] 127.0.0.1 - - [25/Jun/2025 14:15:54] "GET /calorie-calculator HTTP/1.1" 200 -
2025-06-25 14:15:58,139 [INFO] 127.0.0.1 - - [25/Jun/2025 14:15:58] "GET /meal-planner HTTP/1.1" 200 -
2025-06-25 14:16:33,810 [INFO] Received Input: give meal 2345 cal with 30% protein , 50% fats , 20 % carbs
2025-06-25 14:16:33,813 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e757bf2f-1b79-462d-a761-226bdfcae94e', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give meal 2345 cal with 30% protein , 50% fats , 20 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-25 14:16:33,815 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-25 14:16:33,816 [DEBUG] close.started
2025-06-25 14:16:33,817 [DEBUG] close.complete
2025-06-25 14:16:33,818 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-25 14:16:33,949 [DEBUG] connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021A22442D50>
2025-06-25 14:16:33,950 [DEBUG] start_tls.started ssl_context=<ssl.SSLContext object at 0x0000021A21A7FD10> server_hostname='api.openai.com' timeout=5.0
2025-06-25 14:16:33,994 [DEBUG] start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x0000021A22440810>
2025-06-25 14:16:33,995 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-25 14:16:33,996 [DEBUG] send_request_headers.complete
2025-06-25 14:16:33,996 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-25 14:16:33,997 [DEBUG] send_request_body.complete
2025-06-25 14:16:33,997 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-25 14:16:37,024 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 25 Jun 2025 08:46:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'2056'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2059'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29914'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'172ms'), (b'x-request-id', b'req_7d31c21fa25dc17e985ec48fbdc8d3bd'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=3O0dZNRUzMnfaGOEHgG_WcXOiraIH_EtZq3SofauVQE-1750841197-1.0.1.1-C_Bb60VUya9lHLcuVm3CmX_axjP2mrxtYlqSpd13O6R_9Ax4QUp9M0l9G9V5Ow.YyS2yWnpAVpd18iZt8xxEwOAKNYHis8s69Sb_dJlu2H8; path=/; expires=Wed, 25-Jun-25 09:16:37 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'955331fbe89d8a08-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-25 14:16:37,026 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-25 14:16:37,027 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-25 14:16:37,027 [DEBUG] receive_response_body.complete
2025-06-25 14:16:37,029 [DEBUG] response_closed.started
2025-06-25 14:16:37,029 [DEBUG] response_closed.complete
2025-06-25 14:16:37,030 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 25 Jun 2025 08:46:37 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-uj9yjhz9wzpcuji1que76zpa', 'openai-processing-ms': '2056', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2059', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29914', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '172ms', 'x-request-id': 'req_7d31c21fa25dc17e985ec48fbdc8d3bd', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=3O0dZNRUzMnfaGOEHgG_WcXOiraIH_EtZq3SofauVQE-1750841197-1.0.1.1-C_Bb60VUya9lHLcuVm3CmX_axjP2mrxtYlqSpd13O6R_9Ax4QUp9M0l9G9V5Ow.YyS2yWnpAVpd18iZt8xxEwOAKNYHis8s69Sb_dJlu2H8; path=/; expires=Wed, 25-Jun-25 09:16:37 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '955331fbe89d8a08-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-25 14:16:37,031 [DEBUG] request_id: req_7d31c21fa25dc17e985ec48fbdc8d3bd
2025-06-25 14:16:37,032 [INFO] LLM Raw Output:
```json
{
  "calories_target": 2345,
  "protein_pct": 30,
  "carbs_pct": 20,
  "fat_pct": 50,
  "fiber_min": 25,
  "sugar_max": 25,
  "sodium_max": 2300
}
```
2025-06-25 14:16:37,033 [INFO] Extracted Params: {'calories_target': 2345, 'protein_pct': 30, 'carbs_pct': 20, 'fat_pct': 50, 'fiber_min': 25, 'sugar_max': 25, 'sodium_max': 2300}
2025-06-25 14:16:37,058 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-fc58573c-0a9e-4da8-9513-f5248ec839b7', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are a friendly and health-aware assistant.\nConvert this nutritional summary and food list into a clear, natural language paragraph that is easy to understand.\n\nNutrition Summary:\nCalories: 2247.0 kcal\nProtein: 175.9 g\nCarbs: 117.3 g\nFat: 130.3 g\nFiber: 41.7 g\nSugar: 3.9 g\nSodium: 619.2 mg\n\nRecommended Meals:\nMeat stock (Non-Veg) for Any\nRoast chicken (Unknown) for Anytime\nBaked stuffed fish (Non-Veg) for Lunch/Dinner\nLemon chicken (Non-Veg) for Lunch, Dinner\nChicken salad (Non-Veg) for Lunch, Dinner\nCracked wheat and green gram dal premix (Dalia moong dal premix) (Veg) for Breakfast\nRice flakes and roasted channa (Veg) for Breakfast\nBengal 5 Spice Blend (Panch Phoran) (Veg) for Lunch/Dinner\n        '}], 'model': 'gpt-4o', 'max_tokens': 400, 'temperature': 0.7}}
2025-06-25 14:16:37,060 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-25 14:16:37,061 [DEBUG] send_request_headers.started request=<Request [b'POST']>
2025-06-25 14:16:37,062 [DEBUG] send_request_headers.complete
2025-06-25 14:16:37,062 [DEBUG] send_request_body.started request=<Request [b'POST']>
2025-06-25 14:16:37,062 [DEBUG] send_request_body.complete
2025-06-25 14:16:37,063 [DEBUG] receive_response_headers.started request=<Request [b'POST']>
2025-06-25 14:16:45,820 [DEBUG] receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 25 Jun 2025 08:46:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-uj9yjhz9wzpcuji1que76zpa'), (b'openai-processing-ms', b'7934'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'7959'), (b'x-ratelimit-limit-requests', b'500'), (b'x-ratelimit-limit-tokens', b'30000'), (b'x-ratelimit-remaining-requests', b'499'), (b'x-ratelimit-remaining-tokens', b'29819'), (b'x-ratelimit-reset-requests', b'120ms'), (b'x-ratelimit-reset-tokens', b'362ms'), (b'x-request-id', b'req_034becdd50c2591ef1ba7da2f64e3db7'), (b'strict-transport-security', b'max-age=31536000; includeSubDomains; preload'), (b'cf-cache-status', b'DYNAMIC'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9553320f1e5d8a08-BOM'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-06-25 14:16:45,822 [INFO] HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-06-25 14:16:45,822 [DEBUG] receive_response_body.started request=<Request [b'POST']>
2025-06-25 14:16:45,823 [DEBUG] receive_response_body.complete
2025-06-25 14:16:45,823 [DEBUG] response_closed.started
2025-06-25 14:16:45,823 [DEBUG] response_closed.complete
2025-06-25 14:16:45,824 [DEBUG] HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 25 Jun 2025 08:46:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-uj9yjhz9wzpcuji1que76zpa', 'openai-processing-ms': '7934', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '7959', 'x-ratelimit-limit-requests': '500', 'x-ratelimit-limit-tokens': '30000', 'x-ratelimit-remaining-requests': '499', 'x-ratelimit-remaining-tokens': '29819', 'x-ratelimit-reset-requests': '120ms', 'x-ratelimit-reset-tokens': '362ms', 'x-request-id': 'req_034becdd50c2591ef1ba7da2f64e3db7', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9553320f1e5d8a08-BOM', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-06-25 14:16:45,825 [DEBUG] request_id: req_034becdd50c2591ef1ba7da2f64e3db7
2025-06-25 14:16:45,827 [INFO] Meal plan generated with 8 dishes
2025-06-25 14:16:45,828 [INFO] 127.0.0.1 - - [25/Jun/2025 14:16:45] "POST /generate_meal_plan HTTP/1.1" 200 -
2025-06-27 17:19:09,287 [INFO] Received Input: give meal 2345 cal with 30% protein , 50% fats , 20 % carbs
2025-06-27 17:19:09,305 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-50b6977d-4539-43e2-a62a-3346c0018395', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give meal 2345 cal with 30% protein , 50% fats , 20 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-27 17:19:09,308 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-27 17:19:09,323 [DEBUG] close.started
2025-06-27 17:19:09,335 [DEBUG] close.complete
2025-06-27 17:19:09,374 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-27 17:19:09,421 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-27 17:19:09,423 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-27 17:19:09,539 [DEBUG] 2 retries left
2025-06-27 17:19:09,565 [INFO] Retrying request to /chat/completions in 0.481964 seconds
2025-06-27 17:19:10,068 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-50b6977d-4539-43e2-a62a-3346c0018395', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give meal 2345 cal with 30% protein , 50% fats , 20 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-27 17:19:10,070 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-27 17:19:10,072 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-27 17:19:10,073 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-27 17:19:10,074 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-27 17:19:10,090 [DEBUG] 1 retry left
2025-06-27 17:19:10,092 [INFO] Retrying request to /chat/completions in 0.957149 seconds
2025-06-27 17:19:11,056 [DEBUG] Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-50b6977d-4539-43e2-a62a-3346c0018395', 'json_data': {'messages': [{'role': 'system', 'content': '\nYou are a dietitian AI that extracts structured nutrition goals from natural language.\nReturn a JSON object with:\n- calories_target\n- protein_pct, carbs_pct, fat_pct (sum to 100)\n- fiber_min (default 25)\n- sugar_max (default 25)\n- sodium_max (default 2300)\n        '}, {'role': 'user', 'content': 'Input: give meal 2345 cal with 30% protein , 50% fats , 20 % carbs'}], 'model': 'gpt-4o', 'temperature': 0}}
2025-06-27 17:19:11,069 [DEBUG] Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-06-27 17:19:11,088 [DEBUG] connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
2025-06-27 17:19:11,114 [DEBUG] connect_tcp.failed exception=ConnectError(gaierror(11001, 'getaddrinfo failed'))
2025-06-27 17:19:11,121 [DEBUG] Encountered Exception
Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-06-27 17:19:11,156 [DEBUG] Raising connection error
2025-06-27 17:19:11,171 [ERROR] Error extracting preferences: Connection error.
2025-06-27 17:19:11,190 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-27 17:19:11,261 [ERROR] Exception: Connection error.
2025-06-27 17:19:11,282 [DEBUG] Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 256, in handle_request
    raise exc from None
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 101, in handle_request
    raise exc
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 78, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_sync\connection.py", line 124, in _connect
    stream = self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_backends\sync.py", line 207, in connect_tcp
    with map_exceptions(exc_map):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 969, in request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 914, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 249, in handle_request
    with map_httpcore_exceptions():
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 386, in generate_meal_plan
    params = extract_nutrition_preferences(user_input)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\OneDrive\Desktop\Meal_planner changes for bots\app.py", line 279, in extract_nutrition_preferences
    response = client.chat.completions.create(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_utils\_utils.py", line 287, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\resources\chat\completions\completions.py", line 925, in create
    return self._post(
           ^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1239, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sanke\AppData\Local\Programs\Python\Python311\Lib\site-packages\openai\_base_client.py", line 1001, in request
    raise APIConnectionError(request=request) from err
openai.APIConnectionError: Connection error.

2025-06-27 17:19:11,337 [INFO] 127.0.0.1 - - [27/Jun/2025 17:19:11] "[35m[1mPOST /generate_meal_plan HTTP/1.1[0m" 500 -
2025-09-25 07:47:24,940 [INFO] CSV loaded successfully.
2025-09-25 07:47:25,130 [INFO] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
2025-09-25 07:47:25,132 [INFO] [33mPress CTRL+C to quit[0m
2025-09-25 07:47:25,136 [INFO]  * Restarting with stat
2025-09-25 07:47:28,936 [INFO] CSV loaded successfully.
2025-09-25 07:47:28,979 [WARNING]  * Debugger is active!
2025-09-25 07:47:29,373 [INFO]  * Debugger PIN: 461-893-414
2025-09-25 07:52:18,224 [INFO] 127.0.0.1 - - [25/Sep/2025 07:52:18] "GET / HTTP/1.1" 200 -
2025-09-25 07:52:18,429 [INFO] 127.0.0.1 - - [25/Sep/2025 07:52:18] "GET /static/css/main.css HTTP/1.1" 200 -
2025-09-25 07:52:19,104 [INFO] 127.0.0.1 - - [25/Sep/2025 07:52:19] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
